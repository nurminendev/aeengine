<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>glext.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3-rc2 -->
<center>
<a class="qindex" href="index.php">Main Page</a> &nbsp; <a class="qindex" href="modules.php">Modules</a> &nbsp; <a class="qindex" href="hierarchy.php">Class Hierarchy</a> &nbsp; <a class="qindex" href="classes.php">Alphabetical List</a> &nbsp; <a class="qindex" href="annotated.php">Compound List</a> &nbsp; <a class="qindex" href="files.php">File List</a> &nbsp; <a class="qindex" href="functions.php">Compound Members</a> &nbsp; </center>
<hr><h1>glext.h</h1><div class="fragment"><pre>00001 <span class="preprocessor">#ifndef __glext_h_</span>
00002 <span class="preprocessor"></span><span class="preprocessor">#define __glext_h_</span>
00003 <span class="preprocessor"></span>
00004 <span class="preprocessor">#ifdef __cplusplus</span>
00005 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">"C"</span> {
00006 <span class="preprocessor">#endif</span>
00007 <span class="preprocessor"></span>
00008 <span class="comment">/*</span>
00009 <span class="comment">** License Applicability. Except to the extent portions of this file are</span>
00010 <span class="comment">** made subject to an alternative license as permitted in the SGI Free</span>
00011 <span class="comment">** Software License B, Version 1.1 (the "License"), the contents of this</span>
00012 <span class="comment">** file are subject only to the provisions of the License. You may not use</span>
00013 <span class="comment">** this file except in compliance with the License. You may obtain a copy</span>
00014 <span class="comment">** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600</span>
00015 <span class="comment">** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:</span>
00016 <span class="comment">** </span>
00017 <span class="comment">** http://oss.sgi.com/projects/FreeB</span>
00018 <span class="comment">** </span>
00019 <span class="comment">** Note that, as provided in the License, the Software is distributed on an</span>
00020 <span class="comment">** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS</span>
00021 <span class="comment">** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND</span>
00022 <span class="comment">** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A</span>
00023 <span class="comment">** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.</span>
00024 <span class="comment">** </span>
00025 <span class="comment">** Original Code. The Original Code is: OpenGL Sample Implementation,</span>
00026 <span class="comment">** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,</span>
00027 <span class="comment">** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.</span>
00028 <span class="comment">** Copyright in any portions created by third parties is as indicated</span>
00029 <span class="comment">** elsewhere herein. All Rights Reserved.</span>
00030 <span class="comment">** </span>
00031 <span class="comment">** Additional Notice Provisions: This software was created using the</span>
00032 <span class="comment">** OpenGL(R) version 1.2.1 Sample Implementation published by SGI, but has</span>
00033 <span class="comment">** not been independently verified as being compliant with the OpenGL(R)</span>
00034 <span class="comment">** version 1.2.1 Specification.</span>
00035 <span class="comment">*/</span>
00036 
00037 <span class="preprocessor">#if defined(_WIN32) &amp;&amp; !defined(APIENTRY) &amp;&amp; !defined(__CYGWIN__)</span>
00038 <span class="preprocessor"></span><span class="preprocessor">#define WIN32_LEAN_AND_MEAN 1</span>
00039 <span class="preprocessor"></span><span class="preprocessor">#include &lt;windows.h&gt;</span>
00040 <span class="preprocessor">#endif</span>
00041 <span class="preprocessor"></span>
00042 <span class="preprocessor">#ifndef APIENTRY</span>
00043 <span class="preprocessor"></span><span class="preprocessor">#define APIENTRY</span>
00044 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00045 <span class="preprocessor"></span><span class="preprocessor">#ifndef GLAPI</span>
00046 <span class="preprocessor"></span><span class="preprocessor">#define GLAPI extern</span>
00047 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00048 <span class="preprocessor"></span>
00049 <span class="comment">/*************************************************************/</span>
00050 
00051 <span class="comment">/* Header file version number, required by OpenGL ABI for Linux */</span>
00052 <span class="comment">/* glext.h last updated 2002/07/18 */</span>
00053 <span class="comment">/* Current version at http://oss.sgi.com/projects/ogl-sample/registry/ */</span>
00054 <span class="preprocessor">#define GL_GLEXT_VERSION 16</span>
00055 <span class="preprocessor"></span>
00056 <span class="preprocessor">#ifndef GL_VERSION_1_2</span>
00057 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_BYTE_3_3_2            0x8032</span>
00058 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_4_4_4_4         0x8033</span>
00059 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_5_5_5_1         0x8034</span>
00060 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_8_8_8_8           0x8035</span>
00061 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_10_10_10_2        0x8036</span>
00062 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESCALE_NORMAL                 0x803A</span>
00063 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_BYTE_2_3_3_REV        0x8362</span>
00064 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_5_6_5           0x8363</span>
00065 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_5_6_5_REV       0x8364</span>
00066 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_4_4_4_4_REV     0x8365</span>
00067 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_1_5_5_5_REV     0x8366</span>
00068 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_8_8_8_8_REV       0x8367</span>
00069 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_2_10_10_10_REV    0x8368</span>
00070 <span class="preprocessor"></span><span class="preprocessor">#define GL_BGR                            0x80E0</span>
00071 <span class="preprocessor"></span><span class="preprocessor">#define GL_BGRA                           0x80E1</span>
00072 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ELEMENTS_VERTICES          0x80E8</span>
00073 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ELEMENTS_INDICES           0x80E9</span>
00074 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLAMP_TO_EDGE                  0x812F</span>
00075 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MIN_LOD                0x813A</span>
00076 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_LOD                0x813B</span>
00077 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BASE_LEVEL             0x813C</span>
00078 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_LEVEL              0x813D</span>
00079 <span class="preprocessor"></span><span class="preprocessor">#define GL_LIGHT_MODEL_COLOR_CONTROL      0x81F8</span>
00080 <span class="preprocessor"></span><span class="preprocessor">#define GL_SINGLE_COLOR                   0x81F9</span>
00081 <span class="preprocessor"></span><span class="preprocessor">#define GL_SEPARATE_SPECULAR_COLOR        0x81FA</span>
00082 <span class="preprocessor"></span><span class="preprocessor">#define GL_SMOOTH_POINT_SIZE_RANGE        0x0B12</span>
00083 <span class="preprocessor"></span><span class="preprocessor">#define GL_SMOOTH_POINT_SIZE_GRANULARITY  0x0B13</span>
00084 <span class="preprocessor"></span><span class="preprocessor">#define GL_SMOOTH_LINE_WIDTH_RANGE        0x0B22</span>
00085 <span class="preprocessor"></span><span class="preprocessor">#define GL_SMOOTH_LINE_WIDTH_GRANULARITY  0x0B23</span>
00086 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALIASED_POINT_SIZE_RANGE       0x846D</span>
00087 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALIASED_LINE_WIDTH_RANGE       0x846E</span>
00088 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00089 <span class="preprocessor"></span>
00090 <span class="preprocessor">#ifndef GL_ARB_imaging</span>
00091 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_COLOR                 0x8001</span>
00092 <span class="preprocessor"></span><span class="preprocessor">#define GL_ONE_MINUS_CONSTANT_COLOR       0x8002</span>
00093 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_ALPHA                 0x8003</span>
00094 <span class="preprocessor"></span><span class="preprocessor">#define GL_ONE_MINUS_CONSTANT_ALPHA       0x8004</span>
00095 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_COLOR                    0x8005</span>
00096 <span class="preprocessor"></span><span class="preprocessor">#define GL_FUNC_ADD                       0x8006</span>
00097 <span class="preprocessor"></span><span class="preprocessor">#define GL_MIN                            0x8007</span>
00098 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX                            0x8008</span>
00099 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_EQUATION                 0x8009</span>
00100 <span class="preprocessor"></span><span class="preprocessor">#define GL_FUNC_SUBTRACT                  0x800A</span>
00101 <span class="preprocessor"></span><span class="preprocessor">#define GL_FUNC_REVERSE_SUBTRACT          0x800B</span>
00102 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_1D                 0x8010</span>
00103 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_2D                 0x8011</span>
00104 <span class="preprocessor"></span><span class="preprocessor">#define GL_SEPARABLE_2D                   0x8012</span>
00105 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_BORDER_MODE        0x8013</span>
00106 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_FILTER_SCALE       0x8014</span>
00107 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_FILTER_BIAS        0x8015</span>
00108 <span class="preprocessor"></span><span class="preprocessor">#define GL_REDUCE                         0x8016</span>
00109 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_FORMAT             0x8017</span>
00110 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_WIDTH              0x8018</span>
00111 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_HEIGHT             0x8019</span>
00112 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CONVOLUTION_WIDTH          0x801A</span>
00113 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CONVOLUTION_HEIGHT         0x801B</span>
00114 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_RED_SCALE     0x801C</span>
00115 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_GREEN_SCALE   0x801D</span>
00116 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_BLUE_SCALE    0x801E</span>
00117 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_ALPHA_SCALE   0x801F</span>
00118 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_RED_BIAS      0x8020</span>
00119 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_GREEN_BIAS    0x8021</span>
00120 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_BLUE_BIAS     0x8022</span>
00121 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_ALPHA_BIAS    0x8023</span>
00122 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM                      0x8024</span>
00123 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_HISTOGRAM                0x8025</span>
00124 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_WIDTH                0x8026</span>
00125 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_FORMAT               0x8027</span>
00126 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_RED_SIZE             0x8028</span>
00127 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_GREEN_SIZE           0x8029</span>
00128 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_BLUE_SIZE            0x802A</span>
00129 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_ALPHA_SIZE           0x802B</span>
00130 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_LUMINANCE_SIZE       0x802C</span>
00131 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_SINK                 0x802D</span>
00132 <span class="preprocessor"></span><span class="preprocessor">#define GL_MINMAX                         0x802E</span>
00133 <span class="preprocessor"></span><span class="preprocessor">#define GL_MINMAX_FORMAT                  0x802F</span>
00134 <span class="preprocessor"></span><span class="preprocessor">#define GL_MINMAX_SINK                    0x8030</span>
00135 <span class="preprocessor"></span><span class="preprocessor">#define GL_TABLE_TOO_LARGE                0x8031</span>
00136 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_MATRIX                   0x80B1</span>
00137 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_MATRIX_STACK_DEPTH       0x80B2</span>
00138 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_COLOR_MATRIX_STACK_DEPTH   0x80B3</span>
00139 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_RED_SCALE    0x80B4</span>
00140 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_GREEN_SCALE  0x80B5</span>
00141 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_BLUE_SCALE   0x80B6</span>
00142 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_ALPHA_SCALE  0x80B7</span>
00143 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_RED_BIAS     0x80B8</span>
00144 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_GREEN_BIAS   0x80B9</span>
00145 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_BLUE_BIAS    0x80BA</span>
00146 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATIX_ALPHA_BIAS    0x80BB</span>
00147 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE                    0x80D0</span>
00148 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_COLOR_TABLE   0x80D1</span>
00149 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_COLOR_TABLE  0x80D2</span>
00150 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_COLOR_TABLE              0x80D3</span>
00151 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4</span>
00152 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5</span>
00153 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_SCALE              0x80D6</span>
00154 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_BIAS               0x80D7</span>
00155 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_FORMAT             0x80D8</span>
00156 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_WIDTH              0x80D9</span>
00157 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_RED_SIZE           0x80DA</span>
00158 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_GREEN_SIZE         0x80DB</span>
00159 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_BLUE_SIZE          0x80DC</span>
00160 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_ALPHA_SIZE         0x80DD</span>
00161 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_LUMINANCE_SIZE     0x80DE</span>
00162 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_INTENSITY_SIZE     0x80DF</span>
00163 <span class="preprocessor"></span><span class="preprocessor">#define GL_IGNORE_BORDER                  0x8150</span>
00164 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_BORDER                0x8151</span>
00165 <span class="preprocessor"></span><span class="preprocessor">#define GL_WRAP_BORDER                    0x8152</span>
00166 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLICATE_BORDER               0x8153</span>
00167 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_BORDER_COLOR       0x8154</span>
00168 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00169 <span class="preprocessor"></span>
00170 <span class="preprocessor">#ifndef GL_VERSION_1_3</span>
00171 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE0                       0x84C0</span>
00172 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE1                       0x84C1</span>
00173 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE2                       0x84C2</span>
00174 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE3                       0x84C3</span>
00175 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE4                       0x84C4</span>
00176 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE5                       0x84C5</span>
00177 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE6                       0x84C6</span>
00178 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE7                       0x84C7</span>
00179 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE8                       0x84C8</span>
00180 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE9                       0x84C9</span>
00181 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE10                      0x84CA</span>
00182 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE11                      0x84CB</span>
00183 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE12                      0x84CC</span>
00184 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE13                      0x84CD</span>
00185 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE14                      0x84CE</span>
00186 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE15                      0x84CF</span>
00187 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE16                      0x84D0</span>
00188 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE17                      0x84D1</span>
00189 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE18                      0x84D2</span>
00190 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE19                      0x84D3</span>
00191 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE20                      0x84D4</span>
00192 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE21                      0x84D5</span>
00193 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE22                      0x84D6</span>
00194 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE23                      0x84D7</span>
00195 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE24                      0x84D8</span>
00196 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE25                      0x84D9</span>
00197 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE26                      0x84DA</span>
00198 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE27                      0x84DB</span>
00199 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE28                      0x84DC</span>
00200 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE29                      0x84DD</span>
00201 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE30                      0x84DE</span>
00202 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE31                      0x84DF</span>
00203 <span class="preprocessor"></span><span class="preprocessor">#define GL_ACTIVE_TEXTURE                 0x84E0</span>
00204 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLIENT_ACTIVE_TEXTURE          0x84E1</span>
00205 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_TEXTURE_UNITS              0x84E2</span>
00206 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_MODELVIEW_MATRIX     0x84E3</span>
00207 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_PROJECTION_MATRIX    0x84E4</span>
00208 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_TEXTURE_MATRIX       0x84E5</span>
00209 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_COLOR_MATRIX         0x84E6</span>
00210 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE                    0x809D</span>
00211 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_COVERAGE       0x809E</span>
00212 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_ONE            0x809F</span>
00213 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_COVERAGE                0x80A0</span>
00214 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_BUFFERS                 0x80A8</span>
00215 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLES                        0x80A9</span>
00216 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_COVERAGE_VALUE          0x80AA</span>
00217 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_COVERAGE_INVERT         0x80AB</span>
00218 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_BIT                0x20000000</span>
00219 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_MAP                     0x8511</span>
00220 <span class="preprocessor"></span><span class="preprocessor">#define GL_REFLECTION_MAP                 0x8512</span>
00221 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP               0x8513</span>
00222 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BINDING_CUBE_MAP       0x8514</span>
00223 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_X    0x8515</span>
00224 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X    0x8516</span>
00225 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y    0x8517</span>
00226 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    0x8518</span>
00227 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z    0x8519</span>
00228 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    0x851A</span>
00229 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_CUBE_MAP         0x851B</span>
00230 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CUBE_MAP_TEXTURE_SIZE      0x851C</span>
00231 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_ALPHA               0x84E9</span>
00232 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_LUMINANCE           0x84EA</span>
00233 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_LUMINANCE_ALPHA     0x84EB</span>
00234 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_INTENSITY           0x84EC</span>
00235 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGB                 0x84ED</span>
00236 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGBA                0x84EE</span>
00237 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPRESSION_HINT       0x84EF</span>
00238 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE  0x86A0</span>
00239 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPRESSED             0x86A1</span>
00240 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2</span>
00241 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_TEXTURE_FORMATS     0x86A3</span>
00242 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLAMP_TO_BORDER                0x812D</span>
00243 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLAMP_TO_BORDER_SGIS           0x812D</span>
00244 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE                        0x8570</span>
00245 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_RGB                    0x8571</span>
00246 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_ALPHA                  0x8572</span>
00247 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE0_RGB                    0x8580</span>
00248 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE1_RGB                    0x8581</span>
00249 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE2_RGB                    0x8582</span>
00250 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE0_ALPHA                  0x8588</span>
00251 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE1_ALPHA                  0x8589</span>
00252 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE2_ALPHA                  0x858A</span>
00253 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND0_RGB                   0x8590</span>
00254 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND1_RGB                   0x8591</span>
00255 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND2_RGB                   0x8592</span>
00256 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND0_ALPHA                 0x8598</span>
00257 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND1_ALPHA                 0x8599</span>
00258 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND2_ALPHA                 0x859A</span>
00259 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB_SCALE                      0x8573</span>
00260 <span class="preprocessor"></span><span class="preprocessor">#define GL_ADD_SIGNED                     0x8574</span>
00261 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERPOLATE                    0x8575</span>
00262 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUBTRACT                       0x84E7</span>
00263 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT                       0x8576</span>
00264 <span class="preprocessor"></span><span class="preprocessor">#define GL_PRIMARY_COLOR                  0x8577</span>
00265 <span class="preprocessor"></span><span class="preprocessor">#define GL_PREVIOUS                       0x8578</span>
00266 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_RGB                       0x86AE</span>
00267 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_RGBA                      0x86AF</span>
00268 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00269 <span class="preprocessor"></span>
00270 <span class="preprocessor">#ifndef GL_ARB_multitexture</span>
00271 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE0_ARB                   0x84C0</span>
00272 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE1_ARB                   0x84C1</span>
00273 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE2_ARB                   0x84C2</span>
00274 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE3_ARB                   0x84C3</span>
00275 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE4_ARB                   0x84C4</span>
00276 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE5_ARB                   0x84C5</span>
00277 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE6_ARB                   0x84C6</span>
00278 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE7_ARB                   0x84C7</span>
00279 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE8_ARB                   0x84C8</span>
00280 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE9_ARB                   0x84C9</span>
00281 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE10_ARB                  0x84CA</span>
00282 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE11_ARB                  0x84CB</span>
00283 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE12_ARB                  0x84CC</span>
00284 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE13_ARB                  0x84CD</span>
00285 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE14_ARB                  0x84CE</span>
00286 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE15_ARB                  0x84CF</span>
00287 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE16_ARB                  0x84D0</span>
00288 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE17_ARB                  0x84D1</span>
00289 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE18_ARB                  0x84D2</span>
00290 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE19_ARB                  0x84D3</span>
00291 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE20_ARB                  0x84D4</span>
00292 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE21_ARB                  0x84D5</span>
00293 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE22_ARB                  0x84D6</span>
00294 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE23_ARB                  0x84D7</span>
00295 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE24_ARB                  0x84D8</span>
00296 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE25_ARB                  0x84D9</span>
00297 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE26_ARB                  0x84DA</span>
00298 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE27_ARB                  0x84DB</span>
00299 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE28_ARB                  0x84DC</span>
00300 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE29_ARB                  0x84DD</span>
00301 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE30_ARB                  0x84DE</span>
00302 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE31_ARB                  0x84DF</span>
00303 <span class="preprocessor"></span><span class="preprocessor">#define GL_ACTIVE_TEXTURE_ARB             0x84E0</span>
00304 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLIENT_ACTIVE_TEXTURE_ARB      0x84E1</span>
00305 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_TEXTURE_UNITS_ARB          0x84E2</span>
00306 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00307 <span class="preprocessor"></span>
00308 <span class="preprocessor">#ifndef GL_ARB_transpose_matrix</span>
00309 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3</span>
00310 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4</span>
00311 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB   0x84E5</span>
00312 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_COLOR_MATRIX_ARB     0x84E6</span>
00313 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00314 <span class="preprocessor"></span>
00315 <span class="preprocessor">#ifndef GL_ARB_multisample</span>
00316 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_ARB                0x809D</span>
00317 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB   0x809E</span>
00318 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_ONE_ARB        0x809F</span>
00319 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_COVERAGE_ARB            0x80A0</span>
00320 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_BUFFERS_ARB             0x80A8</span>
00321 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLES_ARB                    0x80A9</span>
00322 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_COVERAGE_VALUE_ARB      0x80AA</span>
00323 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_COVERAGE_INVERT_ARB     0x80AB</span>
00324 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_BIT_ARB            0x20000000</span>
00325 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00326 <span class="preprocessor"></span>
00327 <span class="preprocessor">#ifndef GL_ARB_texture_env_add</span>
00328 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00329 <span class="preprocessor"></span>
00330 <span class="preprocessor">#ifndef GL_ARB_texture_cube_map</span>
00331 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_MAP_ARB                 0x8511</span>
00332 <span class="preprocessor"></span><span class="preprocessor">#define GL_REFLECTION_MAP_ARB             0x8512</span>
00333 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_ARB           0x8513</span>
00334 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BINDING_CUBE_MAP_ARB   0x8514</span>
00335 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515</span>
00336 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516</span>
00337 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517</span>
00338 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518</span>
00339 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519</span>
00340 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A</span>
00341 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_CUBE_MAP_ARB     0x851B</span>
00342 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB  0x851C</span>
00343 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00344 <span class="preprocessor"></span>
00345 <span class="preprocessor">#ifndef GL_ARB_texture_compression</span>
00346 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_ALPHA_ARB           0x84E9</span>
00347 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_LUMINANCE_ARB       0x84EA</span>
00348 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB</span>
00349 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_INTENSITY_ARB       0x84EC</span>
00350 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGB_ARB             0x84ED</span>
00351 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGBA_ARB            0x84EE</span>
00352 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPRESSION_HINT_ARB   0x84EF</span>
00353 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0</span>
00354 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPRESSED_ARB         0x86A1</span>
00355 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2</span>
00356 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3</span>
00357 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00358 <span class="preprocessor"></span>
00359 <span class="preprocessor">#ifndef GL_ARB_texture_border_clamp</span>
00360 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLAMP_TO_BORDER_ARB            0x812D</span>
00361 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00362 <span class="preprocessor"></span>
00363 <span class="preprocessor">#ifndef GL_ARB_point_parameters</span>
00364 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SIZE_MIN_ARB             0x8126</span>
00365 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SIZE_MIN_EXT             0x8126</span>
00366 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SIZE_MIN_SGIS            0x8126</span>
00367 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SIZE_MAX_ARB             0x8127</span>
00368 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SIZE_MAX_EXT             0x8127</span>
00369 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SIZE_MAX_SGIS            0x8127</span>
00370 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_FADE_THRESHOLD_SIZE_ARB  0x8128</span>
00371 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_FADE_THRESHOLD_SIZE_EXT  0x8128</span>
00372 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128</span>
00373 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129</span>
00374 <span class="preprocessor"></span><span class="preprocessor">#define GL_DISTANCE_ATTENUATION_EXT       0x8129</span>
00375 <span class="preprocessor"></span><span class="preprocessor">#define GL_DISTANCE_ATTENUATION_SGIS      0x8129</span>
00376 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00377 <span class="preprocessor"></span>
00378 <span class="preprocessor">#ifndef GL_ARB_vertex_blend</span>
00379 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_UNITS_ARB           0x86A4</span>
00380 <span class="preprocessor"></span><span class="preprocessor">#define GL_ACTIVE_VERTEX_UNITS_ARB        0x86A5</span>
00381 <span class="preprocessor"></span><span class="preprocessor">#define GL_WEIGHT_SUM_UNITY_ARB           0x86A6</span>
00382 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_BLEND_ARB               0x86A7</span>
00383 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_WEIGHT_ARB             0x86A8</span>
00384 <span class="preprocessor"></span><span class="preprocessor">#define GL_WEIGHT_ARRAY_TYPE_ARB          0x86A9</span>
00385 <span class="preprocessor"></span><span class="preprocessor">#define GL_WEIGHT_ARRAY_STRIDE_ARB        0x86AA</span>
00386 <span class="preprocessor"></span><span class="preprocessor">#define GL_WEIGHT_ARRAY_SIZE_ARB          0x86AB</span>
00387 <span class="preprocessor"></span><span class="preprocessor">#define GL_WEIGHT_ARRAY_POINTER_ARB       0x86AC</span>
00388 <span class="preprocessor"></span><span class="preprocessor">#define GL_WEIGHT_ARRAY_ARB               0x86AD</span>
00389 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW0_ARB                 0x1700</span>
00390 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW1_ARB                 0x850A</span>
00391 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW2_ARB                 0x8722</span>
00392 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW3_ARB                 0x8723</span>
00393 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW4_ARB                 0x8724</span>
00394 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW5_ARB                 0x8725</span>
00395 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW6_ARB                 0x8726</span>
00396 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW7_ARB                 0x8727</span>
00397 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW8_ARB                 0x8728</span>
00398 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW9_ARB                 0x8729</span>
00399 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW10_ARB                0x872A</span>
00400 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW11_ARB                0x872B</span>
00401 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW12_ARB                0x872C</span>
00402 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW13_ARB                0x872D</span>
00403 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW14_ARB                0x872E</span>
00404 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW15_ARB                0x872F</span>
00405 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW16_ARB                0x8730</span>
00406 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW17_ARB                0x8731</span>
00407 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW18_ARB                0x8732</span>
00408 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW19_ARB                0x8733</span>
00409 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW20_ARB                0x8734</span>
00410 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW21_ARB                0x8735</span>
00411 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW22_ARB                0x8736</span>
00412 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW23_ARB                0x8737</span>
00413 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW24_ARB                0x8738</span>
00414 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW25_ARB                0x8739</span>
00415 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW26_ARB                0x873A</span>
00416 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW27_ARB                0x873B</span>
00417 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW28_ARB                0x873C</span>
00418 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW29_ARB                0x873D</span>
00419 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW30_ARB                0x873E</span>
00420 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW31_ARB                0x873F</span>
00421 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00422 <span class="preprocessor"></span>
00423 <span class="preprocessor">#ifndef GL_ARB_matrix_palette</span>
00424 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_PALETTE_ARB             0x8840</span>
00425 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841</span>
00426 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_PALETTE_MATRICES_ARB       0x8842</span>
00427 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_PALETTE_MATRIX_ARB     0x8843</span>
00428 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_INDEX_ARRAY_ARB         0x8844</span>
00429 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_MATRIX_INDEX_ARB       0x8845</span>
00430 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB    0x8846</span>
00431 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB    0x8847</span>
00432 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB  0x8848</span>
00433 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849</span>
00434 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00435 <span class="preprocessor"></span>
00436 <span class="preprocessor">#ifndef GL_ARB_texture_env_combine</span>
00437 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_ARB                    0x8570</span>
00438 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_RGB_ARB                0x8571</span>
00439 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_ALPHA_ARB              0x8572</span>
00440 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE0_RGB_ARB                0x8580</span>
00441 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE1_RGB_ARB                0x8581</span>
00442 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE2_RGB_ARB                0x8582</span>
00443 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE0_ALPHA_ARB              0x8588</span>
00444 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE1_ALPHA_ARB              0x8589</span>
00445 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE2_ALPHA_ARB              0x858A</span>
00446 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND0_RGB_ARB               0x8590</span>
00447 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND1_RGB_ARB               0x8591</span>
00448 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND2_RGB_ARB               0x8592</span>
00449 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND0_ALPHA_ARB             0x8598</span>
00450 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND1_ALPHA_ARB             0x8599</span>
00451 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND2_ALPHA_ARB             0x859A</span>
00452 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB_SCALE_ARB                  0x8573</span>
00453 <span class="preprocessor"></span><span class="preprocessor">#define GL_ADD_SIGNED_ARB                 0x8574</span>
00454 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERPOLATE_ARB                0x8575</span>
00455 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUBTRACT_ARB                   0x84E7</span>
00456 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_ARB                   0x8576</span>
00457 <span class="preprocessor"></span><span class="preprocessor">#define GL_PRIMARY_COLOR_ARB              0x8577</span>
00458 <span class="preprocessor"></span><span class="preprocessor">#define GL_PREVIOUS_ARB                   0x8578</span>
00459 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00460 <span class="preprocessor"></span>
00461 <span class="preprocessor">#ifndef GL_ARB_texture_env_crossbar</span>
00462 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00463 <span class="preprocessor"></span>
00464 <span class="preprocessor">#ifndef GL_ARB_texture_env_dot3</span>
00465 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_RGB_ARB                   0x86AE</span>
00466 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_RGBA_ARB                  0x86AF</span>
00467 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00468 <span class="preprocessor"></span>
00469 <span class="preprocessor">#ifndef GL_ARB_texture_mirrored_repeat</span>
00470 <span class="preprocessor"></span><span class="preprocessor">#define GL_MIRRORED_REPEAT_ARB            0x8370</span>
00471 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00472 <span class="preprocessor"></span>
00473 <span class="preprocessor">#ifndef GL_ARB_depth_texture</span>
00474 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_COMPONENT16_ARB          0x81A5</span>
00475 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_COMPONENT24_ARB          0x81A6</span>
00476 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_COMPONENT32_ARB          0x81A7</span>
00477 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DEPTH_SIZE_ARB         0x884A</span>
00478 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_TEXTURE_MODE_ARB         0x884B</span>
00479 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00480 <span class="preprocessor"></span>
00481 <span class="preprocessor">#ifndef GL_ARB_shadow</span>
00482 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPARE_MODE_ARB       0x884C</span>
00483 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPARE_FUNC_ARB       0x884D</span>
00484 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPARE_R_TO_TEXTURE_ARB       0x884E</span>
00485 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00486 <span class="preprocessor"></span>
00487 <span class="preprocessor">#ifndef GL_ARB_shadow_ambient</span>
00488 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF</span>
00489 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00490 <span class="preprocessor"></span>
00491 <span class="preprocessor">#ifndef GL_ARB_window_pos</span>
00492 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00493 <span class="preprocessor"></span>
00494 <span class="preprocessor">#ifndef GL_EXT_abgr</span>
00495 <span class="preprocessor"></span><span class="preprocessor">#define GL_ABGR_EXT                       0x8000</span>
00496 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00497 <span class="preprocessor"></span>
00498 <span class="preprocessor">#ifndef GL_EXT_blend_color</span>
00499 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_COLOR_EXT             0x8001</span>
00500 <span class="preprocessor"></span><span class="preprocessor">#define GL_ONE_MINUS_CONSTANT_COLOR_EXT   0x8002</span>
00501 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_ALPHA_EXT             0x8003</span>
00502 <span class="preprocessor"></span><span class="preprocessor">#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT   0x8004</span>
00503 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_COLOR_EXT                0x8005</span>
00504 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00505 <span class="preprocessor"></span>
00506 <span class="preprocessor">#ifndef GL_EXT_polygon_offset</span>
00507 <span class="preprocessor"></span><span class="preprocessor">#define GL_POLYGON_OFFSET_EXT             0x8037</span>
00508 <span class="preprocessor"></span><span class="preprocessor">#define GL_POLYGON_OFFSET_FACTOR_EXT      0x8038</span>
00509 <span class="preprocessor"></span><span class="preprocessor">#define GL_POLYGON_OFFSET_BIAS_EXT        0x8039</span>
00510 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00511 <span class="preprocessor"></span>
00512 <span class="preprocessor">#ifndef GL_EXT_texture</span>
00513 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA4_EXT                     0x803B</span>
00514 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA8_EXT                     0x803C</span>
00515 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA12_EXT                    0x803D</span>
00516 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA16_EXT                    0x803E</span>
00517 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE4_EXT                 0x803F</span>
00518 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE8_EXT                 0x8040</span>
00519 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE12_EXT                0x8041</span>
00520 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE16_EXT                0x8042</span>
00521 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE4_ALPHA4_EXT          0x8043</span>
00522 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE6_ALPHA2_EXT          0x8044</span>
00523 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE8_ALPHA8_EXT          0x8045</span>
00524 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE12_ALPHA4_EXT         0x8046</span>
00525 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE12_ALPHA12_EXT        0x8047</span>
00526 <span class="preprocessor"></span><span class="preprocessor">#define GL_LUMINANCE16_ALPHA16_EXT        0x8048</span>
00527 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTENSITY_EXT                  0x8049</span>
00528 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTENSITY4_EXT                 0x804A</span>
00529 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTENSITY8_EXT                 0x804B</span>
00530 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTENSITY12_EXT                0x804C</span>
00531 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTENSITY16_EXT                0x804D</span>
00532 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB2_EXT                       0x804E</span>
00533 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB4_EXT                       0x804F</span>
00534 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB5_EXT                       0x8050</span>
00535 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB8_EXT                       0x8051</span>
00536 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB10_EXT                      0x8052</span>
00537 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB12_EXT                      0x8053</span>
00538 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB16_EXT                      0x8054</span>
00539 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGBA2_EXT                      0x8055</span>
00540 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGBA4_EXT                      0x8056</span>
00541 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB5_A1_EXT                    0x8057</span>
00542 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGBA8_EXT                      0x8058</span>
00543 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB10_A2_EXT                   0x8059</span>
00544 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGBA12_EXT                     0x805A</span>
00545 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGBA16_EXT                     0x805B</span>
00546 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_RED_SIZE_EXT           0x805C</span>
00547 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_GREEN_SIZE_EXT         0x805D</span>
00548 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BLUE_SIZE_EXT          0x805E</span>
00549 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_ALPHA_SIZE_EXT         0x805F</span>
00550 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LUMINANCE_SIZE_EXT     0x8060</span>
00551 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_INTENSITY_SIZE_EXT     0x8061</span>
00552 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACE_EXT                    0x8062</span>
00553 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_1D_EXT           0x8063</span>
00554 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_2D_EXT           0x8064</span>
00555 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_TOO_LARGE_EXT          0x8065</span>
00556 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00557 <span class="preprocessor"></span>
00558 <span class="preprocessor">#ifndef GL_EXT_texture3D</span>
00559 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_SKIP_IMAGES               0x806B</span>
00560 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_SKIP_IMAGES_EXT           0x806B</span>
00561 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_IMAGE_HEIGHT              0x806C</span>
00562 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_IMAGE_HEIGHT_EXT          0x806C</span>
00563 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_SKIP_IMAGES             0x806D</span>
00564 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_SKIP_IMAGES_EXT         0x806D</span>
00565 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_IMAGE_HEIGHT            0x806E</span>
00566 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_IMAGE_HEIGHT_EXT        0x806E</span>
00567 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_3D                     0x806F</span>
00568 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_3D_EXT                 0x806F</span>
00569 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_3D               0x8070</span>
00570 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_3D_EXT           0x8070</span>
00571 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DEPTH                  0x8071</span>
00572 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DEPTH_EXT              0x8071</span>
00573 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_WRAP_R                 0x8072</span>
00574 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_WRAP_R_EXT             0x8072</span>
00575 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_3D_TEXTURE_SIZE            0x8073</span>
00576 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_3D_TEXTURE_SIZE_EXT        0x8073</span>
00577 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00578 <span class="preprocessor"></span>
00579 <span class="preprocessor">#ifndef GL_SGIS_texture_filter4</span>
00580 <span class="preprocessor"></span><span class="preprocessor">#define GL_FILTER4_SGIS                   0x8146</span>
00581 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_FILTER4_SIZE_SGIS      0x8147</span>
00582 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00583 <span class="preprocessor"></span>
00584 <span class="preprocessor">#ifndef GL_EXT_subtexture</span>
00585 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00586 <span class="preprocessor"></span>
00587 <span class="preprocessor">#ifndef GL_EXT_copy_texture</span>
00588 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00589 <span class="preprocessor"></span>
00590 <span class="preprocessor">#ifndef GL_EXT_histogram</span>
00591 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_EXT                  0x8024</span>
00592 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_HISTOGRAM_EXT            0x8025</span>
00593 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_WIDTH_EXT            0x8026</span>
00594 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_FORMAT_EXT           0x8027</span>
00595 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_RED_SIZE_EXT         0x8028</span>
00596 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_GREEN_SIZE_EXT       0x8029</span>
00597 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_BLUE_SIZE_EXT        0x802A</span>
00598 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_ALPHA_SIZE_EXT       0x802B</span>
00599 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT   0x802C</span>
00600 <span class="preprocessor"></span><span class="preprocessor">#define GL_HISTOGRAM_SINK_EXT             0x802D</span>
00601 <span class="preprocessor"></span><span class="preprocessor">#define GL_MINMAX_EXT                     0x802E</span>
00602 <span class="preprocessor"></span><span class="preprocessor">#define GL_MINMAX_FORMAT_EXT              0x802F</span>
00603 <span class="preprocessor"></span><span class="preprocessor">#define GL_MINMAX_SINK_EXT                0x8030</span>
00604 <span class="preprocessor"></span><span class="preprocessor">#define GL_TABLE_TOO_LARGE_EXT            0x8031</span>
00605 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00606 <span class="preprocessor"></span>
00607 <span class="preprocessor">#ifndef GL_EXT_convolution</span>
00608 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_1D_EXT             0x8010</span>
00609 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_2D_EXT             0x8011</span>
00610 <span class="preprocessor"></span><span class="preprocessor">#define GL_SEPARABLE_2D_EXT               0x8012</span>
00611 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_BORDER_MODE_EXT    0x8013</span>
00612 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_FILTER_SCALE_EXT   0x8014</span>
00613 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_FILTER_BIAS_EXT    0x8015</span>
00614 <span class="preprocessor"></span><span class="preprocessor">#define GL_REDUCE_EXT                     0x8016</span>
00615 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_FORMAT_EXT         0x8017</span>
00616 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_WIDTH_EXT          0x8018</span>
00617 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_HEIGHT_EXT         0x8019</span>
00618 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CONVOLUTION_WIDTH_EXT      0x801A</span>
00619 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CONVOLUTION_HEIGHT_EXT     0x801B</span>
00620 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C</span>
00621 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D</span>
00622 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E</span>
00623 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F</span>
00624 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_RED_BIAS_EXT  0x8020</span>
00625 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021</span>
00626 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022</span>
00627 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023</span>
00628 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00629 <span class="preprocessor"></span>
00630 <span class="preprocessor">#ifndef GL_SGI_color_matrix</span>
00631 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_MATRIX_SGI               0x80B1</span>
00632 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_MATRIX_STACK_DEPTH_SGI   0x80B2</span>
00633 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3</span>
00634 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4</span>
00635 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5</span>
00636 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6</span>
00637 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7</span>
00638 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8</span>
00639 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9</span>
00640 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA</span>
00641 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB</span>
00642 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00643 <span class="preprocessor"></span>
00644 <span class="preprocessor">#ifndef GL_SGI_color_table</span>
00645 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_SGI                0x80D0</span>
00646 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1</span>
00647 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2</span>
00648 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_COLOR_TABLE_SGI          0x80D3</span>
00649 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4</span>
00650 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5</span>
00651 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_SCALE_SGI          0x80D6</span>
00652 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_BIAS_SGI           0x80D7</span>
00653 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_FORMAT_SGI         0x80D8</span>
00654 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_WIDTH_SGI          0x80D9</span>
00655 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_RED_SIZE_SGI       0x80DA</span>
00656 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_GREEN_SIZE_SGI     0x80DB</span>
00657 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_BLUE_SIZE_SGI      0x80DC</span>
00658 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_ALPHA_SIZE_SGI     0x80DD</span>
00659 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE</span>
00660 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF</span>
00661 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00662 <span class="preprocessor"></span>
00663 <span class="preprocessor">#ifndef GL_SGIS_pixel_texture</span>
00664 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEXTURE_SGIS             0x8353</span>
00665 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354</span>
00666 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355</span>
00667 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_GROUP_COLOR_SGIS         0x8356</span>
00668 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00669 <span class="preprocessor"></span>
00670 <span class="preprocessor">#ifndef GL_SGIX_pixel_texture</span>
00671 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_SGIX             0x8139</span>
00672 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_MODE_SGIX        0x832B</span>
00673 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00674 <span class="preprocessor"></span>
00675 <span class="preprocessor">#ifndef GL_SGIS_texture4D</span>
00676 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_SKIP_VOLUMES_SGIS         0x8130</span>
00677 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_IMAGE_DEPTH_SGIS          0x8131</span>
00678 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_SKIP_VOLUMES_SGIS       0x8132</span>
00679 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_IMAGE_DEPTH_SGIS        0x8133</span>
00680 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_4D_SGIS                0x8134</span>
00681 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_4D_SGIS          0x8135</span>
00682 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_4DSIZE_SGIS            0x8136</span>
00683 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_WRAP_Q_SGIS            0x8137</span>
00684 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_4D_TEXTURE_SIZE_SGIS       0x8138</span>
00685 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_4D_BINDING_SGIS        0x814F</span>
00686 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00687 <span class="preprocessor"></span>
00688 <span class="preprocessor">#ifndef GL_SGI_texture_color_table</span>
00689 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COLOR_TABLE_SGI        0x80BC</span>
00690 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI  0x80BD</span>
00691 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00692 <span class="preprocessor"></span>
00693 <span class="preprocessor">#ifndef GL_EXT_cmyka</span>
00694 <span class="preprocessor"></span><span class="preprocessor">#define GL_CMYK_EXT                       0x800C</span>
00695 <span class="preprocessor"></span><span class="preprocessor">#define GL_CMYKA_EXT                      0x800D</span>
00696 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_CMYK_HINT_EXT             0x800E</span>
00697 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_CMYK_HINT_EXT           0x800F</span>
00698 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00699 <span class="preprocessor"></span>
00700 <span class="preprocessor">#ifndef GL_EXT_texture_object</span>
00701 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_PRIORITY_EXT           0x8066</span>
00702 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_RESIDENT_EXT           0x8067</span>
00703 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_1D_BINDING_EXT         0x8068</span>
00704 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_2D_BINDING_EXT         0x8069</span>
00705 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_3D_BINDING_EXT         0x806A</span>
00706 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00707 <span class="preprocessor"></span>
00708 <span class="preprocessor">#ifndef GL_SGIS_detail_texture</span>
00709 <span class="preprocessor"></span><span class="preprocessor">#define GL_DETAIL_TEXTURE_2D_SGIS         0x8095</span>
00710 <span class="preprocessor"></span><span class="preprocessor">#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096</span>
00711 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_DETAIL_SGIS             0x8097</span>
00712 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_DETAIL_ALPHA_SGIS       0x8098</span>
00713 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_DETAIL_COLOR_SGIS       0x8099</span>
00714 <span class="preprocessor"></span><span class="preprocessor">#define GL_DETAIL_TEXTURE_LEVEL_SGIS      0x809A</span>
00715 <span class="preprocessor"></span><span class="preprocessor">#define GL_DETAIL_TEXTURE_MODE_SGIS       0x809B</span>
00716 <span class="preprocessor"></span><span class="preprocessor">#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C</span>
00717 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00718 <span class="preprocessor"></span>
00719 <span class="preprocessor">#ifndef GL_SGIS_sharpen_texture</span>
00720 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_SHARPEN_SGIS            0x80AD</span>
00721 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_SHARPEN_ALPHA_SGIS      0x80AE</span>
00722 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_SHARPEN_COLOR_SGIS      0x80AF</span>
00723 <span class="preprocessor"></span><span class="preprocessor">#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0</span>
00724 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00725 <span class="preprocessor"></span>
00726 <span class="preprocessor">#ifndef GL_EXT_packed_pixels</span>
00727 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_BYTE_3_3_2_EXT        0x8032</span>
00728 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_4_4_4_4_EXT     0x8033</span>
00729 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_SHORT_5_5_5_1_EXT     0x8034</span>
00730 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_8_8_8_8_EXT       0x8035</span>
00731 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_10_10_10_2_EXT    0x8036</span>
00732 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00733 <span class="preprocessor"></span>
00734 <span class="preprocessor">#ifndef GL_SGIS_texture_lod</span>
00735 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MIN_LOD_SGIS           0x813A</span>
00736 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_LOD_SGIS           0x813B</span>
00737 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BASE_LEVEL_SGIS        0x813C</span>
00738 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_LEVEL_SGIS         0x813D</span>
00739 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00740 <span class="preprocessor"></span>
00741 <span class="preprocessor">#ifndef GL_SGIS_multisample</span>
00742 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_SGIS               0x809D</span>
00743 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_MASK_SGIS      0x809E</span>
00744 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_ONE_SGIS       0x809F</span>
00745 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_MASK_SGIS               0x80A0</span>
00746 <span class="preprocessor"></span><span class="preprocessor">#define GL_1PASS_SGIS                     0x80A1</span>
00747 <span class="preprocessor"></span><span class="preprocessor">#define GL_2PASS_0_SGIS                   0x80A2</span>
00748 <span class="preprocessor"></span><span class="preprocessor">#define GL_2PASS_1_SGIS                   0x80A3</span>
00749 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_0_SGIS                   0x80A4</span>
00750 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_1_SGIS                   0x80A5</span>
00751 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_2_SGIS                   0x80A6</span>
00752 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_3_SGIS                   0x80A7</span>
00753 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_BUFFERS_SGIS            0x80A8</span>
00754 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLES_SGIS                   0x80A9</span>
00755 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_MASK_VALUE_SGIS         0x80AA</span>
00756 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_MASK_INVERT_SGIS        0x80AB</span>
00757 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_PATTERN_SGIS            0x80AC</span>
00758 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00759 <span class="preprocessor"></span>
00760 <span class="preprocessor">#ifndef GL_EXT_rescale_normal</span>
00761 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESCALE_NORMAL_EXT             0x803A</span>
00762 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00763 <span class="preprocessor"></span>
00764 <span class="preprocessor">#ifndef GL_EXT_vertex_array</span>
00765 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_EXT               0x8074</span>
00766 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_EXT               0x8075</span>
00767 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_EXT                0x8076</span>
00768 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_EXT                0x8077</span>
00769 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_EXT        0x8078</span>
00770 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGE_FLAG_ARRAY_EXT            0x8079</span>
00771 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_SIZE_EXT          0x807A</span>
00772 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_TYPE_EXT          0x807B</span>
00773 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_STRIDE_EXT        0x807C</span>
00774 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_COUNT_EXT         0x807D</span>
00775 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_TYPE_EXT          0x807E</span>
00776 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_STRIDE_EXT        0x807F</span>
00777 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_COUNT_EXT         0x8080</span>
00778 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_SIZE_EXT           0x8081</span>
00779 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_TYPE_EXT           0x8082</span>
00780 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_STRIDE_EXT         0x8083</span>
00781 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_COUNT_EXT          0x8084</span>
00782 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_TYPE_EXT           0x8085</span>
00783 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_STRIDE_EXT         0x8086</span>
00784 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_COUNT_EXT          0x8087</span>
00785 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT   0x8088</span>
00786 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT   0x8089</span>
00787 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A</span>
00788 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT  0x808B</span>
00789 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT     0x808C</span>
00790 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGE_FLAG_ARRAY_COUNT_EXT      0x808D</span>
00791 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_POINTER_EXT       0x808E</span>
00792 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_POINTER_EXT       0x808F</span>
00793 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_POINTER_EXT        0x8090</span>
00794 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_POINTER_EXT        0x8091</span>
00795 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092</span>
00796 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGE_FLAG_ARRAY_POINTER_EXT    0x8093</span>
00797 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00798 <span class="preprocessor"></span>
00799 <span class="preprocessor">#ifndef GL_EXT_misc_attribute</span>
00800 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00801 <span class="preprocessor"></span>
00802 <span class="preprocessor">#ifndef GL_SGIS_generate_mipmap</span>
00803 <span class="preprocessor"></span><span class="preprocessor">#define GL_GENERATE_MIPMAP_SGIS           0x8191</span>
00804 <span class="preprocessor"></span><span class="preprocessor">#define GL_GENERATE_MIPMAP_HINT_SGIS      0x8192</span>
00805 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00806 <span class="preprocessor"></span>
00807 <span class="preprocessor">#ifndef GL_SGIX_clipmap</span>
00808 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_CLIPMAP_LINEAR_SGIX     0x8170</span>
00809 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CLIPMAP_CENTER_SGIX    0x8171</span>
00810 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CLIPMAP_FRAME_SGIX     0x8172</span>
00811 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX    0x8173</span>
00812 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174</span>
00813 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175</span>
00814 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX     0x8176</span>
00815 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CLIPMAP_DEPTH_SGIX         0x8177</span>
00816 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178</span>
00817 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEAREST_CLIPMAP_NEAREST_SGIX   0x844D</span>
00818 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEAREST_CLIPMAP_LINEAR_SGIX    0x844E</span>
00819 <span class="preprocessor"></span><span class="preprocessor">#define GL_LINEAR_CLIPMAP_NEAREST_SGIX    0x844F</span>
00820 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00821 <span class="preprocessor"></span>
00822 <span class="preprocessor">#ifndef GL_SGIX_shadow</span>
00823 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPARE_SGIX           0x819A</span>
00824 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COMPARE_OPERATOR_SGIX  0x819B</span>
00825 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LEQUAL_R_SGIX          0x819C</span>
00826 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_GEQUAL_R_SGIX          0x819D</span>
00827 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00828 <span class="preprocessor"></span>
00829 <span class="preprocessor">#ifndef GL_SGIS_texture_edge_clamp</span>
00830 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLAMP_TO_EDGE_SGIS             0x812F</span>
00831 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00832 <span class="preprocessor"></span>
00833 <span class="preprocessor">#ifndef GL_EXT_blend_minmax</span>
00834 <span class="preprocessor"></span><span class="preprocessor">#define GL_FUNC_ADD_EXT                   0x8006</span>
00835 <span class="preprocessor"></span><span class="preprocessor">#define GL_MIN_EXT                        0x8007</span>
00836 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_EXT                        0x8008</span>
00837 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_EQUATION_EXT             0x8009</span>
00838 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00839 <span class="preprocessor"></span>
00840 <span class="preprocessor">#ifndef GL_EXT_blend_subtract</span>
00841 <span class="preprocessor"></span><span class="preprocessor">#define GL_FUNC_SUBTRACT_EXT              0x800A</span>
00842 <span class="preprocessor"></span><span class="preprocessor">#define GL_FUNC_REVERSE_SUBTRACT_EXT      0x800B</span>
00843 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00844 <span class="preprocessor"></span>
00845 <span class="preprocessor">#ifndef GL_EXT_blend_logic_op</span>
00846 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00847 <span class="preprocessor"></span>
00848 <span class="preprocessor">#ifndef GL_SGIX_interlace</span>
00849 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERLACE_SGIX                 0x8094</span>
00850 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00851 <span class="preprocessor"></span>
00852 <span class="preprocessor">#ifndef GL_SGIX_pixel_tiles</span>
00853 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E</span>
00854 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F</span>
00855 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_WIDTH_SGIX          0x8140</span>
00856 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_HEIGHT_SGIX         0x8141</span>
00857 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_GRID_WIDTH_SGIX     0x8142</span>
00858 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX    0x8143</span>
00859 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_GRID_DEPTH_SGIX     0x8144</span>
00860 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TILE_CACHE_SIZE_SGIX     0x8145</span>
00861 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00862 <span class="preprocessor"></span>
00863 <span class="preprocessor">#ifndef GL_SGIS_texture_select</span>
00864 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_ALPHA4_SGIS               0x8110</span>
00865 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_ALPHA8_SGIS               0x8111</span>
00866 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_ALPHA12_SGIS              0x8112</span>
00867 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_ALPHA16_SGIS              0x8113</span>
00868 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_LUMINANCE4_SGIS           0x8114</span>
00869 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_LUMINANCE8_SGIS           0x8115</span>
00870 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_LUMINANCE12_SGIS          0x8116</span>
00871 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_LUMINANCE16_SGIS          0x8117</span>
00872 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_INTENSITY4_SGIS           0x8118</span>
00873 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_INTENSITY8_SGIS           0x8119</span>
00874 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_INTENSITY12_SGIS          0x811A</span>
00875 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_INTENSITY16_SGIS          0x811B</span>
00876 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_LUMINANCE_ALPHA4_SGIS     0x811C</span>
00877 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_LUMINANCE_ALPHA8_SGIS     0x811D</span>
00878 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_ALPHA4_SGIS               0x811E</span>
00879 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_ALPHA8_SGIS               0x811F</span>
00880 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_LUMINANCE4_SGIS           0x8120</span>
00881 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_LUMINANCE8_SGIS           0x8121</span>
00882 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_INTENSITY4_SGIS           0x8122</span>
00883 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_INTENSITY8_SGIS           0x8123</span>
00884 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUAL_TEXTURE_SELECT_SGIS       0x8124</span>
00885 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_TEXTURE_SELECT_SGIS       0x8125</span>
00886 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00887 <span class="preprocessor"></span>
00888 <span class="preprocessor">#ifndef GL_SGIX_sprite</span>
00889 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_SGIX                    0x8148</span>
00890 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_MODE_SGIX               0x8149</span>
00891 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_AXIS_SGIX               0x814A</span>
00892 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_TRANSLATION_SGIX        0x814B</span>
00893 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_AXIAL_SGIX              0x814C</span>
00894 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_OBJECT_ALIGNED_SGIX     0x814D</span>
00895 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPRITE_EYE_ALIGNED_SGIX        0x814E</span>
00896 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00897 <span class="preprocessor"></span>
00898 <span class="preprocessor">#ifndef GL_SGIX_texture_multi_buffer</span>
00899 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E</span>
00900 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00901 <span class="preprocessor"></span>
00902 <span class="preprocessor">#ifndef GL_SGIX_instruments</span>
00903 <span class="preprocessor"></span><span class="preprocessor">#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180</span>
00904 <span class="preprocessor"></span><span class="preprocessor">#define GL_INSTRUMENT_MEASUREMENTS_SGIX   0x8181</span>
00905 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00906 <span class="preprocessor"></span>
00907 <span class="preprocessor">#ifndef GL_SGIX_texture_scale_bias</span>
00908 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_TEXTURE_FILTER_BIAS_SGIX  0x8179</span>
00909 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A</span>
00910 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B</span>
00911 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C</span>
00912 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00913 <span class="preprocessor"></span>
00914 <span class="preprocessor">#ifndef GL_SGIX_framezoom</span>
00915 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAMEZOOM_SGIX                 0x818B</span>
00916 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAMEZOOM_FACTOR_SGIX          0x818C</span>
00917 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_FRAMEZOOM_FACTOR_SGIX      0x818D</span>
00918 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00919 <span class="preprocessor"></span>
00920 <span class="preprocessor">#ifndef GL_SGIX_tag_sample_buffer</span>
00921 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00922 <span class="preprocessor"></span>
00923 <span class="preprocessor">#ifndef GL_FfdMaskSGIX</span>
00924 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DEFORMATION_BIT_SGIX   0x00000001</span>
00925 <span class="preprocessor"></span><span class="preprocessor">#define GL_GEOMETRY_DEFORMATION_BIT_SGIX  0x00000002</span>
00926 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00927 <span class="preprocessor"></span>
00928 <span class="preprocessor">#ifndef GL_SGIX_polynomial_ffd</span>
00929 <span class="preprocessor"></span><span class="preprocessor">#define GL_GEOMETRY_DEFORMATION_SGIX      0x8194</span>
00930 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DEFORMATION_SGIX       0x8195</span>
00931 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEFORMATIONS_MASK_SGIX         0x8196</span>
00932 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_DEFORMATION_ORDER_SGIX     0x8197</span>
00933 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00934 <span class="preprocessor"></span>
00935 <span class="preprocessor">#ifndef GL_SGIX_reference_plane</span>
00936 <span class="preprocessor"></span><span class="preprocessor">#define GL_REFERENCE_PLANE_SGIX           0x817D</span>
00937 <span class="preprocessor"></span><span class="preprocessor">#define GL_REFERENCE_PLANE_EQUATION_SGIX  0x817E</span>
00938 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00939 <span class="preprocessor"></span>
00940 <span class="preprocessor">#ifndef GL_SGIX_flush_raster</span>
00941 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00942 <span class="preprocessor"></span>
00943 <span class="preprocessor">#ifndef GL_SGIX_depth_texture</span>
00944 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_COMPONENT16_SGIX         0x81A5</span>
00945 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_COMPONENT24_SGIX         0x81A6</span>
00946 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_COMPONENT32_SGIX         0x81A7</span>
00947 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00948 <span class="preprocessor"></span>
00949 <span class="preprocessor">#ifndef GL_SGIS_fog_function</span>
00950 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_FUNC_SGIS                  0x812A</span>
00951 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_FUNC_POINTS_SGIS           0x812B</span>
00952 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_FOG_FUNC_POINTS_SGIS       0x812C</span>
00953 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00954 <span class="preprocessor"></span>
00955 <span class="preprocessor">#ifndef GL_SGIX_fog_offset</span>
00956 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_OFFSET_SGIX                0x8198</span>
00957 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_OFFSET_VALUE_SGIX          0x8199</span>
00958 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00959 <span class="preprocessor"></span>
00960 <span class="preprocessor">#ifndef GL_HP_image_transform</span>
00961 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_SCALE_X_HP               0x8155</span>
00962 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_SCALE_Y_HP               0x8156</span>
00963 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_TRANSLATE_X_HP           0x8157</span>
00964 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_TRANSLATE_Y_HP           0x8158</span>
00965 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_ROTATE_ANGLE_HP          0x8159</span>
00966 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_ROTATE_ORIGIN_X_HP       0x815A</span>
00967 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_ROTATE_ORIGIN_Y_HP       0x815B</span>
00968 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_MAG_FILTER_HP            0x815C</span>
00969 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_MIN_FILTER_HP            0x815D</span>
00970 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_CUBIC_WEIGHT_HP          0x815E</span>
00971 <span class="preprocessor"></span><span class="preprocessor">#define GL_CUBIC_HP                       0x815F</span>
00972 <span class="preprocessor"></span><span class="preprocessor">#define GL_AVERAGE_HP                     0x8160</span>
00973 <span class="preprocessor"></span><span class="preprocessor">#define GL_IMAGE_TRANSFORM_2D_HP          0x8161</span>
00974 <span class="preprocessor"></span><span class="preprocessor">#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162</span>
00975 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163</span>
00976 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00977 <span class="preprocessor"></span>
00978 <span class="preprocessor">#ifndef GL_HP_convolution_border_modes</span>
00979 <span class="preprocessor"></span><span class="preprocessor">#define GL_IGNORE_BORDER_HP               0x8150</span>
00980 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_BORDER_HP             0x8151</span>
00981 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLICATE_BORDER_HP            0x8153</span>
00982 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_BORDER_COLOR_HP    0x8154</span>
00983 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00984 <span class="preprocessor"></span>
00985 <span class="preprocessor">#ifndef GL_INGR_palette_buffer</span>
00986 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00987 <span class="preprocessor"></span>
00988 <span class="preprocessor">#ifndef GL_SGIX_texture_add_env</span>
00989 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_ENV_BIAS_SGIX          0x80BE</span>
00990 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00991 <span class="preprocessor"></span>
00992 <span class="preprocessor">#ifndef GL_EXT_color_subtable</span>
00993 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00994 <span class="preprocessor"></span>
00995 <span class="preprocessor">#ifndef GL_PGI_vertex_hints</span>
00996 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_DATA_HINT_PGI           0x1A22A</span>
00997 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_CONSISTENT_HINT_PGI     0x1A22B</span>
00998 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATERIAL_SIDE_HINT_PGI         0x1A22C</span>
00999 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_HINT_PGI            0x1A22D</span>
01000 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR3_BIT_PGI                 0x00010000</span>
01001 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR4_BIT_PGI                 0x00020000</span>
01002 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGEFLAG_BIT_PGI               0x00040000</span>
01003 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_BIT_PGI                  0x00080000</span>
01004 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_AMBIENT_BIT_PGI            0x00100000</span>
01005 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000</span>
01006 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_DIFFUSE_BIT_PGI            0x00400000</span>
01007 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_EMISSION_BIT_PGI           0x00800000</span>
01008 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_COLOR_INDEXES_BIT_PGI      0x01000000</span>
01009 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_SHININESS_BIT_PGI          0x02000000</span>
01010 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAT_SPECULAR_BIT_PGI           0x04000000</span>
01011 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_BIT_PGI                 0x08000000</span>
01012 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXCOORD1_BIT_PGI              0x10000000</span>
01013 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXCOORD2_BIT_PGI              0x20000000</span>
01014 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXCOORD3_BIT_PGI              0x40000000</span>
01015 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXCOORD4_BIT_PGI              0x80000000</span>
01016 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX23_BIT_PGI               0x00000004</span>
01017 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX4_BIT_PGI                0x00000008</span>
01018 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01019 <span class="preprocessor"></span>
01020 <span class="preprocessor">#ifndef GL_PGI_misc_hints</span>
01021 <span class="preprocessor"></span><span class="preprocessor">#define GL_PREFER_DOUBLEBUFFER_HINT_PGI   0x1A1F8</span>
01022 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSERVE_MEMORY_HINT_PGI       0x1A1FD</span>
01023 <span class="preprocessor"></span><span class="preprocessor">#define GL_RECLAIM_MEMORY_HINT_PGI        0x1A1FE</span>
01024 <span class="preprocessor"></span><span class="preprocessor">#define GL_NATIVE_GRAPHICS_HANDLE_PGI     0x1A202</span>
01025 <span class="preprocessor"></span><span class="preprocessor">#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203</span>
01026 <span class="preprocessor"></span><span class="preprocessor">#define GL_NATIVE_GRAPHICS_END_HINT_PGI   0x1A204</span>
01027 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALWAYS_FAST_HINT_PGI           0x1A20C</span>
01028 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALWAYS_SOFT_HINT_PGI           0x1A20D</span>
01029 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALLOW_DRAW_OBJ_HINT_PGI        0x1A20E</span>
01030 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALLOW_DRAW_WIN_HINT_PGI        0x1A20F</span>
01031 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALLOW_DRAW_FRG_HINT_PGI        0x1A210</span>
01032 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALLOW_DRAW_MEM_HINT_PGI        0x1A211</span>
01033 <span class="preprocessor"></span><span class="preprocessor">#define GL_STRICT_DEPTHFUNC_HINT_PGI      0x1A216</span>
01034 <span class="preprocessor"></span><span class="preprocessor">#define GL_STRICT_LIGHTING_HINT_PGI       0x1A217</span>
01035 <span class="preprocessor"></span><span class="preprocessor">#define GL_STRICT_SCISSOR_HINT_PGI        0x1A218</span>
01036 <span class="preprocessor"></span><span class="preprocessor">#define GL_FULL_STIPPLE_HINT_PGI          0x1A219</span>
01037 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLIP_NEAR_HINT_PGI             0x1A220</span>
01038 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLIP_FAR_HINT_PGI              0x1A221</span>
01039 <span class="preprocessor"></span><span class="preprocessor">#define GL_WIDE_LINE_HINT_PGI             0x1A222</span>
01040 <span class="preprocessor"></span><span class="preprocessor">#define GL_BACK_NORMALS_HINT_PGI          0x1A223</span>
01041 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01042 <span class="preprocessor"></span>
01043 <span class="preprocessor">#ifndef GL_EXT_paletted_texture</span>
01044 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_INDEX1_EXT               0x80E2</span>
01045 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_INDEX2_EXT               0x80E3</span>
01046 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_INDEX4_EXT               0x80E4</span>
01047 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_INDEX8_EXT               0x80E5</span>
01048 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_INDEX12_EXT              0x80E6</span>
01049 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_INDEX16_EXT              0x80E7</span>
01050 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_INDEX_SIZE_EXT         0x80ED</span>
01051 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01052 <span class="preprocessor"></span>
01053 <span class="preprocessor">#ifndef GL_EXT_clip_volume_hint</span>
01054 <span class="preprocessor"></span><span class="preprocessor">#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT  0x80F0</span>
01055 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01056 <span class="preprocessor"></span>
01057 <span class="preprocessor">#ifndef GL_SGIX_list_priority</span>
01058 <span class="preprocessor"></span><span class="preprocessor">#define GL_LIST_PRIORITY_SGIX             0x8182</span>
01059 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01060 <span class="preprocessor"></span>
01061 <span class="preprocessor">#ifndef GL_SGIX_ir_instrument1</span>
01062 <span class="preprocessor"></span><span class="preprocessor">#define GL_IR_INSTRUMENT1_SGIX            0x817F</span>
01063 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01064 <span class="preprocessor"></span>
01065 <span class="preprocessor">#ifndef GL_SGIX_calligraphic_fragment</span>
01066 <span class="preprocessor"></span><span class="preprocessor">#define GL_CALLIGRAPHIC_FRAGMENT_SGIX     0x8183</span>
01067 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01068 <span class="preprocessor"></span>
01069 <span class="preprocessor">#ifndef GL_SGIX_texture_lod_bias</span>
01070 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LOD_BIAS_S_SGIX        0x818E</span>
01071 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LOD_BIAS_T_SGIX        0x818F</span>
01072 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LOD_BIAS_R_SGIX        0x8190</span>
01073 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01074 <span class="preprocessor"></span>
01075 <span class="preprocessor">#ifndef GL_SGIX_shadow_ambient</span>
01076 <span class="preprocessor"></span><span class="preprocessor">#define GL_SHADOW_AMBIENT_SGIX            0x80BF</span>
01077 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01078 <span class="preprocessor"></span>
01079 <span class="preprocessor">#ifndef GL_EXT_index_texture</span>
01080 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01081 <span class="preprocessor"></span>
01082 <span class="preprocessor">#ifndef GL_EXT_index_material</span>
01083 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_MATERIAL_EXT             0x81B8</span>
01084 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_MATERIAL_PARAMETER_EXT   0x81B9</span>
01085 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_MATERIAL_FACE_EXT        0x81BA</span>
01086 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01087 <span class="preprocessor"></span>
01088 <span class="preprocessor">#ifndef GL_EXT_index_func</span>
01089 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_TEST_EXT                 0x81B5</span>
01090 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_TEST_FUNC_EXT            0x81B6</span>
01091 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_TEST_REF_EXT             0x81B7</span>
01092 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01093 <span class="preprocessor"></span>
01094 <span class="preprocessor">#ifndef GL_EXT_index_array_formats</span>
01095 <span class="preprocessor"></span><span class="preprocessor">#define GL_IUI_V2F_EXT                    0x81AD</span>
01096 <span class="preprocessor"></span><span class="preprocessor">#define GL_IUI_V3F_EXT                    0x81AE</span>
01097 <span class="preprocessor"></span><span class="preprocessor">#define GL_IUI_N3F_V2F_EXT                0x81AF</span>
01098 <span class="preprocessor"></span><span class="preprocessor">#define GL_IUI_N3F_V3F_EXT                0x81B0</span>
01099 <span class="preprocessor"></span><span class="preprocessor">#define GL_T2F_IUI_V2F_EXT                0x81B1</span>
01100 <span class="preprocessor"></span><span class="preprocessor">#define GL_T2F_IUI_V3F_EXT                0x81B2</span>
01101 <span class="preprocessor"></span><span class="preprocessor">#define GL_T2F_IUI_N3F_V2F_EXT            0x81B3</span>
01102 <span class="preprocessor"></span><span class="preprocessor">#define GL_T2F_IUI_N3F_V3F_EXT            0x81B4</span>
01103 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01104 <span class="preprocessor"></span>
01105 <span class="preprocessor">#ifndef GL_EXT_compiled_vertex_array</span>
01106 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT   0x81A8</span>
01107 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT   0x81A9</span>
01108 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01109 <span class="preprocessor"></span>
01110 <span class="preprocessor">#ifndef GL_EXT_cull_vertex</span>
01111 <span class="preprocessor"></span><span class="preprocessor">#define GL_CULL_VERTEX_EXT                0x81AA</span>
01112 <span class="preprocessor"></span><span class="preprocessor">#define GL_CULL_VERTEX_EYE_POSITION_EXT   0x81AB</span>
01113 <span class="preprocessor"></span><span class="preprocessor">#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC</span>
01114 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01115 <span class="preprocessor"></span>
01116 <span class="preprocessor">#ifndef GL_SGIX_ycrcb</span>
01117 <span class="preprocessor"></span><span class="preprocessor">#define GL_YCRCB_422_SGIX                 0x81BB</span>
01118 <span class="preprocessor"></span><span class="preprocessor">#define GL_YCRCB_444_SGIX                 0x81BC</span>
01119 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01120 <span class="preprocessor"></span>
01121 <span class="preprocessor">#ifndef GL_SGIX_fragment_lighting</span>
01122 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHTING_SGIX         0x8400</span>
01123 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_COLOR_MATERIAL_SGIX   0x8401</span>
01124 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402</span>
01125 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403</span>
01126 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_FRAGMENT_LIGHTS_SGIX       0x8404</span>
01127 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ACTIVE_LIGHTS_SGIX         0x8405</span>
01128 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_RASTER_NORMAL_SGIX     0x8406</span>
01129 <span class="preprocessor"></span><span class="preprocessor">#define GL_LIGHT_ENV_MODE_SGIX            0x8407</span>
01130 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408</span>
01131 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409</span>
01132 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A</span>
01133 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B</span>
01134 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT0_SGIX           0x840C</span>
01135 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT1_SGIX           0x840D</span>
01136 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT2_SGIX           0x840E</span>
01137 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT3_SGIX           0x840F</span>
01138 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT4_SGIX           0x8410</span>
01139 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT5_SGIX           0x8411</span>
01140 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT6_SGIX           0x8412</span>
01141 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_LIGHT7_SGIX           0x8413</span>
01142 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01143 <span class="preprocessor"></span>
01144 <span class="preprocessor">#ifndef GL_IBM_rasterpos_clip</span>
01145 <span class="preprocessor"></span><span class="preprocessor">#define GL_RASTER_POSITION_UNCLIPPED_IBM  0x19262</span>
01146 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01147 <span class="preprocessor"></span>
01148 <span class="preprocessor">#ifndef GL_HP_texture_lighting</span>
01149 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LIGHTING_MODE_HP       0x8167</span>
01150 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_POST_SPECULAR_HP       0x8168</span>
01151 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_PRE_SPECULAR_HP        0x8169</span>
01152 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01153 <span class="preprocessor"></span>
01154 <span class="preprocessor">#ifndef GL_EXT_draw_range_elements</span>
01155 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ELEMENTS_VERTICES_EXT      0x80E8</span>
01156 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ELEMENTS_INDICES_EXT       0x80E9</span>
01157 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01158 <span class="preprocessor"></span>
01159 <span class="preprocessor">#ifndef GL_WIN_phong_shading</span>
01160 <span class="preprocessor"></span><span class="preprocessor">#define GL_PHONG_WIN                      0x80EA</span>
01161 <span class="preprocessor"></span><span class="preprocessor">#define GL_PHONG_HINT_WIN                 0x80EB</span>
01162 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01163 <span class="preprocessor"></span>
01164 <span class="preprocessor">#ifndef GL_WIN_specular_fog</span>
01165 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_SPECULAR_TEXTURE_WIN       0x80EC</span>
01166 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01167 <span class="preprocessor"></span>
01168 <span class="preprocessor">#ifndef GL_EXT_light_texture</span>
01169 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_MATERIAL_EXT          0x8349</span>
01170 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_NORMAL_EXT            0x834A</span>
01171 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_COLOR_EXT             0x834C</span>
01172 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATTENUATION_EXT                0x834D</span>
01173 <span class="preprocessor"></span><span class="preprocessor">#define GL_SHADOW_ATTENUATION_EXT         0x834E</span>
01174 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_APPLICATION_MODE_EXT   0x834F</span>
01175 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LIGHT_EXT              0x8350</span>
01176 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MATERIAL_FACE_EXT      0x8351</span>
01177 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352</span>
01178 <span class="preprocessor"></span><span class="comment">/* reuse GL_FRAGMENT_DEPTH_EXT */</span>
01179 <span class="preprocessor">#endif</span>
01180 <span class="preprocessor"></span>
01181 <span class="preprocessor">#ifndef GL_SGIX_blend_alpha_minmax</span>
01182 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA_MIN_SGIX                 0x8320</span>
01183 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA_MAX_SGIX                 0x8321</span>
01184 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01185 <span class="preprocessor"></span>
01186 <span class="preprocessor">#ifndef GL_SGIX_impact_pixel_texture</span>
01187 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_Q_CEILING_SGIX   0x8184</span>
01188 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_Q_ROUND_SGIX     0x8185</span>
01189 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX     0x8186</span>
01190 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX 0x8187</span>
01191 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX 0x8188</span>
01192 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX    0x8189</span>
01193 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX    0x818A</span>
01194 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01195 <span class="preprocessor"></span>
01196 <span class="preprocessor">#ifndef GL_EXT_bgra</span>
01197 <span class="preprocessor"></span><span class="preprocessor">#define GL_BGR_EXT                        0x80E0</span>
01198 <span class="preprocessor"></span><span class="preprocessor">#define GL_BGRA_EXT                       0x80E1</span>
01199 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01200 <span class="preprocessor"></span>
01201 <span class="preprocessor">#ifndef GL_SGIX_async</span>
01202 <span class="preprocessor"></span><span class="preprocessor">#define GL_ASYNC_MARKER_SGIX              0x8329</span>
01203 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01204 <span class="preprocessor"></span>
01205 <span class="preprocessor">#ifndef GL_SGIX_async_pixel</span>
01206 <span class="preprocessor"></span><span class="preprocessor">#define GL_ASYNC_TEX_IMAGE_SGIX           0x835C</span>
01207 <span class="preprocessor"></span><span class="preprocessor">#define GL_ASYNC_DRAW_PIXELS_SGIX         0x835D</span>
01208 <span class="preprocessor"></span><span class="preprocessor">#define GL_ASYNC_READ_PIXELS_SGIX         0x835E</span>
01209 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ASYNC_TEX_IMAGE_SGIX       0x835F</span>
01210 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX     0x8360</span>
01211 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ASYNC_READ_PIXELS_SGIX     0x8361</span>
01212 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01213 <span class="preprocessor"></span>
01214 <span class="preprocessor">#ifndef GL_SGIX_async_histogram</span>
01215 <span class="preprocessor"></span><span class="preprocessor">#define GL_ASYNC_HISTOGRAM_SGIX           0x832C</span>
01216 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_ASYNC_HISTOGRAM_SGIX       0x832D</span>
01217 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01218 <span class="preprocessor"></span>
01219 <span class="preprocessor">#ifndef GL_INTEL_texture_scissor</span>
01220 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01221 <span class="preprocessor"></span>
01222 <span class="preprocessor">#ifndef GL_INTEL_parallel_arrays</span>
01223 <span class="preprocessor"></span><span class="preprocessor">#define GL_PARALLEL_ARRAYS_INTEL          0x83F4</span>
01224 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5</span>
01225 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6</span>
01226 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7</span>
01227 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8</span>
01228 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01229 <span class="preprocessor"></span>
01230 <span class="preprocessor">#ifndef GL_HP_occlusion_test</span>
01231 <span class="preprocessor"></span><span class="preprocessor">#define GL_OCCLUSION_TEST_HP              0x8165</span>
01232 <span class="preprocessor"></span><span class="preprocessor">#define GL_OCCLUSION_TEST_RESULT_HP       0x8166</span>
01233 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01234 <span class="preprocessor"></span>
01235 <span class="preprocessor">#ifndef GL_EXT_pixel_transform</span>
01236 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TRANSFORM_2D_EXT         0x8330</span>
01237 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_MAG_FILTER_EXT           0x8331</span>
01238 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_MIN_FILTER_EXT           0x8332</span>
01239 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_CUBIC_WEIGHT_EXT         0x8333</span>
01240 <span class="preprocessor"></span><span class="preprocessor">#define GL_CUBIC_EXT                      0x8334</span>
01241 <span class="preprocessor"></span><span class="preprocessor">#define GL_AVERAGE_EXT                    0x8335</span>
01242 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336</span>
01243 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337</span>
01244 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT  0x8338</span>
01245 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01246 <span class="preprocessor"></span>
01247 <span class="preprocessor">#ifndef GL_EXT_pixel_transform_color_table</span>
01248 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01249 <span class="preprocessor"></span>
01250 <span class="preprocessor">#ifndef GL_EXT_shared_texture_palette</span>
01251 <span class="preprocessor"></span><span class="preprocessor">#define GL_SHARED_TEXTURE_PALETTE_EXT     0x81FB</span>
01252 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01253 <span class="preprocessor"></span>
01254 <span class="preprocessor">#ifndef GL_EXT_separate_specular_color</span>
01255 <span class="preprocessor"></span><span class="preprocessor">#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT  0x81F8</span>
01256 <span class="preprocessor"></span><span class="preprocessor">#define GL_SINGLE_COLOR_EXT               0x81F9</span>
01257 <span class="preprocessor"></span><span class="preprocessor">#define GL_SEPARATE_SPECULAR_COLOR_EXT    0x81FA</span>
01258 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01259 <span class="preprocessor"></span>
01260 <span class="preprocessor">#ifndef GL_EXT_secondary_color</span>
01261 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_SUM_EXT                  0x8458</span>
01262 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_SECONDARY_COLOR_EXT    0x8459</span>
01263 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A</span>
01264 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B</span>
01265 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C</span>
01266 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D</span>
01267 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_EXT      0x845E</span>
01268 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01269 <span class="preprocessor"></span>
01270 <span class="preprocessor">#ifndef GL_EXT_texture_perturb_normal</span>
01271 <span class="preprocessor"></span><span class="preprocessor">#define GL_PERTURB_EXT                    0x85AE</span>
01272 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_NORMAL_EXT             0x85AF</span>
01273 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01274 <span class="preprocessor"></span>
01275 <span class="preprocessor">#ifndef GL_EXT_multi_draw_arrays</span>
01276 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01277 <span class="preprocessor"></span>
01278 <span class="preprocessor">#ifndef GL_EXT_fog_coord</span>
01279 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_SOURCE_EXT      0x8450</span>
01280 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_EXT             0x8451</span>
01281 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_DEPTH_EXT             0x8452</span>
01282 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_FOG_COORDINATE_EXT     0x8453</span>
01283 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT  0x8454</span>
01284 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455</span>
01285 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456</span>
01286 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_ARRAY_EXT       0x8457</span>
01287 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01288 <span class="preprocessor"></span>
01289 <span class="preprocessor">#ifndef GL_REND_screen_coordinates</span>
01290 <span class="preprocessor"></span><span class="preprocessor">#define GL_SCREEN_COORDINATES_REND        0x8490</span>
01291 <span class="preprocessor"></span><span class="preprocessor">#define GL_INVERTED_SCREEN_W_REND         0x8491</span>
01292 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01293 <span class="preprocessor"></span>
01294 <span class="preprocessor">#ifndef GL_EXT_coordinate_frame</span>
01295 <span class="preprocessor"></span><span class="preprocessor">#define GL_TANGENT_ARRAY_EXT              0x8439</span>
01296 <span class="preprocessor"></span><span class="preprocessor">#define GL_BINORMAL_ARRAY_EXT             0x843A</span>
01297 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_TANGENT_EXT            0x843B</span>
01298 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_BINORMAL_EXT           0x843C</span>
01299 <span class="preprocessor"></span><span class="preprocessor">#define GL_TANGENT_ARRAY_TYPE_EXT         0x843E</span>
01300 <span class="preprocessor"></span><span class="preprocessor">#define GL_TANGENT_ARRAY_STRIDE_EXT       0x843F</span>
01301 <span class="preprocessor"></span><span class="preprocessor">#define GL_BINORMAL_ARRAY_TYPE_EXT        0x8440</span>
01302 <span class="preprocessor"></span><span class="preprocessor">#define GL_BINORMAL_ARRAY_STRIDE_EXT      0x8441</span>
01303 <span class="preprocessor"></span><span class="preprocessor">#define GL_TANGENT_ARRAY_POINTER_EXT      0x8442</span>
01304 <span class="preprocessor"></span><span class="preprocessor">#define GL_BINORMAL_ARRAY_POINTER_EXT     0x8443</span>
01305 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_TANGENT_EXT               0x8444</span>
01306 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_TANGENT_EXT               0x8445</span>
01307 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_BINORMAL_EXT              0x8446</span>
01308 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_BINORMAL_EXT              0x8447</span>
01309 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01310 <span class="preprocessor"></span>
01311 <span class="preprocessor">#ifndef GL_EXT_texture_env_combine</span>
01312 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_EXT                    0x8570</span>
01313 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_RGB_EXT                0x8571</span>
01314 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE_ALPHA_EXT              0x8572</span>
01315 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGB_SCALE_EXT                  0x8573</span>
01316 <span class="preprocessor"></span><span class="preprocessor">#define GL_ADD_SIGNED_EXT                 0x8574</span>
01317 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERPOLATE_EXT                0x8575</span>
01318 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_EXT                   0x8576</span>
01319 <span class="preprocessor"></span><span class="preprocessor">#define GL_PRIMARY_COLOR_EXT              0x8577</span>
01320 <span class="preprocessor"></span><span class="preprocessor">#define GL_PREVIOUS_EXT                   0x8578</span>
01321 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE0_RGB_EXT                0x8580</span>
01322 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE1_RGB_EXT                0x8581</span>
01323 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE2_RGB_EXT                0x8582</span>
01324 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE0_ALPHA_EXT              0x8588</span>
01325 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE1_ALPHA_EXT              0x8589</span>
01326 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE2_ALPHA_EXT              0x858A</span>
01327 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND0_RGB_EXT               0x8590</span>
01328 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND1_RGB_EXT               0x8591</span>
01329 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND2_RGB_EXT               0x8592</span>
01330 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND0_ALPHA_EXT             0x8598</span>
01331 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND1_ALPHA_EXT             0x8599</span>
01332 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND2_ALPHA_EXT             0x859A</span>
01333 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01334 <span class="preprocessor"></span>
01335 <span class="preprocessor">#ifndef GL_APPLE_specular_vector</span>
01336 <span class="preprocessor"></span><span class="preprocessor">#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0</span>
01337 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01338 <span class="preprocessor"></span>
01339 <span class="preprocessor">#ifndef GL_APPLE_transform_hint</span>
01340 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSFORM_HINT_APPLE           0x85B1</span>
01341 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01342 <span class="preprocessor"></span>
01343 <span class="preprocessor">#ifndef GL_SGIX_fog_scale</span>
01344 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_SCALE_SGIX                 0x81FC</span>
01345 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_SCALE_VALUE_SGIX           0x81FD</span>
01346 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01347 <span class="preprocessor"></span>
01348 <span class="preprocessor">#ifndef GL_SUNX_constant_data</span>
01349 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_CONSTANT_DATA_SUNX      0x81D5</span>
01350 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CONSTANT_DATA_SUNX     0x81D6</span>
01351 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01352 <span class="preprocessor"></span>
01353 <span class="preprocessor">#ifndef GL_SUN_global_alpha</span>
01354 <span class="preprocessor"></span><span class="preprocessor">#define GL_GLOBAL_ALPHA_SUN               0x81D9</span>
01355 <span class="preprocessor"></span><span class="preprocessor">#define GL_GLOBAL_ALPHA_FACTOR_SUN        0x81DA</span>
01356 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01357 <span class="preprocessor"></span>
01358 <span class="preprocessor">#ifndef GL_SUN_triangle_list</span>
01359 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESTART_SUN                    0x0001</span>
01360 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACE_MIDDLE_SUN             0x0002</span>
01361 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACE_OLDEST_SUN             0x0003</span>
01362 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRIANGLE_LIST_SUN              0x81D7</span>
01363 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACEMENT_CODE_SUN           0x81D8</span>
01364 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACEMENT_CODE_ARRAY_SUN     0x85C0</span>
01365 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1</span>
01366 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2</span>
01367 <span class="preprocessor"></span><span class="preprocessor">#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3</span>
01368 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_V3F_SUN                   0x85C4</span>
01369 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_C4UB_V3F_SUN              0x85C5</span>
01370 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_C3F_V3F_SUN               0x85C6</span>
01371 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_N3F_V3F_SUN               0x85C7</span>
01372 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_C4F_N3F_V3F_SUN           0x85C8</span>
01373 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_T2F_V3F_SUN               0x85C9</span>
01374 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_T2F_N3F_V3F_SUN           0x85CA</span>
01375 <span class="preprocessor"></span><span class="preprocessor">#define GL_R1UI_T2F_C4F_N3F_V3F_SUN       0x85CB</span>
01376 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01377 <span class="preprocessor"></span>
01378 <span class="preprocessor">#ifndef GL_SUN_vertex</span>
01379 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01380 <span class="preprocessor"></span>
01381 <span class="preprocessor">#ifndef GL_EXT_blend_func_separate</span>
01382 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_DST_RGB_EXT              0x80C8</span>
01383 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_SRC_RGB_EXT              0x80C9</span>
01384 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_DST_ALPHA_EXT            0x80CA</span>
01385 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLEND_SRC_ALPHA_EXT            0x80CB</span>
01386 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01387 <span class="preprocessor"></span>
01388 <span class="preprocessor">#ifndef GL_INGR_color_clamp</span>
01389 <span class="preprocessor"></span><span class="preprocessor">#define GL_RED_MIN_CLAMP_INGR             0x8560</span>
01390 <span class="preprocessor"></span><span class="preprocessor">#define GL_GREEN_MIN_CLAMP_INGR           0x8561</span>
01391 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLUE_MIN_CLAMP_INGR            0x8562</span>
01392 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA_MIN_CLAMP_INGR           0x8563</span>
01393 <span class="preprocessor"></span><span class="preprocessor">#define GL_RED_MAX_CLAMP_INGR             0x8564</span>
01394 <span class="preprocessor"></span><span class="preprocessor">#define GL_GREEN_MAX_CLAMP_INGR           0x8565</span>
01395 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLUE_MAX_CLAMP_INGR            0x8566</span>
01396 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALPHA_MAX_CLAMP_INGR           0x8567</span>
01397 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01398 <span class="preprocessor"></span>
01399 <span class="preprocessor">#ifndef GL_INGR_interlace_read</span>
01400 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERLACE_READ_INGR            0x8568</span>
01401 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01402 <span class="preprocessor"></span>
01403 <span class="preprocessor">#ifndef GL_EXT_stencil_wrap</span>
01404 <span class="preprocessor"></span><span class="preprocessor">#define GL_INCR_WRAP_EXT                  0x8507</span>
01405 <span class="preprocessor"></span><span class="preprocessor">#define GL_DECR_WRAP_EXT                  0x8508</span>
01406 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01407 <span class="preprocessor"></span>
01408 <span class="preprocessor">#ifndef GL_EXT_422_pixels</span>
01409 <span class="preprocessor"></span><span class="preprocessor">#define GL_422_EXT                        0x80CC</span>
01410 <span class="preprocessor"></span><span class="preprocessor">#define GL_422_REV_EXT                    0x80CD</span>
01411 <span class="preprocessor"></span><span class="preprocessor">#define GL_422_AVERAGE_EXT                0x80CE</span>
01412 <span class="preprocessor"></span><span class="preprocessor">#define GL_422_REV_AVERAGE_EXT            0x80CF</span>
01413 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01414 <span class="preprocessor"></span>
01415 <span class="preprocessor">#ifndef GL_NV_texgen_reflection</span>
01416 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_MAP_NV                  0x8511</span>
01417 <span class="preprocessor"></span><span class="preprocessor">#define GL_REFLECTION_MAP_NV              0x8512</span>
01418 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01419 <span class="preprocessor"></span>
01420 <span class="preprocessor">#ifndef GL_EXT_texture_cube_map</span>
01421 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_MAP_EXT                 0x8511</span>
01422 <span class="preprocessor"></span><span class="preprocessor">#define GL_REFLECTION_MAP_EXT             0x8512</span>
01423 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_EXT           0x8513</span>
01424 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BINDING_CUBE_MAP_EXT   0x8514</span>
01425 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515</span>
01426 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516</span>
01427 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517</span>
01428 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518</span>
01429 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519</span>
01430 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A</span>
01431 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_CUBE_MAP_EXT     0x851B</span>
01432 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT  0x851C</span>
01433 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01434 <span class="preprocessor"></span>
01435 <span class="preprocessor">#ifndef GL_SUN_convolution_border_modes</span>
01436 <span class="preprocessor"></span><span class="preprocessor">#define GL_WRAP_BORDER_SUN                0x81D4</span>
01437 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01438 <span class="preprocessor"></span>
01439 <span class="preprocessor">#ifndef GL_EXT_texture_env_add</span>
01440 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01441 <span class="preprocessor"></span>
01442 <span class="preprocessor">#ifndef GL_EXT_texture_lod_bias</span>
01443 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_TEXTURE_LOD_BIAS_EXT       0x84FD</span>
01444 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_FILTER_CONTROL_EXT     0x8500</span>
01445 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LOD_BIAS_EXT           0x8501</span>
01446 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01447 <span class="preprocessor"></span>
01448 <span class="preprocessor">#ifndef GL_EXT_texture_filter_anisotropic</span>
01449 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_ANISOTROPY_EXT     0x84FE</span>
01450 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF</span>
01451 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01452 <span class="preprocessor"></span>
01453 <span class="preprocessor">#ifndef GL_EXT_vertex_weighting</span>
01454 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW0_STACK_DEPTH_EXT     GL_MODELVIEW_STACK_DEPTH</span>
01455 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW1_STACK_DEPTH_EXT     0x8502</span>
01456 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW0_MATRIX_EXT          GL_MODELVIEW_MATRIX</span>
01457 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW1_MATRIX_EXT          0x8506</span>
01458 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_WEIGHTING_EXT           0x8509</span>
01459 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW0_EXT                 GL_MODELVIEW</span>
01460 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW1_EXT                 0x850A</span>
01461 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_VERTEX_WEIGHT_EXT      0x850B</span>
01462 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_WEIGHT_ARRAY_EXT        0x850C</span>
01463 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT   0x850D</span>
01464 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT   0x850E</span>
01465 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F</span>
01466 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510</span>
01467 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01468 <span class="preprocessor"></span>
01469 <span class="preprocessor">#ifndef GL_NV_light_max_exponent</span>
01470 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_SHININESS_NV               0x8504</span>
01471 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_SPOT_EXPONENT_NV           0x8505</span>
01472 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01473 <span class="preprocessor"></span>
01474 <span class="preprocessor">#ifndef GL_NV_vertex_array_range</span>
01475 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_RANGE_NV          0x851D</span>
01476 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV   0x851E</span>
01477 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_RANGE_VALID_NV    0x851F</span>
01478 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520</span>
01479 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_RANGE_POINTER_NV  0x8521</span>
01480 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01481 <span class="preprocessor"></span>
01482 <span class="preprocessor">#ifndef GL_NV_register_combiners</span>
01483 <span class="preprocessor"></span><span class="preprocessor">#define GL_REGISTER_COMBINERS_NV          0x8522</span>
01484 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_A_NV                  0x8523</span>
01485 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_B_NV                  0x8524</span>
01486 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_C_NV                  0x8525</span>
01487 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_D_NV                  0x8526</span>
01488 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_E_NV                  0x8527</span>
01489 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_F_NV                  0x8528</span>
01490 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIABLE_G_NV                  0x8529</span>
01491 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_COLOR0_NV             0x852A</span>
01492 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONSTANT_COLOR1_NV             0x852B</span>
01493 <span class="preprocessor"></span><span class="preprocessor">#define GL_PRIMARY_COLOR_NV               0x852C</span>
01494 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_NV             0x852D</span>
01495 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPARE0_NV                      0x852E</span>
01496 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPARE1_NV                      0x852F</span>
01497 <span class="preprocessor"></span><span class="preprocessor">#define GL_DISCARD_NV                     0x8530</span>
01498 <span class="preprocessor"></span><span class="preprocessor">#define GL_E_TIMES_F_NV                   0x8531</span>
01499 <span class="preprocessor"></span><span class="preprocessor">#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532</span>
01500 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_IDENTITY_NV           0x8536</span>
01501 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INVERT_NV             0x8537</span>
01502 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXPAND_NORMAL_NV               0x8538</span>
01503 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXPAND_NEGATE_NV               0x8539</span>
01504 <span class="preprocessor"></span><span class="preprocessor">#define GL_HALF_BIAS_NORMAL_NV            0x853A</span>
01505 <span class="preprocessor"></span><span class="preprocessor">#define GL_HALF_BIAS_NEGATE_NV            0x853B</span>
01506 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_IDENTITY_NV             0x853C</span>
01507 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_NEGATE_NV               0x853D</span>
01508 <span class="preprocessor"></span><span class="preprocessor">#define GL_SCALE_BY_TWO_NV                0x853E</span>
01509 <span class="preprocessor"></span><span class="preprocessor">#define GL_SCALE_BY_FOUR_NV               0x853F</span>
01510 <span class="preprocessor"></span><span class="preprocessor">#define GL_SCALE_BY_ONE_HALF_NV           0x8540</span>
01511 <span class="preprocessor"></span><span class="preprocessor">#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV   0x8541</span>
01512 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_INPUT_NV              0x8542</span>
01513 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_MAPPING_NV            0x8543</span>
01514 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_COMPONENT_USAGE_NV    0x8544</span>
01515 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_AB_DOT_PRODUCT_NV     0x8545</span>
01516 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_CD_DOT_PRODUCT_NV     0x8546</span>
01517 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_MUX_SUM_NV            0x8547</span>
01518 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_SCALE_NV              0x8548</span>
01519 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_BIAS_NV               0x8549</span>
01520 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_AB_OUTPUT_NV          0x854A</span>
01521 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_CD_OUTPUT_NV          0x854B</span>
01522 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER_SUM_OUTPUT_NV         0x854C</span>
01523 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_GENERAL_COMBINERS_NV       0x854D</span>
01524 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_GENERAL_COMBINERS_NV       0x854E</span>
01525 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_SUM_CLAMP_NV             0x854F</span>
01526 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER0_NV                   0x8550</span>
01527 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER1_NV                   0x8551</span>
01528 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER2_NV                   0x8552</span>
01529 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER3_NV                   0x8553</span>
01530 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER4_NV                   0x8554</span>
01531 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER5_NV                   0x8555</span>
01532 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER6_NV                   0x8556</span>
01533 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINER7_NV                   0x8557</span>
01534 <span class="preprocessor"></span><span class="comment">/* reuse GL_TEXTURE0_ARB */</span>
01535 <span class="comment">/* reuse GL_TEXTURE1_ARB */</span>
01536 <span class="comment">/* reuse GL_ZERO */</span>
01537 <span class="comment">/* reuse GL_NONE */</span>
01538 <span class="comment">/* reuse GL_FOG */</span>
01539 <span class="preprocessor">#endif</span>
01540 <span class="preprocessor"></span>
01541 <span class="preprocessor">#ifndef GL_NV_fog_distance</span>
01542 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_DISTANCE_MODE_NV           0x855A</span>
01543 <span class="preprocessor"></span><span class="preprocessor">#define GL_EYE_RADIAL_NV                  0x855B</span>
01544 <span class="preprocessor"></span><span class="preprocessor">#define GL_EYE_PLANE_ABSOLUTE_NV          0x855C</span>
01545 <span class="preprocessor"></span><span class="comment">/* reuse GL_EYE_PLANE */</span>
01546 <span class="preprocessor">#endif</span>
01547 <span class="preprocessor"></span>
01548 <span class="preprocessor">#ifndef GL_NV_texgen_emboss</span>
01549 <span class="preprocessor"></span><span class="preprocessor">#define GL_EMBOSS_LIGHT_NV                0x855D</span>
01550 <span class="preprocessor"></span><span class="preprocessor">#define GL_EMBOSS_CONSTANT_NV             0x855E</span>
01551 <span class="preprocessor"></span><span class="preprocessor">#define GL_EMBOSS_MAP_NV                  0x855F</span>
01552 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01553 <span class="preprocessor"></span>
01554 <span class="preprocessor">#ifndef GL_NV_blend_square</span>
01555 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01556 <span class="preprocessor"></span>
01557 <span class="preprocessor">#ifndef GL_NV_texture_env_combine4</span>
01558 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMBINE4_NV                    0x8503</span>
01559 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE3_RGB_NV                 0x8583</span>
01560 <span class="preprocessor"></span><span class="preprocessor">#define GL_SOURCE3_ALPHA_NV               0x858B</span>
01561 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND3_RGB_NV                0x8593</span>
01562 <span class="preprocessor"></span><span class="preprocessor">#define GL_OPERAND3_ALPHA_NV              0x859B</span>
01563 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01564 <span class="preprocessor"></span>
01565 <span class="preprocessor">#ifndef GL_MESA_resize_buffers</span>
01566 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01567 <span class="preprocessor"></span>
01568 <span class="preprocessor">#ifndef GL_MESA_window_pos</span>
01569 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01570 <span class="preprocessor"></span>
01571 <span class="preprocessor">#ifndef GL_EXT_texture_compression_s3tc</span>
01572 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT   0x83F0</span>
01573 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT  0x83F1</span>
01574 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT  0x83F2</span>
01575 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT  0x83F3</span>
01576 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01577 <span class="preprocessor"></span>
01578 <span class="preprocessor">#ifndef GL_IBM_cull_vertex</span>
01579 <span class="preprocessor"></span><span class="preprocessor">#define GL_CULL_VERTEX_IBM                103050</span>
01580 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01581 <span class="preprocessor"></span>
01582 <span class="preprocessor">#ifndef GL_IBM_multimode_draw_arrays</span>
01583 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01584 <span class="preprocessor"></span>
01585 <span class="preprocessor">#ifndef GL_IBM_vertex_array_lists</span>
01586 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_LIST_IBM          103070</span>
01587 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_LIST_IBM          103071</span>
01588 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_LIST_IBM           103072</span>
01589 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_LIST_IBM           103073</span>
01590 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_LIST_IBM   103074</span>
01591 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGE_FLAG_ARRAY_LIST_IBM       103075</span>
01592 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_ARRAY_LIST_IBM  103076</span>
01593 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077</span>
01594 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM   103080</span>
01595 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM   103081</span>
01596 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ARRAY_LIST_STRIDE_IBM    103082</span>
01597 <span class="preprocessor"></span><span class="preprocessor">#define GL_INDEX_ARRAY_LIST_STRIDE_IBM    103083</span>
01598 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084</span>
01599 <span class="preprocessor"></span><span class="preprocessor">#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085</span>
01600 <span class="preprocessor"></span><span class="preprocessor">#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086</span>
01601 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087</span>
01602 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01603 <span class="preprocessor"></span>
01604 <span class="preprocessor">#ifndef GL_SGIX_subsample</span>
01605 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_SUBSAMPLE_RATE_SGIX       0x85A0</span>
01606 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_SUBSAMPLE_RATE_SGIX     0x85A1</span>
01607 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_SUBSAMPLE_4444_SGIX      0x85A2</span>
01608 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_SUBSAMPLE_2424_SGIX      0x85A3</span>
01609 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_SUBSAMPLE_4242_SGIX      0x85A4</span>
01610 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01611 <span class="preprocessor"></span>
01612 <span class="preprocessor">#ifndef GL_SGIX_ycrcb_subsample</span>
01613 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01614 <span class="preprocessor"></span>
01615 <span class="preprocessor">#ifndef GL_SGIX_ycrcba</span>
01616 <span class="preprocessor"></span><span class="preprocessor">#define GL_YCRCB_SGIX                     0x8318</span>
01617 <span class="preprocessor"></span><span class="preprocessor">#define GL_YCRCBA_SGIX                    0x8319</span>
01618 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01619 <span class="preprocessor"></span>
01620 <span class="preprocessor">#ifndef GL_SGI_depth_pass_instrument</span>
01621 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_PASS_INSTRUMENT_SGIX     0x8310</span>
01622 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX 0x8311</span>
01623 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX 0x8312</span>
01624 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01625 <span class="preprocessor"></span>
01626 <span class="preprocessor">#ifndef GL_3DFX_texture_compression_FXT1</span>
01627 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGB_FXT1_3DFX       0x86B0</span>
01628 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMPRESSED_RGBA_FXT1_3DFX      0x86B1</span>
01629 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01630 <span class="preprocessor"></span>
01631 <span class="preprocessor">#ifndef GL_3DFX_multisample</span>
01632 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_3DFX               0x86B2</span>
01633 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_BUFFERS_3DFX            0x86B3</span>
01634 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLES_3DFX                   0x86B4</span>
01635 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_BIT_3DFX           0x20000000</span>
01636 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01637 <span class="preprocessor"></span>
01638 <span class="preprocessor">#ifndef GL_3DFX_tbuffer</span>
01639 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01640 <span class="preprocessor"></span>
01641 <span class="preprocessor">#ifndef GL_EXT_multisample</span>
01642 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_EXT                0x809D</span>
01643 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_MASK_EXT       0x809E</span>
01644 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_ALPHA_TO_ONE_EXT        0x809F</span>
01645 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_MASK_EXT                0x80A0</span>
01646 <span class="preprocessor"></span><span class="preprocessor">#define GL_1PASS_EXT                      0x80A1</span>
01647 <span class="preprocessor"></span><span class="preprocessor">#define GL_2PASS_0_EXT                    0x80A2</span>
01648 <span class="preprocessor"></span><span class="preprocessor">#define GL_2PASS_1_EXT                    0x80A3</span>
01649 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_0_EXT                    0x80A4</span>
01650 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_1_EXT                    0x80A5</span>
01651 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_2_EXT                    0x80A6</span>
01652 <span class="preprocessor"></span><span class="preprocessor">#define GL_4PASS_3_EXT                    0x80A7</span>
01653 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_BUFFERS_EXT             0x80A8</span>
01654 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLES_EXT                    0x80A9</span>
01655 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_MASK_VALUE_EXT          0x80AA</span>
01656 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_MASK_INVERT_EXT         0x80AB</span>
01657 <span class="preprocessor"></span><span class="preprocessor">#define GL_SAMPLE_PATTERN_EXT             0x80AC</span>
01658 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_BIT_EXT            0x20000000</span>
01659 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01660 <span class="preprocessor"></span>
01661 <span class="preprocessor">#ifndef GL_SGIX_vertex_preclip</span>
01662 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_PRECLIP_SGIX            0x83EE</span>
01663 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_PRECLIP_HINT_SGIX       0x83EF</span>
01664 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01665 <span class="preprocessor"></span>
01666 <span class="preprocessor">#ifndef GL_SGIX_convolution_accuracy</span>
01667 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONVOLUTION_HINT_SGIX          0x8316</span>
01668 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01669 <span class="preprocessor"></span>
01670 <span class="preprocessor">#ifndef GL_SGIX_resample</span>
01671 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_RESAMPLE_SGIX             0x842C</span>
01672 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_RESAMPLE_SGIX           0x842D</span>
01673 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_REPLICATE_SGIX        0x842E</span>
01674 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_ZERO_FILL_SGIX        0x842F</span>
01675 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_DECIMATE_SGIX         0x8430</span>
01676 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01677 <span class="preprocessor"></span>
01678 <span class="preprocessor">#ifndef GL_SGIS_point_line_texgen</span>
01679 <span class="preprocessor"></span><span class="preprocessor">#define GL_EYE_DISTANCE_TO_POINT_SGIS     0x81F0</span>
01680 <span class="preprocessor"></span><span class="preprocessor">#define GL_OBJECT_DISTANCE_TO_POINT_SGIS  0x81F1</span>
01681 <span class="preprocessor"></span><span class="preprocessor">#define GL_EYE_DISTANCE_TO_LINE_SGIS      0x81F2</span>
01682 <span class="preprocessor"></span><span class="preprocessor">#define GL_OBJECT_DISTANCE_TO_LINE_SGIS   0x81F3</span>
01683 <span class="preprocessor"></span><span class="preprocessor">#define GL_EYE_POINT_SGIS                 0x81F4</span>
01684 <span class="preprocessor"></span><span class="preprocessor">#define GL_OBJECT_POINT_SGIS              0x81F5</span>
01685 <span class="preprocessor"></span><span class="preprocessor">#define GL_EYE_LINE_SGIS                  0x81F6</span>
01686 <span class="preprocessor"></span><span class="preprocessor">#define GL_OBJECT_LINE_SGIS               0x81F7</span>
01687 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01688 <span class="preprocessor"></span>
01689 <span class="preprocessor">#ifndef GL_SGIS_texture_color_mask</span>
01690 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_COLOR_WRITEMASK_SGIS   0x81EF</span>
01691 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01692 <span class="preprocessor"></span>
01693 <span class="preprocessor">#ifndef GL_EXT_texture_env_dot3</span>
01694 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_RGB_EXT                   0x8740</span>
01695 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_RGBA_EXT                  0x8741</span>
01696 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01697 <span class="preprocessor"></span>
01698 <span class="preprocessor">#ifndef GL_ATI_texture_mirror_once</span>
01699 <span class="preprocessor"></span><span class="preprocessor">#define GL_MIRROR_CLAMP_ATI               0x8742</span>
01700 <span class="preprocessor"></span><span class="preprocessor">#define GL_MIRROR_CLAMP_TO_EDGE_ATI       0x8743</span>
01701 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01702 <span class="preprocessor"></span>
01703 <span class="preprocessor">#ifndef GL_NV_fence</span>
01704 <span class="preprocessor"></span><span class="preprocessor">#define GL_ALL_COMPLETED_NV               0x84F2</span>
01705 <span class="preprocessor"></span><span class="preprocessor">#define GL_FENCE_STATUS_NV                0x84F3</span>
01706 <span class="preprocessor"></span><span class="preprocessor">#define GL_FENCE_CONDITION_NV             0x84F4</span>
01707 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01708 <span class="preprocessor"></span>
01709 <span class="preprocessor">#ifndef GL_IBM_texture_mirrored_repeat</span>
01710 <span class="preprocessor"></span><span class="preprocessor">#define GL_MIRRORED_REPEAT_IBM            0x8370</span>
01711 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01712 <span class="preprocessor"></span>
01713 <span class="preprocessor">#ifndef GL_NV_evaluators</span>
01714 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_2D_NV                     0x86C0</span>
01715 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_TRIANGULAR_2D_NV          0x86C1</span>
01716 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP_TESSELLATION_NV            0x86C2</span>
01717 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP_ATTRIB_U_ORDER_NV          0x86C3</span>
01718 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP_ATTRIB_V_ORDER_NV          0x86C4</span>
01719 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5</span>
01720 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB0_NV         0x86C6</span>
01721 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB1_NV         0x86C7</span>
01722 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB2_NV         0x86C8</span>
01723 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB3_NV         0x86C9</span>
01724 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB4_NV         0x86CA</span>
01725 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB5_NV         0x86CB</span>
01726 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB6_NV         0x86CC</span>
01727 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB7_NV         0x86CD</span>
01728 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB8_NV         0x86CE</span>
01729 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB9_NV         0x86CF</span>
01730 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB10_NV        0x86D0</span>
01731 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB11_NV        0x86D1</span>
01732 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB12_NV        0x86D2</span>
01733 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB13_NV        0x86D3</span>
01734 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB14_NV        0x86D4</span>
01735 <span class="preprocessor"></span><span class="preprocessor">#define GL_EVAL_VERTEX_ATTRIB15_NV        0x86D5</span>
01736 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_MAP_TESSELLATION_NV        0x86D6</span>
01737 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_RATIONAL_EVAL_ORDER_NV     0x86D7</span>
01738 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01739 <span class="preprocessor"></span>
01740 <span class="preprocessor">#ifndef GL_NV_packed_depth_stencil</span>
01741 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_STENCIL_NV               0x84F9</span>
01742 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_24_8_NV           0x84FA</span>
01743 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01744 <span class="preprocessor"></span>
01745 <span class="preprocessor">#ifndef GL_NV_register_combiners2</span>
01746 <span class="preprocessor"></span><span class="preprocessor">#define GL_PER_STAGE_CONSTANTS_NV         0x8535</span>
01747 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01748 <span class="preprocessor"></span>
01749 <span class="preprocessor">#ifndef GL_NV_texture_compression_vtc</span>
01750 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01751 <span class="preprocessor"></span>
01752 <span class="preprocessor">#ifndef GL_NV_texture_rectangle</span>
01753 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_RECTANGLE_NV           0x84F5</span>
01754 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BINDING_RECTANGLE_NV   0x84F6</span>
01755 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROXY_TEXTURE_RECTANGLE_NV     0x84F7</span>
01756 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV  0x84F8</span>
01757 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01758 <span class="preprocessor"></span>
01759 <span class="preprocessor">#ifndef GL_NV_texture_shader</span>
01760 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_RECTANGLE_NV    0x864C</span>
01761 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D</span>
01762 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E</span>
01763 <span class="preprocessor"></span><span class="preprocessor">#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9</span>
01764 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_S8_S8_8_8_NV      0x86DA</span>
01765 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV  0x86DB</span>
01766 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT_MAG_INTENSITY_NV          0x86DC</span>
01767 <span class="preprocessor"></span><span class="preprocessor">#define GL_SHADER_CONSISTENT_NV           0x86DD</span>
01768 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_SHADER_NV              0x86DE</span>
01769 <span class="preprocessor"></span><span class="preprocessor">#define GL_SHADER_OPERATION_NV            0x86DF</span>
01770 <span class="preprocessor"></span><span class="preprocessor">#define GL_CULL_MODES_NV                  0x86E0</span>
01771 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_MATRIX_NV       0x86E1</span>
01772 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_SCALE_NV        0x86E2</span>
01773 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_BIAS_NV         0x86E3</span>
01774 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_2D_MATRIX_NV    GL_OFFSET_TEXTURE_MATRIX_NV</span>
01775 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_2D_SCALE_NV     GL_OFFSET_TEXTURE_SCALE_NV</span>
01776 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_2D_BIAS_NV      GL_OFFSET_TEXTURE_BIAS_NV</span>
01777 <span class="preprocessor"></span><span class="preprocessor">#define GL_PREVIOUS_TEXTURE_INPUT_NV      0x86E4</span>
01778 <span class="preprocessor"></span><span class="preprocessor">#define GL_CONST_EYE_NV                   0x86E5</span>
01779 <span class="preprocessor"></span><span class="preprocessor">#define GL_PASS_THROUGH_NV                0x86E6</span>
01780 <span class="preprocessor"></span><span class="preprocessor">#define GL_CULL_FRAGMENT_NV               0x86E7</span>
01781 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_TEXTURE_2D_NV           0x86E8</span>
01782 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPENDENT_AR_TEXTURE_2D_NV     0x86E9</span>
01783 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPENDENT_GB_TEXTURE_2D_NV     0x86EA</span>
01784 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_NV                 0x86EC</span>
01785 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV   0x86ED</span>
01786 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_TEXTURE_2D_NV      0x86EE</span>
01787 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0</span>
01788 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1</span>
01789 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2</span>
01790 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3</span>
01791 <span class="preprocessor"></span><span class="preprocessor">#define GL_HILO_NV                        0x86F4</span>
01792 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT_NV                        0x86F5</span>
01793 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT_MAG_NV                    0x86F6</span>
01794 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT_MAG_VIB_NV                0x86F7</span>
01795 <span class="preprocessor"></span><span class="preprocessor">#define GL_HILO16_NV                      0x86F8</span>
01796 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_HILO_NV                 0x86F9</span>
01797 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_HILO16_NV               0x86FA</span>
01798 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_RGBA_NV                 0x86FB</span>
01799 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_RGBA8_NV                0x86FC</span>
01800 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_RGB_NV                  0x86FE</span>
01801 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_RGB8_NV                 0x86FF</span>
01802 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_LUMINANCE_NV            0x8701</span>
01803 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_LUMINANCE8_NV           0x8702</span>
01804 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_LUMINANCE_ALPHA_NV      0x8703</span>
01805 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_LUMINANCE8_ALPHA8_NV    0x8704</span>
01806 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_ALPHA_NV                0x8705</span>
01807 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_ALPHA8_NV               0x8706</span>
01808 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_INTENSITY_NV            0x8707</span>
01809 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_INTENSITY8_NV           0x8708</span>
01810 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT8_NV                       0x8709</span>
01811 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT8_MAG8_NV                  0x870A</span>
01812 <span class="preprocessor"></span><span class="preprocessor">#define GL_DSDT8_MAG8_INTENSITY8_NV       0x870B</span>
01813 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV   0x870C</span>
01814 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D</span>
01815 <span class="preprocessor"></span><span class="preprocessor">#define GL_HI_SCALE_NV                    0x870E</span>
01816 <span class="preprocessor"></span><span class="preprocessor">#define GL_LO_SCALE_NV                    0x870F</span>
01817 <span class="preprocessor"></span><span class="preprocessor">#define GL_DS_SCALE_NV                    0x8710</span>
01818 <span class="preprocessor"></span><span class="preprocessor">#define GL_DT_SCALE_NV                    0x8711</span>
01819 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAGNITUDE_SCALE_NV             0x8712</span>
01820 <span class="preprocessor"></span><span class="preprocessor">#define GL_VIBRANCE_SCALE_NV              0x8713</span>
01821 <span class="preprocessor"></span><span class="preprocessor">#define GL_HI_BIAS_NV                     0x8714</span>
01822 <span class="preprocessor"></span><span class="preprocessor">#define GL_LO_BIAS_NV                     0x8715</span>
01823 <span class="preprocessor"></span><span class="preprocessor">#define GL_DS_BIAS_NV                     0x8716</span>
01824 <span class="preprocessor"></span><span class="preprocessor">#define GL_DT_BIAS_NV                     0x8717</span>
01825 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAGNITUDE_BIAS_NV              0x8718</span>
01826 <span class="preprocessor"></span><span class="preprocessor">#define GL_VIBRANCE_BIAS_NV               0x8719</span>
01827 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_BORDER_VALUES_NV       0x871A</span>
01828 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_HI_SIZE_NV             0x871B</span>
01829 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_LO_SIZE_NV             0x871C</span>
01830 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DS_SIZE_NV             0x871D</span>
01831 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_DT_SIZE_NV             0x871E</span>
01832 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAG_SIZE_NV            0x871F</span>
01833 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01834 <span class="preprocessor"></span>
01835 <span class="preprocessor">#ifndef GL_NV_texture_shader2</span>
01836 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_TEXTURE_3D_NV      0x86EF</span>
01837 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01838 <span class="preprocessor"></span>
01839 <span class="preprocessor">#ifndef GL_NV_vertex_array_range2</span>
01840 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533</span>
01841 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01842 <span class="preprocessor"></span>
01843 <span class="preprocessor">#ifndef GL_NV_vertex_program</span>
01844 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_PROGRAM_NV              0x8620</span>
01845 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STATE_PROGRAM_NV        0x8621</span>
01846 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATTRIB_ARRAY_SIZE_NV           0x8623</span>
01847 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATTRIB_ARRAY_STRIDE_NV         0x8624</span>
01848 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATTRIB_ARRAY_TYPE_NV           0x8625</span>
01849 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_ATTRIB_NV              0x8626</span>
01850 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROGRAM_LENGTH_NV              0x8627</span>
01851 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROGRAM_STRING_NV              0x8628</span>
01852 <span class="preprocessor"></span><span class="preprocessor">#define GL_MODELVIEW_PROJECTION_NV        0x8629</span>
01853 <span class="preprocessor"></span><span class="preprocessor">#define GL_IDENTITY_NV                    0x862A</span>
01854 <span class="preprocessor"></span><span class="preprocessor">#define GL_INVERSE_NV                     0x862B</span>
01855 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRANSPOSE_NV                   0x862C</span>
01856 <span class="preprocessor"></span><span class="preprocessor">#define GL_INVERSE_TRANSPOSE_NV           0x862D</span>
01857 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E</span>
01858 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_TRACK_MATRICES_NV          0x862F</span>
01859 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX0_NV                     0x8630</span>
01860 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX1_NV                     0x8631</span>
01861 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX2_NV                     0x8632</span>
01862 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX3_NV                     0x8633</span>
01863 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX4_NV                     0x8634</span>
01864 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX5_NV                     0x8635</span>
01865 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX6_NV                     0x8636</span>
01866 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX7_NV                     0x8637</span>
01867 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_MATRIX_STACK_DEPTH_NV  0x8640</span>
01868 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_MATRIX_NV              0x8641</span>
01869 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_PROGRAM_POINT_SIZE_NV   0x8642</span>
01870 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_PROGRAM_TWO_SIDE_NV     0x8643</span>
01871 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROGRAM_PARAMETER_NV           0x8644</span>
01872 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATTRIB_ARRAY_POINTER_NV        0x8645</span>
01873 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROGRAM_TARGET_NV              0x8646</span>
01874 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROGRAM_RESIDENT_NV            0x8647</span>
01875 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRACK_MATRIX_NV                0x8648</span>
01876 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRACK_MATRIX_TRANSFORM_NV      0x8649</span>
01877 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_PROGRAM_BINDING_NV      0x864A</span>
01878 <span class="preprocessor"></span><span class="preprocessor">#define GL_PROGRAM_ERROR_POSITION_NV      0x864B</span>
01879 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY0_NV        0x8650</span>
01880 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY1_NV        0x8651</span>
01881 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY2_NV        0x8652</span>
01882 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY3_NV        0x8653</span>
01883 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY4_NV        0x8654</span>
01884 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY5_NV        0x8655</span>
01885 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY6_NV        0x8656</span>
01886 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY7_NV        0x8657</span>
01887 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY8_NV        0x8658</span>
01888 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY9_NV        0x8659</span>
01889 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY10_NV       0x865A</span>
01890 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY11_NV       0x865B</span>
01891 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY12_NV       0x865C</span>
01892 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY13_NV       0x865D</span>
01893 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY14_NV       0x865E</span>
01894 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_ATTRIB_ARRAY15_NV       0x865F</span>
01895 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB0_4_NV       0x8660</span>
01896 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB1_4_NV       0x8661</span>
01897 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB2_4_NV       0x8662</span>
01898 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB3_4_NV       0x8663</span>
01899 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB4_4_NV       0x8664</span>
01900 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB5_4_NV       0x8665</span>
01901 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB6_4_NV       0x8666</span>
01902 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB7_4_NV       0x8667</span>
01903 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB8_4_NV       0x8668</span>
01904 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB9_4_NV       0x8669</span>
01905 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB10_4_NV      0x866A</span>
01906 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB11_4_NV      0x866B</span>
01907 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB12_4_NV      0x866C</span>
01908 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB13_4_NV      0x866D</span>
01909 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB14_4_NV      0x866E</span>
01910 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP1_VERTEX_ATTRIB15_4_NV      0x866F</span>
01911 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB0_4_NV       0x8670</span>
01912 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB1_4_NV       0x8671</span>
01913 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB2_4_NV       0x8672</span>
01914 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB3_4_NV       0x8673</span>
01915 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB4_4_NV       0x8674</span>
01916 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB5_4_NV       0x8675</span>
01917 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB6_4_NV       0x8676</span>
01918 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB7_4_NV       0x8677</span>
01919 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB8_4_NV       0x8678</span>
01920 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB9_4_NV       0x8679</span>
01921 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB10_4_NV      0x867A</span>
01922 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB11_4_NV      0x867B</span>
01923 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB12_4_NV      0x867C</span>
01924 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB13_4_NV      0x867D</span>
01925 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB14_4_NV      0x867E</span>
01926 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAP2_VERTEX_ATTRIB15_4_NV      0x867F</span>
01927 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01928 <span class="preprocessor"></span>
01929 <span class="preprocessor">#ifndef GL_SGIX_texture_coordinate_clamp</span>
01930 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_CLAMP_S_SGIX       0x8369</span>
01931 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_CLAMP_T_SGIX       0x836A</span>
01932 <span class="preprocessor"></span><span class="preprocessor">#define GL_TEXTURE_MAX_CLAMP_R_SGIX       0x836B</span>
01933 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01934 <span class="preprocessor"></span>
01935 <span class="preprocessor">#ifndef GL_SGIX_scalebias_hint</span>
01936 <span class="preprocessor"></span><span class="preprocessor">#define GL_SCALEBIAS_HINT_SGIX            0x8322</span>
01937 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01938 <span class="preprocessor"></span>
01939 <span class="preprocessor">#ifndef GL_OML_interlace</span>
01940 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERLACE_OML                  0x8980</span>
01941 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTERLACE_READ_OML             0x8981</span>
01942 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01943 <span class="preprocessor"></span>
01944 <span class="preprocessor">#ifndef GL_OML_subsample</span>
01945 <span class="preprocessor"></span><span class="preprocessor">#define GL_FORMAT_SUBSAMPLE_24_24_OML     0x8982</span>
01946 <span class="preprocessor"></span><span class="preprocessor">#define GL_FORMAT_SUBSAMPLE_244_244_OML   0x8983</span>
01947 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01948 <span class="preprocessor"></span>
01949 <span class="preprocessor">#ifndef GL_OML_resample</span>
01950 <span class="preprocessor"></span><span class="preprocessor">#define GL_PACK_RESAMPLE_OML              0x8984</span>
01951 <span class="preprocessor"></span><span class="preprocessor">#define GL_UNPACK_RESAMPLE_OML            0x8985</span>
01952 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_REPLICATE_OML         0x8986</span>
01953 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_ZERO_FILL_OML         0x8987</span>
01954 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_AVERAGE_OML           0x8988</span>
01955 <span class="preprocessor"></span><span class="preprocessor">#define GL_RESAMPLE_DECIMATE_OML          0x8989</span>
01956 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01957 <span class="preprocessor"></span>
01958 <span class="preprocessor">#ifndef GL_NV_copy_depth_to_color</span>
01959 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_STENCIL_TO_RGBA_NV       0x886E</span>
01960 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_STENCIL_TO_BGRA_NV       0x886F</span>
01961 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01962 <span class="preprocessor"></span>
01963 <span class="preprocessor">#ifndef GL_ATI_envmap_bumpmap</span>
01964 <span class="preprocessor"></span><span class="preprocessor">#define GL_BUMP_ROT_MATRIX_ATI            0x8775</span>
01965 <span class="preprocessor"></span><span class="preprocessor">#define GL_BUMP_ROT_MATRIX_SIZE_ATI       0x8776</span>
01966 <span class="preprocessor"></span><span class="preprocessor">#define GL_BUMP_NUM_TEX_UNITS_ATI         0x8777</span>
01967 <span class="preprocessor"></span><span class="preprocessor">#define GL_BUMP_TEX_UNITS_ATI             0x8778</span>
01968 <span class="preprocessor"></span><span class="preprocessor">#define GL_DUDV_ATI                       0x8779</span>
01969 <span class="preprocessor"></span><span class="preprocessor">#define GL_DU8DV8_ATI                     0x877A</span>
01970 <span class="preprocessor"></span><span class="preprocessor">#define GL_BUMP_ENVMAP_ATI                0x877B</span>
01971 <span class="preprocessor"></span><span class="preprocessor">#define GL_BUMP_TARGET_ATI                0x877C</span>
01972 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
01973 <span class="preprocessor"></span>
01974 <span class="preprocessor">#ifndef GL_ATI_fragment_shader</span>
01975 <span class="preprocessor"></span><span class="preprocessor">#define GL_FRAGMENT_SHADER_ATI            0x8920</span>
01976 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_0_ATI                      0x8921</span>
01977 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_1_ATI                      0x8922</span>
01978 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_2_ATI                      0x8923</span>
01979 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_3_ATI                      0x8924</span>
01980 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_4_ATI                      0x8925</span>
01981 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_5_ATI                      0x8926</span>
01982 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_6_ATI                      0x8927</span>
01983 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_7_ATI                      0x8928</span>
01984 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_8_ATI                      0x8929</span>
01985 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_9_ATI                      0x892A</span>
01986 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_10_ATI                     0x892B</span>
01987 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_11_ATI                     0x892C</span>
01988 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_12_ATI                     0x892D</span>
01989 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_13_ATI                     0x892E</span>
01990 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_14_ATI                     0x892F</span>
01991 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_15_ATI                     0x8930</span>
01992 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_16_ATI                     0x8931</span>
01993 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_17_ATI                     0x8932</span>
01994 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_18_ATI                     0x8933</span>
01995 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_19_ATI                     0x8934</span>
01996 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_20_ATI                     0x8935</span>
01997 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_21_ATI                     0x8936</span>
01998 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_22_ATI                     0x8937</span>
01999 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_23_ATI                     0x8938</span>
02000 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_24_ATI                     0x8939</span>
02001 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_25_ATI                     0x893A</span>
02002 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_26_ATI                     0x893B</span>
02003 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_27_ATI                     0x893C</span>
02004 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_28_ATI                     0x893D</span>
02005 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_29_ATI                     0x893E</span>
02006 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_30_ATI                     0x893F</span>
02007 <span class="preprocessor"></span><span class="preprocessor">#define GL_REG_31_ATI                     0x8940</span>
02008 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_0_ATI                      0x8941</span>
02009 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_1_ATI                      0x8942</span>
02010 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_2_ATI                      0x8943</span>
02011 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_3_ATI                      0x8944</span>
02012 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_4_ATI                      0x8945</span>
02013 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_5_ATI                      0x8946</span>
02014 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_6_ATI                      0x8947</span>
02015 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_7_ATI                      0x8948</span>
02016 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_8_ATI                      0x8949</span>
02017 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_9_ATI                      0x894A</span>
02018 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_10_ATI                     0x894B</span>
02019 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_11_ATI                     0x894C</span>
02020 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_12_ATI                     0x894D</span>
02021 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_13_ATI                     0x894E</span>
02022 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_14_ATI                     0x894F</span>
02023 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_15_ATI                     0x8950</span>
02024 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_16_ATI                     0x8951</span>
02025 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_17_ATI                     0x8952</span>
02026 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_18_ATI                     0x8953</span>
02027 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_19_ATI                     0x8954</span>
02028 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_20_ATI                     0x8955</span>
02029 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_21_ATI                     0x8956</span>
02030 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_22_ATI                     0x8957</span>
02031 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_23_ATI                     0x8958</span>
02032 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_24_ATI                     0x8959</span>
02033 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_25_ATI                     0x895A</span>
02034 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_26_ATI                     0x895B</span>
02035 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_27_ATI                     0x895C</span>
02036 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_28_ATI                     0x895D</span>
02037 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_29_ATI                     0x895E</span>
02038 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_30_ATI                     0x895F</span>
02039 <span class="preprocessor"></span><span class="preprocessor">#define GL_CON_31_ATI                     0x8960</span>
02040 <span class="preprocessor"></span><span class="preprocessor">#define GL_MOV_ATI                        0x8961</span>
02041 <span class="preprocessor"></span><span class="preprocessor">#define GL_ADD_ATI                        0x8963</span>
02042 <span class="preprocessor"></span><span class="preprocessor">#define GL_MUL_ATI                        0x8964</span>
02043 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUB_ATI                        0x8965</span>
02044 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT3_ATI                       0x8966</span>
02045 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT4_ATI                       0x8967</span>
02046 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAD_ATI                        0x8968</span>
02047 <span class="preprocessor"></span><span class="preprocessor">#define GL_LERP_ATI                       0x8969</span>
02048 <span class="preprocessor"></span><span class="preprocessor">#define GL_CND_ATI                        0x896A</span>
02049 <span class="preprocessor"></span><span class="preprocessor">#define GL_CND0_ATI                       0x896B</span>
02050 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT2_ADD_ATI                   0x896C</span>
02051 <span class="preprocessor"></span><span class="preprocessor">#define GL_SECONDARY_INTERPOLATOR_ATI     0x896D</span>
02052 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_FRAGMENT_REGISTERS_ATI     0x896E</span>
02053 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_FRAGMENT_CONSTANTS_ATI     0x896F</span>
02054 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_PASSES_ATI                 0x8970</span>
02055 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI  0x8971</span>
02056 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_INSTRUCTIONS_TOTAL_ATI     0x8972</span>
02057 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973</span>
02058 <span class="preprocessor"></span><span class="preprocessor">#define GL_NUM_LOOPBACK_COMPONENTS_ATI    0x8974</span>
02059 <span class="preprocessor"></span><span class="preprocessor">#define GL_COLOR_ALPHA_PAIRING_ATI        0x8975</span>
02060 <span class="preprocessor"></span><span class="preprocessor">#define GL_SWIZZLE_STR_ATI                0x8976</span>
02061 <span class="preprocessor"></span><span class="preprocessor">#define GL_SWIZZLE_STQ_ATI                0x8977</span>
02062 <span class="preprocessor"></span><span class="preprocessor">#define GL_SWIZZLE_STR_DR_ATI             0x8978</span>
02063 <span class="preprocessor"></span><span class="preprocessor">#define GL_SWIZZLE_STQ_DQ_ATI             0x8979</span>
02064 <span class="preprocessor"></span><span class="preprocessor">#define GL_SWIZZLE_STRQ_ATI               0x897A</span>
02065 <span class="preprocessor"></span><span class="preprocessor">#define GL_SWIZZLE_STRQ_DQ_ATI            0x897B</span>
02066 <span class="preprocessor"></span><span class="preprocessor">#define GL_RED_BIT_ATI                    0x00000001</span>
02067 <span class="preprocessor"></span><span class="preprocessor">#define GL_GREEN_BIT_ATI                  0x00000002</span>
02068 <span class="preprocessor"></span><span class="preprocessor">#define GL_BLUE_BIT_ATI                   0x00000004</span>
02069 <span class="preprocessor"></span><span class="preprocessor">#define GL_2X_BIT_ATI                     0x00000001</span>
02070 <span class="preprocessor"></span><span class="preprocessor">#define GL_4X_BIT_ATI                     0x00000002</span>
02071 <span class="preprocessor"></span><span class="preprocessor">#define GL_8X_BIT_ATI                     0x00000004</span>
02072 <span class="preprocessor"></span><span class="preprocessor">#define GL_HALF_BIT_ATI                   0x00000008</span>
02073 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUARTER_BIT_ATI                0x00000010</span>
02074 <span class="preprocessor"></span><span class="preprocessor">#define GL_EIGHTH_BIT_ATI                 0x00000020</span>
02075 <span class="preprocessor"></span><span class="preprocessor">#define GL_SATURATE_BIT_ATI               0x00000040</span>
02076 <span class="preprocessor"></span><span class="preprocessor">#define GL_COMP_BIT_ATI                   0x00000002</span>
02077 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEGATE_BIT_ATI                 0x00000004</span>
02078 <span class="preprocessor"></span><span class="preprocessor">#define GL_BIAS_BIT_ATI                   0x00000008</span>
02079 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02080 <span class="preprocessor"></span>
02081 <span class="preprocessor">#ifndef GL_ATI_pn_triangles</span>
02082 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_ATI               0x87F0</span>
02083 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1</span>
02084 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_POINT_MODE_ATI    0x87F2</span>
02085 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_NORMAL_MODE_ATI   0x87F3</span>
02086 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4</span>
02087 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5</span>
02088 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6</span>
02089 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7</span>
02090 <span class="preprocessor"></span><span class="preprocessor">#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8</span>
02091 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02092 <span class="preprocessor"></span>
02093 <span class="preprocessor">#ifndef GL_ATI_vertex_array_object</span>
02094 <span class="preprocessor"></span><span class="preprocessor">#define GL_STATIC_ATI                     0x8760</span>
02095 <span class="preprocessor"></span><span class="preprocessor">#define GL_DYNAMIC_ATI                    0x8761</span>
02096 <span class="preprocessor"></span><span class="preprocessor">#define GL_PRESERVE_ATI                   0x8762</span>
02097 <span class="preprocessor"></span><span class="preprocessor">#define GL_DISCARD_ATI                    0x8763</span>
02098 <span class="preprocessor"></span><span class="preprocessor">#define GL_OBJECT_BUFFER_SIZE_ATI         0x8764</span>
02099 <span class="preprocessor"></span><span class="preprocessor">#define GL_OBJECT_BUFFER_USAGE_ATI        0x8765</span>
02100 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARRAY_OBJECT_BUFFER_ATI        0x8766</span>
02101 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARRAY_OBJECT_OFFSET_ATI        0x8767</span>
02102 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02103 <span class="preprocessor"></span>
02104 <span class="preprocessor">#ifndef GL_EXT_vertex_shader</span>
02105 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_EXT              0x8780</span>
02106 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_BINDING_EXT      0x8781</span>
02107 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_INDEX_EXT                   0x8782</span>
02108 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_NEGATE_EXT                  0x8783</span>
02109 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_DOT3_EXT                    0x8784</span>
02110 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_DOT4_EXT                    0x8785</span>
02111 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_MUL_EXT                     0x8786</span>
02112 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_ADD_EXT                     0x8787</span>
02113 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_MADD_EXT                    0x8788</span>
02114 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_FRAC_EXT                    0x8789</span>
02115 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_MAX_EXT                     0x878A</span>
02116 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_MIN_EXT                     0x878B</span>
02117 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_SET_GE_EXT                  0x878C</span>
02118 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_SET_LT_EXT                  0x878D</span>
02119 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_CLAMP_EXT                   0x878E</span>
02120 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_FLOOR_EXT                   0x878F</span>
02121 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_ROUND_EXT                   0x8790</span>
02122 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_EXP_BASE_2_EXT              0x8791</span>
02123 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_LOG_BASE_2_EXT              0x8792</span>
02124 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_POWER_EXT                   0x8793</span>
02125 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_RECIP_EXT                   0x8794</span>
02126 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_RECIP_SQRT_EXT              0x8795</span>
02127 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_SUB_EXT                     0x8796</span>
02128 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_CROSS_PRODUCT_EXT           0x8797</span>
02129 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_MULTIPLY_MATRIX_EXT         0x8798</span>
02130 <span class="preprocessor"></span><span class="preprocessor">#define GL_OP_MOV_EXT                     0x8799</span>
02131 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_VERTEX_EXT              0x879A</span>
02132 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_COLOR0_EXT              0x879B</span>
02133 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_COLOR1_EXT              0x879C</span>
02134 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD0_EXT      0x879D</span>
02135 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD1_EXT      0x879E</span>
02136 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD2_EXT      0x879F</span>
02137 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD3_EXT      0x87A0</span>
02138 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD4_EXT      0x87A1</span>
02139 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD5_EXT      0x87A2</span>
02140 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD6_EXT      0x87A3</span>
02141 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD7_EXT      0x87A4</span>
02142 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD8_EXT      0x87A5</span>
02143 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD9_EXT      0x87A6</span>
02144 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD10_EXT     0x87A7</span>
02145 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD11_EXT     0x87A8</span>
02146 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD12_EXT     0x87A9</span>
02147 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD13_EXT     0x87AA</span>
02148 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD14_EXT     0x87AB</span>
02149 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD15_EXT     0x87AC</span>
02150 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD16_EXT     0x87AD</span>
02151 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD17_EXT     0x87AE</span>
02152 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD18_EXT     0x87AF</span>
02153 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD19_EXT     0x87B0</span>
02154 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD20_EXT     0x87B1</span>
02155 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD21_EXT     0x87B2</span>
02156 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD22_EXT     0x87B3</span>
02157 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD23_EXT     0x87B4</span>
02158 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD24_EXT     0x87B5</span>
02159 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD25_EXT     0x87B6</span>
02160 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD26_EXT     0x87B7</span>
02161 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD27_EXT     0x87B8</span>
02162 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD28_EXT     0x87B9</span>
02163 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD29_EXT     0x87BA</span>
02164 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD30_EXT     0x87BB</span>
02165 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_TEXTURE_COORD31_EXT     0x87BC</span>
02166 <span class="preprocessor"></span><span class="preprocessor">#define GL_OUTPUT_FOG_EXT                 0x87BD</span>
02167 <span class="preprocessor"></span><span class="preprocessor">#define GL_SCALAR_EXT                     0x87BE</span>
02168 <span class="preprocessor"></span><span class="preprocessor">#define GL_VECTOR_EXT                     0x87BF</span>
02169 <span class="preprocessor"></span><span class="preprocessor">#define GL_MATRIX_EXT                     0x87C0</span>
02170 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_EXT                    0x87C1</span>
02171 <span class="preprocessor"></span><span class="preprocessor">#define GL_INVARIANT_EXT                  0x87C2</span>
02172 <span class="preprocessor"></span><span class="preprocessor">#define GL_LOCAL_CONSTANT_EXT             0x87C3</span>
02173 <span class="preprocessor"></span><span class="preprocessor">#define GL_LOCAL_EXT                      0x87C4</span>
02174 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5</span>
02175 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6</span>
02176 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7</span>
02177 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8</span>
02178 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_SHADER_LOCALS_EXT   0x87C9</span>
02179 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA</span>
02180 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB</span>
02181 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC</span>
02182 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INARIANTS_EXT 0x87CD</span>
02183 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE</span>
02184 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF</span>
02185 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_VARIANTS_EXT     0x87D0</span>
02186 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_INVARIANTS_EXT   0x87D1</span>
02187 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2</span>
02188 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_LOCALS_EXT       0x87D3</span>
02189 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SHADER_OPTIMIZED_EXT    0x87D4</span>
02190 <span class="preprocessor"></span><span class="preprocessor">#define GL_X_EXT                          0x87D5</span>
02191 <span class="preprocessor"></span><span class="preprocessor">#define GL_Y_EXT                          0x87D6</span>
02192 <span class="preprocessor"></span><span class="preprocessor">#define GL_Z_EXT                          0x87D7</span>
02193 <span class="preprocessor"></span><span class="preprocessor">#define GL_W_EXT                          0x87D8</span>
02194 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEGATIVE_X_EXT                 0x87D9</span>
02195 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEGATIVE_Y_EXT                 0x87DA</span>
02196 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEGATIVE_Z_EXT                 0x87DB</span>
02197 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEGATIVE_W_EXT                 0x87DC</span>
02198 <span class="preprocessor"></span><span class="preprocessor">#define GL_ZERO_EXT                       0x87DD</span>
02199 <span class="preprocessor"></span><span class="preprocessor">#define GL_ONE_EXT                        0x87DE</span>
02200 <span class="preprocessor"></span><span class="preprocessor">#define GL_NEGATIVE_ONE_EXT               0x87DF</span>
02201 <span class="preprocessor"></span><span class="preprocessor">#define GL_NORMALIZED_RANGE_EXT           0x87E0</span>
02202 <span class="preprocessor"></span><span class="preprocessor">#define GL_FULL_RANGE_EXT                 0x87E1</span>
02203 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_VERTEX_EXT             0x87E2</span>
02204 <span class="preprocessor"></span><span class="preprocessor">#define GL_MVP_MATRIX_EXT                 0x87E3</span>
02205 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_VALUE_EXT              0x87E4</span>
02206 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_DATATYPE_EXT           0x87E5</span>
02207 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_ARRAY_STRIDE_EXT       0x87E6</span>
02208 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_ARRAY_TYPE_EXT         0x87E7</span>
02209 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_ARRAY_EXT              0x87E8</span>
02210 <span class="preprocessor"></span><span class="preprocessor">#define GL_VARIANT_ARRAY_POINTER_EXT      0x87E9</span>
02211 <span class="preprocessor"></span><span class="preprocessor">#define GL_INVARIANT_VALUE_EXT            0x87EA</span>
02212 <span class="preprocessor"></span><span class="preprocessor">#define GL_INVARIANT_DATATYPE_EXT         0x87EB</span>
02213 <span class="preprocessor"></span><span class="preprocessor">#define GL_LOCAL_CONSTANT_VALUE_EXT       0x87EC</span>
02214 <span class="preprocessor"></span><span class="preprocessor">#define GL_LOCAL_CONSTANT_DATATYPE_EXT    0x87ED</span>
02215 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02216 <span class="preprocessor"></span>
02217 <span class="preprocessor">#ifndef GL_ATI_vertex_streams</span>
02218 <span class="preprocessor"></span><span class="preprocessor">#define GL_MAX_VERTEX_STREAMS_ATI         0x876B</span>
02219 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM0_ATI             0x876C</span>
02220 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM1_ATI             0x876D</span>
02221 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM2_ATI             0x876E</span>
02222 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM3_ATI             0x876F</span>
02223 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM4_ATI             0x8770</span>
02224 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM5_ATI             0x8771</span>
02225 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM6_ATI             0x8772</span>
02226 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_STREAM7_ATI             0x8773</span>
02227 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERTEX_SOURCE_ATI              0x8774</span>
02228 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02229 <span class="preprocessor"></span>
02230 <span class="preprocessor">#ifndef GL_ATI_element_array</span>
02231 <span class="preprocessor"></span><span class="preprocessor">#define GL_ELEMENT_ARRAY_ATI              0x8768</span>
02232 <span class="preprocessor"></span><span class="preprocessor">#define GL_ELEMENT_ARRAY_TYPE_ATI         0x8769</span>
02233 <span class="preprocessor"></span><span class="preprocessor">#define GL_ELEMENT_ARRAY_POINTER_ATI      0x876A</span>
02234 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02235 <span class="preprocessor"></span>
02236 <span class="preprocessor">#ifndef GL_SUN_mesh_array</span>
02237 <span class="preprocessor"></span><span class="preprocessor">#define GL_QUAD_MESH_SUN                  0x8614</span>
02238 <span class="preprocessor"></span><span class="preprocessor">#define GL_TRIANGLE_MESH_SUN              0x8615</span>
02239 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02240 <span class="preprocessor"></span>
02241 <span class="preprocessor">#ifndef GL_SUN_slice_accum</span>
02242 <span class="preprocessor"></span><span class="preprocessor">#define GL_SLICE_ACCUM_SUN                0x85CC</span>
02243 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02244 <span class="preprocessor"></span>
02245 <span class="preprocessor">#ifndef GL_NV_multisample_filter_hint</span>
02246 <span class="preprocessor"></span><span class="preprocessor">#define GL_MULTISAMPLE_FILTER_HINT_NV     0x8534</span>
02247 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02248 <span class="preprocessor"></span>
02249 <span class="preprocessor">#ifndef GL_NV_depth_clamp</span>
02250 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPTH_CLAMP_NV                 0x864F</span>
02251 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02252 <span class="preprocessor"></span>
02253 <span class="preprocessor">#ifndef GL_NV_occlusion_query</span>
02254 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_COUNTER_BITS_NV          0x8864</span>
02255 <span class="preprocessor"></span><span class="preprocessor">#define GL_CURRENT_OCCLUSION_QUERY_ID_NV  0x8865</span>
02256 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_COUNT_NV                 0x8866</span>
02257 <span class="preprocessor"></span><span class="preprocessor">#define GL_PIXEL_COUNT_AVAILABLE_NV       0x8867</span>
02258 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02259 <span class="preprocessor"></span>
02260 <span class="preprocessor">#ifndef GL_NV_point_sprite</span>
02261 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SPRITE_NV                0x8861</span>
02262 <span class="preprocessor"></span><span class="preprocessor">#define GL_COORD_REPLACE_NV               0x8862</span>
02263 <span class="preprocessor"></span><span class="preprocessor">#define GL_POINT_SPRITE_R_MODE_NV         0x8863</span>
02264 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02265 <span class="preprocessor"></span>
02266 <span class="preprocessor">#ifndef GL_NV_texture_shader3</span>
02267 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850</span>
02268 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851</span>
02269 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852</span>
02270 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853</span>
02271 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_HILO_TEXTURE_2D_NV      0x8854</span>
02272 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855</span>
02273 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856</span>
02274 <span class="preprocessor"></span><span class="preprocessor">#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857</span>
02275 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPENDENT_HILO_TEXTURE_2D_NV   0x8858</span>
02276 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPENDENT_RGB_TEXTURE_3D_NV    0x8859</span>
02277 <span class="preprocessor"></span><span class="preprocessor">#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A</span>
02278 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_PASS_THROUGH_NV    0x885B</span>
02279 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_TEXTURE_1D_NV      0x885C</span>
02280 <span class="preprocessor"></span><span class="preprocessor">#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D</span>
02281 <span class="preprocessor"></span><span class="preprocessor">#define GL_HILO8_NV                       0x885E</span>
02282 <span class="preprocessor"></span><span class="preprocessor">#define GL_SIGNED_HILO8_NV                0x885F</span>
02283 <span class="preprocessor"></span><span class="preprocessor">#define GL_FORCE_BLUE_TO_ONE_NV           0x8860</span>
02284 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02285 <span class="preprocessor"></span>
02286 <span class="preprocessor">#ifndef GL_NV_vertex_program1_1</span>
02287 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02288 <span class="preprocessor"></span>
02289 <span class="preprocessor">#ifndef GL_EXT_shadow_funcs</span>
02290 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02291 <span class="preprocessor"></span>
02292 <span class="preprocessor">#ifndef GL_EXT_stencil_two_side</span>
02293 <span class="preprocessor"></span><span class="preprocessor">#define GL_STENCIL_TEST_TWO_SIDE_EXT      0x8910</span>
02294 <span class="preprocessor"></span><span class="preprocessor">#define GL_ACTIVE_STENCIL_FACE_EXT        0x8911</span>
02295 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02296 <span class="preprocessor"></span>
02297 
02298 <span class="comment">/*************************************************************/</span>
02299 
02300 <span class="preprocessor">#ifndef GL_VERSION_1_2</span>
02301 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERSION_1_2 1</span>
02302 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02303 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glBlendColor (GLclampf, GLclampf, GLclampf, GLclampf);
02304 GLAPI <span class="keywordtype">void</span> APIENTRY glBlendEquation (GLenum);
02305 GLAPI <span class="keywordtype">void</span> APIENTRY glDrawRangeElements (GLenum, GLuint, GLuint, GLsizei, GLenum, <span class="keyword">const</span> GLvoid *);
02306 GLAPI <span class="keywordtype">void</span> APIENTRY glColorTable (GLenum, GLenum, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02307 GLAPI <span class="keywordtype">void</span> APIENTRY glColorTableParameterfv (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
02308 GLAPI <span class="keywordtype">void</span> APIENTRY glColorTableParameteriv (GLenum, GLenum, <span class="keyword">const</span> GLint *);
02309 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyColorTable (GLenum, GLenum, GLint, GLint, GLsizei);
02310 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTable (GLenum, GLenum, GLenum, GLvoid *);
02311 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableParameterfv (GLenum, GLenum, GLfloat *);
02312 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableParameteriv (GLenum, GLenum, GLint *);
02313 GLAPI <span class="keywordtype">void</span> APIENTRY glColorSubTable (GLenum, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02314 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyColorSubTable (GLenum, GLsizei, GLint, GLint, GLsizei);
02315 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionFilter1D (GLenum, GLenum, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02316 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionFilter2D (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02317 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameterf (GLenum, GLenum, GLfloat);
02318 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameterfv (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
02319 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameteri (GLenum, GLenum, GLint);
02320 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameteriv (GLenum, GLenum, <span class="keyword">const</span> GLint *);
02321 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyConvolutionFilter1D (GLenum, GLenum, GLint, GLint, GLsizei);
02322 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyConvolutionFilter2D (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
02323 GLAPI <span class="keywordtype">void</span> APIENTRY glGetConvolutionFilter (GLenum, GLenum, GLenum, GLvoid *);
02324 GLAPI <span class="keywordtype">void</span> APIENTRY glGetConvolutionParameterfv (GLenum, GLenum, GLfloat *);
02325 GLAPI <span class="keywordtype">void</span> APIENTRY glGetConvolutionParameteriv (GLenum, GLenum, GLint *);
02326 GLAPI <span class="keywordtype">void</span> APIENTRY glGetSeparableFilter (GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid *);
02327 GLAPI <span class="keywordtype">void</span> APIENTRY glSeparableFilter2D (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *, <span class="keyword">const</span> GLvoid *);
02328 GLAPI <span class="keywordtype">void</span> APIENTRY glGetHistogram (GLenum, GLboolean, GLenum, GLenum, GLvoid *);
02329 GLAPI <span class="keywordtype">void</span> APIENTRY glGetHistogramParameterfv (GLenum, GLenum, GLfloat *);
02330 GLAPI <span class="keywordtype">void</span> APIENTRY glGetHistogramParameteriv (GLenum, GLenum, GLint *);
02331 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMinmax (GLenum, GLboolean, GLenum, GLenum, GLvoid *);
02332 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMinmaxParameterfv (GLenum, GLenum, GLfloat *);
02333 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMinmaxParameteriv (GLenum, GLenum, GLint *);
02334 GLAPI <span class="keywordtype">void</span> APIENTRY glHistogram (GLenum, GLsizei, GLenum, GLboolean);
02335 GLAPI <span class="keywordtype">void</span> APIENTRY glMinmax (GLenum, GLenum, GLboolean);
02336 GLAPI <span class="keywordtype">void</span> APIENTRY glResetHistogram (GLenum);
02337 GLAPI <span class="keywordtype">void</span> APIENTRY glResetMinmax (GLenum);
02338 GLAPI <span class="keywordtype">void</span> APIENTRY glTexImage3D (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02339 GLAPI <span class="keywordtype">void</span> APIENTRY glTexSubImage3D (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02340 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyTexSubImage3D (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
02341 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02342 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
02343 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBLENDEQUATIONPROC) (GLenum mode);
02344 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, <span class="keyword">const</span> GLvoid *indices);
02345 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *table);
02346 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
02347 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
02348 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
02349 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
02350 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
02351 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
02352 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *data);
02353 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
02354 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *image);
02355 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *image);
02356 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
02357 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
02358 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
02359 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
02360 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
02361 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
02362 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
02363 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
02364 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
02365 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
02366 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *row, <span class="keyword">const</span> GLvoid *column);
02367 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
02368 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
02369 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
02370 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
02371 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
02372 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
02373 <span class="keyword">typedef</span> void (APIENTRY * PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
02374 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
02375 <span class="keyword">typedef</span> void (APIENTRY * PFNGLRESETHISTOGRAMPROC) (GLenum target);
02376 <span class="keyword">typedef</span> void (APIENTRY * PFNGLRESETMINMAXPROC) (GLenum target);
02377 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02378 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02379 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
02380 <span class="preprocessor">#endif</span>
02381 <span class="preprocessor"></span>
02382 <span class="preprocessor">#ifndef GL_VERSION_1_3</span>
02383 <span class="preprocessor"></span><span class="preprocessor">#define GL_VERSION_1_3 1</span>
02384 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02385 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glActiveTexture (GLenum);
02386 GLAPI <span class="keywordtype">void</span> APIENTRY glClientActiveTexture (GLenum);
02387 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1d (GLenum, GLdouble);
02388 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1dv (GLenum, <span class="keyword">const</span> GLdouble *);
02389 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1f (GLenum, GLfloat);
02390 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1fv (GLenum, <span class="keyword">const</span> GLfloat *);
02391 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1i (GLenum, GLint);
02392 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1iv (GLenum, <span class="keyword">const</span> GLint *);
02393 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1s (GLenum, GLshort);
02394 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1sv (GLenum, <span class="keyword">const</span> GLshort *);
02395 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2d (GLenum, GLdouble, GLdouble);
02396 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2dv (GLenum, <span class="keyword">const</span> GLdouble *);
02397 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2f (GLenum, GLfloat, GLfloat);
02398 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2fv (GLenum, <span class="keyword">const</span> GLfloat *);
02399 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2i (GLenum, GLint, GLint);
02400 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2iv (GLenum, <span class="keyword">const</span> GLint *);
02401 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2s (GLenum, GLshort, GLshort);
02402 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2sv (GLenum, <span class="keyword">const</span> GLshort *);
02403 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3d (GLenum, GLdouble, GLdouble, GLdouble);
02404 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3dv (GLenum, <span class="keyword">const</span> GLdouble *);
02405 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3f (GLenum, GLfloat, GLfloat, GLfloat);
02406 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3fv (GLenum, <span class="keyword">const</span> GLfloat *);
02407 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3i (GLenum, GLint, GLint, GLint);
02408 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3iv (GLenum, <span class="keyword">const</span> GLint *);
02409 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3s (GLenum, GLshort, GLshort, GLshort);
02410 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3sv (GLenum, <span class="keyword">const</span> GLshort *);
02411 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4d (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
02412 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4dv (GLenum, <span class="keyword">const</span> GLdouble *);
02413 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4f (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
02414 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4fv (GLenum, <span class="keyword">const</span> GLfloat *);
02415 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4i (GLenum, GLint, GLint, GLint, GLint);
02416 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4iv (GLenum, <span class="keyword">const</span> GLint *);
02417 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4s (GLenum, GLshort, GLshort, GLshort, GLshort);
02418 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4sv (GLenum, <span class="keyword">const</span> GLshort *);
02419 GLAPI <span class="keywordtype">void</span> APIENTRY glLoadTransposeMatrixf (<span class="keyword">const</span> GLfloat *);
02420 GLAPI <span class="keywordtype">void</span> APIENTRY glLoadTransposeMatrixd (<span class="keyword">const</span> GLdouble *);
02421 GLAPI <span class="keywordtype">void</span> APIENTRY glMultTransposeMatrixf (<span class="keyword">const</span> GLfloat *);
02422 GLAPI <span class="keywordtype">void</span> APIENTRY glMultTransposeMatrixd (<span class="keyword">const</span> GLdouble *);
02423 GLAPI <span class="keywordtype">void</span> APIENTRY glSampleCoverage (GLclampf, GLboolean);
02424 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexImage3D (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, <span class="keyword">const</span> GLvoid *);
02425 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexImage2D (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, <span class="keyword">const</span> GLvoid *);
02426 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexImage1D (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, <span class="keyword">const</span> GLvoid *);
02427 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexSubImage3D (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02428 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexSubImage2D (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02429 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexSubImage1D (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02430 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCompressedTexImage (GLenum, GLint, <span class="keywordtype">void</span> *);
02431 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02432 <span class="keyword">typedef</span> void (APIENTRY * PFNGLACTIVETEXTUREPROC) (GLenum texture);
02433 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);
02434 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
02435 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1DVPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02436 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
02437 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1FVPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02438 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);
02439 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1IVPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02440 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
02441 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1SVPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02442 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
02443 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2DVPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02444 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
02445 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2FVPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02446 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
02447 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2IVPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02448 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
02449 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2SVPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02450 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
02451 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3DVPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02452 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
02453 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3FVPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02454 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
02455 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3IVPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02456 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
02457 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3SVPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02458 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
02459 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4DVPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02460 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
02461 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4FVPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02462 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
02463 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4IVPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02464 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
02465 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4SVPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02466 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXFPROC) (<span class="keyword">const</span> GLfloat *m);
02467 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXDPROC) (<span class="keyword">const</span> GLdouble *m);
02468 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXFPROC) (<span class="keyword">const</span> GLfloat *m);
02469 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXDPROC) (<span class="keyword">const</span> GLdouble *m);
02470 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);
02471 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02472 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02473 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02474 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02475 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02476 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02477 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, <span class="keywordtype">void</span> *img);
02478 <span class="preprocessor">#endif</span>
02479 <span class="preprocessor"></span>
02480 <span class="preprocessor">#ifndef GL_ARB_multitexture</span>
02481 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_multitexture 1</span>
02482 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02483 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glActiveTextureARB (GLenum);
02484 GLAPI <span class="keywordtype">void</span> APIENTRY glClientActiveTextureARB (GLenum);
02485 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1dARB (GLenum, GLdouble);
02486 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1dvARB (GLenum, <span class="keyword">const</span> GLdouble *);
02487 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1fARB (GLenum, GLfloat);
02488 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1fvARB (GLenum, <span class="keyword">const</span> GLfloat *);
02489 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1iARB (GLenum, GLint);
02490 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1ivARB (GLenum, <span class="keyword">const</span> GLint *);
02491 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1sARB (GLenum, GLshort);
02492 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord1svARB (GLenum, <span class="keyword">const</span> GLshort *);
02493 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2dARB (GLenum, GLdouble, GLdouble);
02494 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2dvARB (GLenum, <span class="keyword">const</span> GLdouble *);
02495 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2fARB (GLenum, GLfloat, GLfloat);
02496 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2fvARB (GLenum, <span class="keyword">const</span> GLfloat *);
02497 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2iARB (GLenum, GLint, GLint);
02498 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2ivARB (GLenum, <span class="keyword">const</span> GLint *);
02499 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2sARB (GLenum, GLshort, GLshort);
02500 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord2svARB (GLenum, <span class="keyword">const</span> GLshort *);
02501 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3dARB (GLenum, GLdouble, GLdouble, GLdouble);
02502 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3dvARB (GLenum, <span class="keyword">const</span> GLdouble *);
02503 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3fARB (GLenum, GLfloat, GLfloat, GLfloat);
02504 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3fvARB (GLenum, <span class="keyword">const</span> GLfloat *);
02505 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3iARB (GLenum, GLint, GLint, GLint);
02506 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3ivARB (GLenum, <span class="keyword">const</span> GLint *);
02507 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3sARB (GLenum, GLshort, GLshort, GLshort);
02508 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord3svARB (GLenum, <span class="keyword">const</span> GLshort *);
02509 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4dARB (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
02510 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4dvARB (GLenum, <span class="keyword">const</span> GLdouble *);
02511 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4fARB (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
02512 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4fvARB (GLenum, <span class="keyword">const</span> GLfloat *);
02513 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4iARB (GLenum, GLint, GLint, GLint, GLint);
02514 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4ivARB (GLenum, <span class="keyword">const</span> GLint *);
02515 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4sARB (GLenum, GLshort, GLshort, GLshort, GLshort);
02516 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiTexCoord4svARB (GLenum, <span class="keyword">const</span> GLshort *);
02517 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02518 <span class="keyword">typedef</span> void (APIENTRY * PFNGLACTIVETEXTUREARBPROC) (GLenum texture);
02519 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
02520 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
02521 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02522 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
02523 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02524 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
02525 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02526 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
02527 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02528 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
02529 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02530 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
02531 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02532 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
02533 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02534 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
02535 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02536 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
02537 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02538 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
02539 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02540 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
02541 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02542 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
02543 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02544 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
02545 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, <span class="keyword">const</span> GLdouble *v);
02546 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
02547 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, <span class="keyword">const</span> GLfloat *v);
02548 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
02549 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, <span class="keyword">const</span> GLint *v);
02550 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
02551 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, <span class="keyword">const</span> GLshort *v);
02552 <span class="preprocessor">#endif</span>
02553 <span class="preprocessor"></span>
02554 <span class="preprocessor">#ifndef GL_ARB_transpose_matrix</span>
02555 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_transpose_matrix 1</span>
02556 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02557 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glLoadTransposeMatrixfARB (<span class="keyword">const</span> GLfloat *);
02558 GLAPI <span class="keywordtype">void</span> APIENTRY glLoadTransposeMatrixdARB (<span class="keyword">const</span> GLdouble *);
02559 GLAPI <span class="keywordtype">void</span> APIENTRY glMultTransposeMatrixfARB (<span class="keyword">const</span> GLfloat *);
02560 GLAPI <span class="keywordtype">void</span> APIENTRY glMultTransposeMatrixdARB (<span class="keyword">const</span> GLdouble *);
02561 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02562 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXFARBPROC) (<span class="keyword">const</span> GLfloat *m);
02563 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXDARBPROC) (<span class="keyword">const</span> GLdouble *m);
02564 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXFARBPROC) (<span class="keyword">const</span> GLfloat *m);
02565 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXDARBPROC) (<span class="keyword">const</span> GLdouble *m);
02566 <span class="preprocessor">#endif</span>
02567 <span class="preprocessor"></span>
02568 <span class="preprocessor">#ifndef GL_ARB_multisample</span>
02569 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_multisample 1</span>
02570 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02571 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glSampleCoverageARB (GLclampf, GLboolean);
02572 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02573 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);
02574 <span class="preprocessor">#endif</span>
02575 <span class="preprocessor"></span>
02576 <span class="preprocessor">#ifndef GL_ARB_texture_env_add</span>
02577 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_env_add 1</span>
02578 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02579 <span class="preprocessor"></span>
02580 <span class="preprocessor">#ifndef GL_ARB_texture_cube_map</span>
02581 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_cube_map 1</span>
02582 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02583 <span class="preprocessor"></span>
02584 <span class="preprocessor">#ifndef GL_ARB_texture_compression</span>
02585 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_compression 1</span>
02586 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02587 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexImage3DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, <span class="keyword">const</span> GLvoid *);
02588 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexImage2DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, <span class="keyword">const</span> GLvoid *);
02589 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexImage1DARB (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, <span class="keyword">const</span> GLvoid *);
02590 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexSubImage3DARB (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02591 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexSubImage2DARB (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02592 GLAPI <span class="keywordtype">void</span> APIENTRY glCompressedTexSubImage1DARB (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02593 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCompressedTexImageARB (GLenum, GLint, <span class="keywordtype">void</span> *);
02594 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02595 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02596 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02597 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02598 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02599 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02600 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, <span class="keyword">const</span> GLvoid *data);
02601 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, <span class="keywordtype">void</span> *img);
02602 <span class="preprocessor">#endif</span>
02603 <span class="preprocessor"></span>
02604 <span class="preprocessor">#ifndef GL_ARB_texture_border_clamp</span>
02605 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_border_clamp 1</span>
02606 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02607 <span class="preprocessor"></span>
02608 <span class="preprocessor">#ifndef GL_ARB_point_parameters</span>
02609 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_point_parameters 1</span>
02610 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02611 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterfARB (GLenum, GLfloat);
02612 GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterfvARB (GLenum, <span class="keyword">const</span> GLfloat *);
02613 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02614 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);
02615 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
02616 <span class="preprocessor">#endif</span>
02617 <span class="preprocessor"></span>
02618 <span class="preprocessor">#ifndef GL_ARB_vertex_blend</span>
02619 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_vertex_blend 1</span>
02620 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02621 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glWeightbvARB (GLint, <span class="keyword">const</span> GLbyte *);
02622 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightsvARB (GLint, <span class="keyword">const</span> GLshort *);
02623 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightivARB (GLint, <span class="keyword">const</span> GLint *);
02624 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightfvARB (GLint, <span class="keyword">const</span> GLfloat *);
02625 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightdvARB (GLint, <span class="keyword">const</span> GLdouble *);
02626 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightubvARB (GLint, <span class="keyword">const</span> GLubyte *);
02627 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightusvARB (GLint, <span class="keyword">const</span> GLushort *);
02628 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightuivARB (GLint, <span class="keyword">const</span> GLuint *);
02629 GLAPI <span class="keywordtype">void</span> APIENTRY glWeightPointerARB (GLint, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02630 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexBlendARB (GLint);
02631 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02632 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTBVARBPROC) (GLint size, <span class="keyword">const</span> GLbyte *weights);
02633 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTSVARBPROC) (GLint size, <span class="keyword">const</span> GLshort *weights);
02634 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTIVARBPROC) (GLint size, <span class="keyword">const</span> GLint *weights);
02635 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTFVARBPROC) (GLint size, <span class="keyword">const</span> GLfloat *weights);
02636 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTDVARBPROC) (GLint size, <span class="keyword">const</span> GLdouble *weights);
02637 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTUBVARBPROC) (GLint size, <span class="keyword">const</span> GLubyte *weights);
02638 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTUSVARBPROC) (GLint size, <span class="keyword">const</span> GLushort *weights);
02639 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTUIVARBPROC) (GLint size, <span class="keyword">const</span> GLuint *weights);
02640 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
02641 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXBLENDARBPROC) (GLint count);
02642 <span class="preprocessor">#endif</span>
02643 <span class="preprocessor"></span>
02644 <span class="preprocessor">#ifndef GL_ARB_matrix_palette</span>
02645 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_matrix_palette 1</span>
02646 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02647 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glCurrentPaletteMatrixARB (GLint);
02648 GLAPI <span class="keywordtype">void</span> APIENTRY glMatrixIndexubvARB (GLint, <span class="keyword">const</span> GLubyte *);
02649 GLAPI <span class="keywordtype">void</span> APIENTRY glMatrixIndexusvARB (GLint, <span class="keyword">const</span> GLushort *);
02650 GLAPI <span class="keywordtype">void</span> APIENTRY glMatrixIndexuivARB (GLint, <span class="keyword">const</span> GLuint *);
02651 GLAPI <span class="keywordtype">void</span> APIENTRY glMatrixIndexPointerARB (GLint, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
02652 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02653 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);
02654 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMATRIXINDEXUBVARBPROC) (GLint size, <span class="keyword">const</span> GLubyte *indices);
02655 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMATRIXINDEXUSVARBPROC) (GLint size, <span class="keyword">const</span> GLushort *indices);
02656 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMATRIXINDEXUIVARBPROC) (GLint size, <span class="keyword">const</span> GLuint *indices);
02657 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
02658 <span class="preprocessor">#endif</span>
02659 <span class="preprocessor"></span>
02660 <span class="preprocessor">#ifndef GL_ARB_texture_env_combine</span>
02661 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_env_combine 1</span>
02662 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02663 <span class="preprocessor"></span>
02664 <span class="preprocessor">#ifndef GL_ARB_texture_env_crossbar</span>
02665 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_env_crossbar 1</span>
02666 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02667 <span class="preprocessor"></span>
02668 <span class="preprocessor">#ifndef GL_ARB_texture_env_dot3</span>
02669 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_env_dot3 1</span>
02670 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02671 <span class="preprocessor"></span>
02672 <span class="preprocessor">#ifndef GL_ARB_texture_mirror_repeat</span>
02673 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_texture_mirror_repeat 1</span>
02674 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02675 <span class="preprocessor"></span>
02676 <span class="preprocessor">#ifndef GL_ARB_depth_texture</span>
02677 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_depth_texture 1</span>
02678 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02679 <span class="preprocessor"></span>
02680 <span class="preprocessor">#ifndef GL_ARB_shadow</span>
02681 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_shadow 1</span>
02682 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02683 <span class="preprocessor"></span>
02684 <span class="preprocessor">#ifndef GL_ARB_shadow_ambient</span>
02685 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_shadow_ambient 1</span>
02686 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02687 <span class="preprocessor"></span>
02688 <span class="preprocessor">#ifndef GL_ARB_window_pos</span>
02689 <span class="preprocessor"></span><span class="preprocessor">#define GL_ARB_window_pos 1</span>
02690 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02691 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2dARB (GLdouble, GLdouble);
02692 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2dvARB (<span class="keyword">const</span> GLdouble *);
02693 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2fARB (GLfloat, GLfloat);
02694 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2fvARB (<span class="keyword">const</span> GLfloat *);
02695 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2iARB (GLint, GLint);
02696 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2ivARB (<span class="keyword">const</span> GLint *);
02697 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2sARB (GLshort, GLshort);
02698 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2svARB (<span class="keyword">const</span> GLshort *);
02699 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3dARB (GLdouble, GLdouble, GLdouble);
02700 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3dvARB (<span class="keyword">const</span> GLdouble *);
02701 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3fARB (GLfloat, GLfloat, GLfloat);
02702 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3fvARB (<span class="keyword">const</span> GLfloat *);
02703 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3iARB (GLint, GLint, GLint);
02704 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3ivARB (<span class="keyword">const</span> GLint *);
02705 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3sARB (GLshort, GLshort, GLshort);
02706 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3svARB (<span class="keyword">const</span> GLshort *);
02707 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02708 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);
02709 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2DVARBPROC) (<span class="keyword">const</span> GLdouble *v);
02710 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);
02711 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2FVARBPROC) (<span class="keyword">const</span> GLfloat *v);
02712 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);
02713 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2IVARBPROC) (<span class="keyword">const</span> GLint *v);
02714 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);
02715 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2SVARBPROC) (<span class="keyword">const</span> GLshort *v);
02716 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);
02717 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3DVARBPROC) (<span class="keyword">const</span> GLdouble *v);
02718 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);
02719 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3FVARBPROC) (<span class="keyword">const</span> GLfloat *v);
02720 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);
02721 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3IVARBPROC) (<span class="keyword">const</span> GLint *v);
02722 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);
02723 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3SVARBPROC) (<span class="keyword">const</span> GLshort *v);
02724 <span class="preprocessor">#endif</span>
02725 <span class="preprocessor"></span>
02726 <span class="preprocessor">#ifndef GL_EXT_abgr</span>
02727 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_abgr 1</span>
02728 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02729 <span class="preprocessor"></span>
02730 <span class="preprocessor">#ifndef GL_EXT_blend_color</span>
02731 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_blend_color 1</span>
02732 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02733 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf);
02734 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02735 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
02736 <span class="preprocessor">#endif</span>
02737 <span class="preprocessor"></span>
02738 <span class="preprocessor">#ifndef GL_EXT_polygon_offset</span>
02739 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_polygon_offset 1</span>
02740 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02741 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPolygonOffsetEXT (GLfloat, GLfloat);
02742 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02743 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);
02744 <span class="preprocessor">#endif</span>
02745 <span class="preprocessor"></span>
02746 <span class="preprocessor">#ifndef GL_EXT_texture</span>
02747 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture 1</span>
02748 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02749 <span class="preprocessor"></span>
02750 <span class="preprocessor">#ifndef GL_EXT_texture3D</span>
02751 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture3D 1</span>
02752 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02753 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTexImage3DEXT (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02754 GLAPI <span class="keywordtype">void</span> APIENTRY glTexSubImage3DEXT (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02755 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02756 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02757 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02758 <span class="preprocessor">#endif</span>
02759 <span class="preprocessor"></span>
02760 <span class="preprocessor">#ifndef GL_SGIS_texture_filter4</span>
02761 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_texture_filter4 1</span>
02762 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02763 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glGetTexFilterFuncSGIS (GLenum, GLenum, GLfloat *);
02764 GLAPI <span class="keywordtype">void</span> APIENTRY glTexFilterFuncSGIS (GLenum, GLenum, GLsizei, <span class="keyword">const</span> GLfloat *);
02765 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02766 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);
02767 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, <span class="keyword">const</span> GLfloat *weights);
02768 <span class="preprocessor">#endif</span>
02769 <span class="preprocessor"></span>
02770 <span class="preprocessor">#ifndef GL_EXT_subtexture</span>
02771 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_subtexture 1</span>
02772 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02773 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTexSubImage1DEXT (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02774 GLAPI <span class="keywordtype">void</span> APIENTRY glTexSubImage2DEXT (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02775 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02776 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02777 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02778 <span class="preprocessor">#endif</span>
02779 <span class="preprocessor"></span>
02780 <span class="preprocessor">#ifndef GL_EXT_copy_texture</span>
02781 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_copy_texture 1</span>
02782 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02783 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glCopyTexImage1DEXT (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
02784 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyTexImage2DEXT (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
02785 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyTexSubImage1DEXT (GLenum, GLint, GLint, GLint, GLint, GLsizei);
02786 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyTexSubImage2DEXT (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
02787 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyTexSubImage3DEXT (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
02788 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02789 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
02790 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
02791 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
02792 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
02793 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
02794 <span class="preprocessor">#endif</span>
02795 <span class="preprocessor"></span>
02796 <span class="preprocessor">#ifndef GL_EXT_histogram</span>
02797 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_histogram 1</span>
02798 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02799 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glGetHistogramEXT (GLenum, GLboolean, GLenum, GLenum, GLvoid *);
02800 GLAPI <span class="keywordtype">void</span> APIENTRY glGetHistogramParameterfvEXT (GLenum, GLenum, GLfloat *);
02801 GLAPI <span class="keywordtype">void</span> APIENTRY glGetHistogramParameterivEXT (GLenum, GLenum, GLint *);
02802 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMinmaxEXT (GLenum, GLboolean, GLenum, GLenum, GLvoid *);
02803 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMinmaxParameterfvEXT (GLenum, GLenum, GLfloat *);
02804 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMinmaxParameterivEXT (GLenum, GLenum, GLint *);
02805 GLAPI <span class="keywordtype">void</span> APIENTRY glHistogramEXT (GLenum, GLsizei, GLenum, GLboolean);
02806 GLAPI <span class="keywordtype">void</span> APIENTRY glMinmaxEXT (GLenum, GLenum, GLboolean);
02807 GLAPI <span class="keywordtype">void</span> APIENTRY glResetHistogramEXT (GLenum);
02808 GLAPI <span class="keywordtype">void</span> APIENTRY glResetMinmaxEXT (GLenum);
02809 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02810 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
02811 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
02812 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
02813 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
02814 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
02815 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
02816 <span class="keyword">typedef</span> void (APIENTRY * PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
02817 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
02818 <span class="keyword">typedef</span> void (APIENTRY * PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
02819 <span class="keyword">typedef</span> void (APIENTRY * PFNGLRESETMINMAXEXTPROC) (GLenum target);
02820 <span class="preprocessor">#endif</span>
02821 <span class="preprocessor"></span>
02822 <span class="preprocessor">#ifndef GL_EXT_convolution</span>
02823 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_convolution 1</span>
02824 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02825 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionFilter1DEXT (GLenum, GLenum, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02826 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionFilter2DEXT (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02827 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameterfEXT (GLenum, GLenum, GLfloat);
02828 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameterfvEXT (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
02829 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameteriEXT (GLenum, GLenum, GLint);
02830 GLAPI <span class="keywordtype">void</span> APIENTRY glConvolutionParameterivEXT (GLenum, GLenum, <span class="keyword">const</span> GLint *);
02831 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyConvolutionFilter1DEXT (GLenum, GLenum, GLint, GLint, GLsizei);
02832 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyConvolutionFilter2DEXT (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
02833 GLAPI <span class="keywordtype">void</span> APIENTRY glGetConvolutionFilterEXT (GLenum, GLenum, GLenum, GLvoid *);
02834 GLAPI <span class="keywordtype">void</span> APIENTRY glGetConvolutionParameterfvEXT (GLenum, GLenum, GLfloat *);
02835 GLAPI <span class="keywordtype">void</span> APIENTRY glGetConvolutionParameterivEXT (GLenum, GLenum, GLint *);
02836 GLAPI <span class="keywordtype">void</span> APIENTRY glGetSeparableFilterEXT (GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid *);
02837 GLAPI <span class="keywordtype">void</span> APIENTRY glSeparableFilter2DEXT (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *, <span class="keyword">const</span> GLvoid *);
02838 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02839 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *image);
02840 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *image);
02841 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);
02842 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
02843 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);
02844 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
02845 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
02846 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
02847 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
02848 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
02849 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
02850 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
02851 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *row, <span class="keyword">const</span> GLvoid *column);
02852 <span class="preprocessor">#endif</span>
02853 <span class="preprocessor"></span>
02854 <span class="preprocessor">#ifndef GL_EXT_color_matrix</span>
02855 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_color_matrix 1</span>
02856 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02857 <span class="preprocessor"></span>
02858 <span class="preprocessor">#ifndef GL_SGI_color_table</span>
02859 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGI_color_table 1</span>
02860 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02861 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glColorTableSGI (GLenum, GLenum, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02862 GLAPI <span class="keywordtype">void</span> APIENTRY glColorTableParameterfvSGI (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
02863 GLAPI <span class="keywordtype">void</span> APIENTRY glColorTableParameterivSGI (GLenum, GLenum, <span class="keyword">const</span> GLint *);
02864 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyColorTableSGI (GLenum, GLenum, GLint, GLint, GLsizei);
02865 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableSGI (GLenum, GLenum, GLenum, GLvoid *);
02866 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableParameterfvSGI (GLenum, GLenum, GLfloat *);
02867 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableParameterivSGI (GLenum, GLenum, GLint *);
02868 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02869 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *table);
02870 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
02871 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
02872 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
02873 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
02874 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);
02875 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);
02876 <span class="preprocessor">#endif</span>
02877 <span class="preprocessor"></span>
02878 <span class="preprocessor">#ifndef GL_SGIX_pixel_texture</span>
02879 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_pixel_texture 1</span>
02880 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02881 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTexGenSGIX (GLenum);
02882 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02883 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);
02884 <span class="preprocessor">#endif</span>
02885 <span class="preprocessor"></span>
02886 <span class="preprocessor">#ifndef GL_SGIS_pixel_texture</span>
02887 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_pixel_texture 1</span>
02888 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02889 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTexGenParameteriSGIS (GLenum, GLint);
02890 GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTexGenParameterivSGIS (GLenum, <span class="keyword">const</span> GLint *);
02891 GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTexGenParameterfSGIS (GLenum, GLfloat);
02892 GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTexGenParameterfvSGIS (GLenum, <span class="keyword">const</span> GLfloat *);
02893 GLAPI <span class="keywordtype">void</span> APIENTRY glGetPixelTexGenParameterivSGIS (GLenum, GLint *);
02894 GLAPI <span class="keywordtype">void</span> APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum, GLfloat *);
02895 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02896 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);
02897 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, <span class="keyword">const</span> GLint *params);
02898 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
02899 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
02900 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);
02901 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);
02902 <span class="preprocessor">#endif</span>
02903 <span class="preprocessor"></span>
02904 <span class="preprocessor">#ifndef GL_SGIS_texture4D</span>
02905 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_texture4D 1</span>
02906 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02907 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTexImage4DSGIS (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02908 GLAPI <span class="keywordtype">void</span> APIENTRY glTexSubImage4DSGIS (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
02909 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02910 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02911 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *pixels);
02912 <span class="preprocessor">#endif</span>
02913 <span class="preprocessor"></span>
02914 <span class="preprocessor">#ifndef GL_SGI_texture_color_table</span>
02915 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGI_texture_color_table 1</span>
02916 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02917 <span class="preprocessor"></span>
02918 <span class="preprocessor">#ifndef GL_EXT_cmyka</span>
02919 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_cmyka 1</span>
02920 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02921 <span class="preprocessor"></span>
02922 <span class="preprocessor">#ifndef GL_EXT_texture_object</span>
02923 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_object 1</span>
02924 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02925 <span class="preprocessor"></span>GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei, <span class="keyword">const</span> GLuint *, GLboolean *);
02926 GLAPI <span class="keywordtype">void</span> APIENTRY glBindTextureEXT (GLenum, GLuint);
02927 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteTexturesEXT (GLsizei, <span class="keyword">const</span> GLuint *);
02928 GLAPI <span class="keywordtype">void</span> APIENTRY glGenTexturesEXT (GLsizei, GLuint *);
02929 GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint);
02930 GLAPI <span class="keywordtype">void</span> APIENTRY glPrioritizeTexturesEXT (GLsizei, <span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLclampf *);
02931 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02932 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, <span class="keyword">const</span> GLuint *textures, GLboolean *residences);
02933 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
02934 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETETEXTURESEXTPROC) (GLsizei n, <span class="keyword">const</span> GLuint *textures);
02935 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);
02936 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISTEXTUREEXTPROC) (GLuint texture);
02937 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, <span class="keyword">const</span> GLuint *textures, <span class="keyword">const</span> GLclampf *priorities);
02938 <span class="preprocessor">#endif</span>
02939 <span class="preprocessor"></span>
02940 <span class="preprocessor">#ifndef GL_SGIS_detail_texture</span>
02941 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_detail_texture 1</span>
02942 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02943 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glDetailTexFuncSGIS (GLenum, GLsizei, <span class="keyword">const</span> GLfloat *);
02944 GLAPI <span class="keywordtype">void</span> APIENTRY glGetDetailTexFuncSGIS (GLenum, GLfloat *);
02945 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02946 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, <span class="keyword">const</span> GLfloat *points);
02947 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
02948 <span class="preprocessor">#endif</span>
02949 <span class="preprocessor"></span>
02950 <span class="preprocessor">#ifndef GL_SGIS_sharpen_texture</span>
02951 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_sharpen_texture 1</span>
02952 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02953 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glSharpenTexFuncSGIS (GLenum, GLsizei, <span class="keyword">const</span> GLfloat *);
02954 GLAPI <span class="keywordtype">void</span> APIENTRY glGetSharpenTexFuncSGIS (GLenum, GLfloat *);
02955 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02956 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, <span class="keyword">const</span> GLfloat *points);
02957 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
02958 <span class="preprocessor">#endif</span>
02959 <span class="preprocessor"></span>
02960 <span class="preprocessor">#ifndef GL_EXT_packed_pixels</span>
02961 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_packed_pixels 1</span>
02962 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02963 <span class="preprocessor"></span>
02964 <span class="preprocessor">#ifndef GL_SGIS_texture_lod</span>
02965 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_texture_lod 1</span>
02966 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02967 <span class="preprocessor"></span>
02968 <span class="preprocessor">#ifndef GL_SGIS_multisample</span>
02969 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_multisample 1</span>
02970 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02971 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glSampleMaskSGIS (GLclampf, GLboolean);
02972 GLAPI <span class="keywordtype">void</span> APIENTRY glSamplePatternSGIS (GLenum);
02973 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02974 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);
02975 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);
02976 <span class="preprocessor">#endif</span>
02977 <span class="preprocessor"></span>
02978 <span class="preprocessor">#ifndef GL_EXT_rescale_normal</span>
02979 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_rescale_normal 1</span>
02980 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
02981 <span class="preprocessor"></span>
02982 <span class="preprocessor">#ifndef GL_EXT_vertex_array</span>
02983 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_vertex_array 1</span>
02984 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
02985 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glArrayElementEXT (GLint);
02986 GLAPI <span class="keywordtype">void</span> APIENTRY glColorPointerEXT (GLint, GLenum, GLsizei, GLsizei, <span class="keyword">const</span> GLvoid *);
02987 GLAPI <span class="keywordtype">void</span> APIENTRY glDrawArraysEXT (GLenum, GLint, GLsizei);
02988 GLAPI <span class="keywordtype">void</span> APIENTRY glEdgeFlagPointerEXT (GLsizei, GLsizei, <span class="keyword">const</span> GLboolean *);
02989 GLAPI <span class="keywordtype">void</span> APIENTRY glGetPointervEXT (GLenum, GLvoid* *);
02990 GLAPI <span class="keywordtype">void</span> APIENTRY glIndexPointerEXT (GLenum, GLsizei, GLsizei, <span class="keyword">const</span> GLvoid *);
02991 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalPointerEXT (GLenum, GLsizei, GLsizei, <span class="keyword">const</span> GLvoid *);
02992 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoordPointerEXT (GLint, GLenum, GLsizei, GLsizei, <span class="keyword">const</span> GLvoid *);
02993 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexPointerEXT (GLint, GLenum, GLsizei, GLsizei, <span class="keyword">const</span> GLvoid *);
02994 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
02995 <span class="keyword">typedef</span> void (APIENTRY * PFNGLARRAYELEMENTEXTPROC) (GLint i);
02996 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, <span class="keyword">const</span> GLvoid *pointer);
02997 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
02998 <span class="keyword">typedef</span> void (APIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, <span class="keyword">const</span> GLboolean *pointer);
02999 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);
03000 <span class="keyword">typedef</span> void (APIENTRY * PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, <span class="keyword">const</span> GLvoid *pointer);
03001 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, <span class="keyword">const</span> GLvoid *pointer);
03002 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, <span class="keyword">const</span> GLvoid *pointer);
03003 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, <span class="keyword">const</span> GLvoid *pointer);
03004 <span class="preprocessor">#endif</span>
03005 <span class="preprocessor"></span>
03006 <span class="preprocessor">#ifndef GL_EXT_misc_attribute</span>
03007 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_misc_attribute 1</span>
03008 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03009 <span class="preprocessor"></span>
03010 <span class="preprocessor">#ifndef GL_SGIS_generate_mipmap</span>
03011 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_generate_mipmap 1</span>
03012 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03013 <span class="preprocessor"></span>
03014 <span class="preprocessor">#ifndef GL_SGIX_clipmap</span>
03015 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_clipmap 1</span>
03016 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03017 <span class="preprocessor"></span>
03018 <span class="preprocessor">#ifndef GL_SGIX_shadow</span>
03019 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_shadow 1</span>
03020 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03021 <span class="preprocessor"></span>
03022 <span class="preprocessor">#ifndef GL_SGIS_texture_edge_clamp</span>
03023 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_texture_edge_clamp 1</span>
03024 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03025 <span class="preprocessor"></span>
03026 <span class="preprocessor">#ifndef GL_SGIS_texture_border_clamp</span>
03027 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_texture_border_clamp 1</span>
03028 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03029 <span class="preprocessor"></span>
03030 <span class="preprocessor">#ifndef GL_EXT_blend_minmax</span>
03031 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_blend_minmax 1</span>
03032 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03033 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glBlendEquationEXT (GLenum);
03034 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03035 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);
03036 <span class="preprocessor">#endif</span>
03037 <span class="preprocessor"></span>
03038 <span class="preprocessor">#ifndef GL_EXT_blend_subtract</span>
03039 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_blend_subtract 1</span>
03040 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03041 <span class="preprocessor"></span>
03042 <span class="preprocessor">#ifndef GL_EXT_blend_logic_op</span>
03043 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_blend_logic_op 1</span>
03044 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03045 <span class="preprocessor"></span>
03046 <span class="preprocessor">#ifndef GL_SGIX_interlace</span>
03047 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_interlace 1</span>
03048 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03049 <span class="preprocessor"></span>
03050 <span class="preprocessor">#ifndef GL_SGIX_pixel_tiles</span>
03051 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_pixel_tiles 1</span>
03052 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03053 <span class="preprocessor"></span>
03054 <span class="preprocessor">#ifndef GL_SGIX_texture_select</span>
03055 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_texture_select 1</span>
03056 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03057 <span class="preprocessor"></span>
03058 <span class="preprocessor">#ifndef GL_SGIX_sprite</span>
03059 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_sprite 1</span>
03060 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03061 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glSpriteParameterfSGIX (GLenum, GLfloat);
03062 GLAPI <span class="keywordtype">void</span> APIENTRY glSpriteParameterfvSGIX (GLenum, <span class="keyword">const</span> GLfloat *);
03063 GLAPI <span class="keywordtype">void</span> APIENTRY glSpriteParameteriSGIX (GLenum, GLint);
03064 GLAPI <span class="keywordtype">void</span> APIENTRY glSpriteParameterivSGIX (GLenum, <span class="keyword">const</span> GLint *);
03065 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03066 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);
03067 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
03068 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);
03069 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, <span class="keyword">const</span> GLint *params);
03070 <span class="preprocessor">#endif</span>
03071 <span class="preprocessor"></span>
03072 <span class="preprocessor">#ifndef GL_SGIX_texture_multi_buffer</span>
03073 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_texture_multi_buffer 1</span>
03074 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03075 <span class="preprocessor"></span>
03076 <span class="preprocessor">#ifndef GL_EXT_point_parameters</span>
03077 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_point_parameters 1</span>
03078 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03079 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterfEXT (GLenum, GLfloat);
03080 GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterfvEXT (GLenum, <span class="keyword">const</span> GLfloat *);
03081 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03082 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);
03083 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
03084 <span class="preprocessor">#endif</span>
03085 <span class="preprocessor"></span>
03086 <span class="preprocessor">#ifndef GL_SGIS_point_parameters</span>
03087 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_point_parameters 1</span>
03088 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03089 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterfSGIS (GLenum, GLfloat);
03090 GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterfvSGIS (GLenum, <span class="keyword">const</span> GLfloat *);
03091 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03092 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
03093 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
03094 <span class="preprocessor">#endif</span>
03095 <span class="preprocessor"></span>
03096 <span class="preprocessor">#ifndef GL_SGIX_instruments</span>
03097 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_instruments 1</span>
03098 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03099 <span class="preprocessor"></span>GLAPI GLint APIENTRY glGetInstrumentsSGIX (<span class="keywordtype">void</span>);
03100 GLAPI <span class="keywordtype">void</span> APIENTRY glInstrumentsBufferSGIX (GLsizei, GLint *);
03101 GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *);
03102 GLAPI <span class="keywordtype">void</span> APIENTRY glReadInstrumentsSGIX (GLint);
03103 GLAPI <span class="keywordtype">void</span> APIENTRY glStartInstrumentsSGIX (<span class="keywordtype">void</span>);
03104 GLAPI <span class="keywordtype">void</span> APIENTRY glStopInstrumentsSGIX (GLint);
03105 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03106 <span class="keyword">typedef</span> GLint (APIENTRY * PFNGLGETINSTRUMENTSSGIXPROC) (void);
03107 <span class="keyword">typedef</span> void (APIENTRY * PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);
03108 <span class="keyword">typedef</span> GLint (APIENTRY * PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);
03109 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);
03110 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSTARTINSTRUMENTSSGIXPROC) (void);
03111 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);
03112 <span class="preprocessor">#endif</span>
03113 <span class="preprocessor"></span>
03114 <span class="preprocessor">#ifndef GL_SGIX_texture_scale_bias</span>
03115 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_texture_scale_bias 1</span>
03116 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03117 <span class="preprocessor"></span>
03118 <span class="preprocessor">#ifndef GL_SGIX_framezoom</span>
03119 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_framezoom 1</span>
03120 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03121 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFrameZoomSGIX (GLint);
03122 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03123 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAMEZOOMSGIXPROC) (GLint factor);
03124 <span class="preprocessor">#endif</span>
03125 <span class="preprocessor"></span>
03126 <span class="preprocessor">#ifndef GL_SGIX_tag_sample_buffer</span>
03127 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_tag_sample_buffer 1</span>
03128 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03129 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTagSampleBufferSGIX (<span class="keywordtype">void</span>);
03130 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03131 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);
03132 <span class="preprocessor">#endif</span>
03133 <span class="preprocessor"></span>
03134 <span class="preprocessor">#ifndef GL_SGIX_polynomial_ffd</span>
03135 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_polynomial_ffd 1</span>
03136 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03137 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glDeformationMap3dSGIX (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, <span class="keyword">const</span> GLdouble *);
03138 GLAPI <span class="keywordtype">void</span> APIENTRY glDeformationMap3fSGIX (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, <span class="keyword">const</span> GLfloat *);
03139 GLAPI <span class="keywordtype">void</span> APIENTRY glDeformSGIX (GLbitfield);
03140 GLAPI <span class="keywordtype">void</span> APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield);
03141 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03142 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, <span class="keyword">const</span> GLdouble *points);
03143 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, <span class="keyword">const</span> GLfloat *points);
03144 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDEFORMSGIXPROC) (GLbitfield mask);
03145 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);
03146 <span class="preprocessor">#endif</span>
03147 <span class="preprocessor"></span>
03148 <span class="preprocessor">#ifndef GL_SGIX_reference_plane</span>
03149 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_reference_plane 1</span>
03150 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03151 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glReferencePlaneSGIX (<span class="keyword">const</span> GLdouble *);
03152 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03153 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREFERENCEPLANESGIXPROC) (<span class="keyword">const</span> GLdouble *equation);
03154 <span class="preprocessor">#endif</span>
03155 <span class="preprocessor"></span>
03156 <span class="preprocessor">#ifndef GL_SGIX_flush_raster</span>
03157 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_flush_raster 1</span>
03158 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03159 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFlushRasterSGIX (<span class="keywordtype">void</span>);
03160 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03161 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFLUSHRASTERSGIXPROC) (void);
03162 <span class="preprocessor">#endif</span>
03163 <span class="preprocessor"></span>
03164 <span class="preprocessor">#ifndef GL_SGIX_depth_texture</span>
03165 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_depth_texture 1</span>
03166 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03167 <span class="preprocessor"></span>
03168 <span class="preprocessor">#ifndef GL_SGIS_fog_function</span>
03169 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_fog_function 1</span>
03170 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03171 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFogFuncSGIS (GLsizei, <span class="keyword">const</span> GLfloat *);
03172 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFogFuncSGIS (GLfloat *);
03173 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03174 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGFUNCSGISPROC) (GLsizei n, <span class="keyword">const</span> GLfloat *points);
03175 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);
03176 <span class="preprocessor">#endif</span>
03177 <span class="preprocessor"></span>
03178 <span class="preprocessor">#ifndef GL_SGIX_fog_offset</span>
03179 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_fog_offset 1</span>
03180 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03181 <span class="preprocessor"></span>
03182 <span class="preprocessor">#ifndef GL_HP_image_transform</span>
03183 <span class="preprocessor"></span><span class="preprocessor">#define GL_HP_image_transform 1</span>
03184 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03185 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glImageTransformParameteriHP (GLenum, GLenum, GLint);
03186 GLAPI <span class="keywordtype">void</span> APIENTRY glImageTransformParameterfHP (GLenum, GLenum, GLfloat);
03187 GLAPI <span class="keywordtype">void</span> APIENTRY glImageTransformParameterivHP (GLenum, GLenum, <span class="keyword">const</span> GLint *);
03188 GLAPI <span class="keywordtype">void</span> APIENTRY glImageTransformParameterfvHP (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
03189 GLAPI <span class="keywordtype">void</span> APIENTRY glGetImageTransformParameterivHP (GLenum, GLenum, GLint *);
03190 GLAPI <span class="keywordtype">void</span> APIENTRY glGetImageTransformParameterfvHP (GLenum, GLenum, GLfloat *);
03191 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03192 <span class="keyword">typedef</span> void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
03193 <span class="keyword">typedef</span> void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
03194 <span class="keyword">typedef</span> void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
03195 <span class="keyword">typedef</span> void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
03196 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
03197 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
03198 <span class="preprocessor">#endif</span>
03199 <span class="preprocessor"></span>
03200 <span class="preprocessor">#ifndef GL_HP_convolution_border_modes</span>
03201 <span class="preprocessor"></span><span class="preprocessor">#define GL_HP_convolution_border_modes 1</span>
03202 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03203 <span class="preprocessor"></span>
03204 <span class="preprocessor">#ifndef GL_SGIX_texture_add_env</span>
03205 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_texture_add_env 1</span>
03206 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03207 <span class="preprocessor"></span>
03208 <span class="preprocessor">#ifndef GL_EXT_color_subtable</span>
03209 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_color_subtable 1</span>
03210 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03211 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glColorSubTableEXT (GLenum, GLsizei, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
03212 GLAPI <span class="keywordtype">void</span> APIENTRY glCopyColorSubTableEXT (GLenum, GLsizei, GLint, GLint, GLsizei);
03213 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03214 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *data);
03215 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
03216 <span class="preprocessor">#endif</span>
03217 <span class="preprocessor"></span>
03218 <span class="preprocessor">#ifndef GL_PGI_vertex_hints</span>
03219 <span class="preprocessor"></span><span class="preprocessor">#define GL_PGI_vertex_hints 1</span>
03220 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03221 <span class="preprocessor"></span>
03222 <span class="preprocessor">#ifndef GL_PGI_misc_hints</span>
03223 <span class="preprocessor"></span><span class="preprocessor">#define GL_PGI_misc_hints 1</span>
03224 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03225 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glHintPGI (GLenum, GLint);
03226 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03227 <span class="keyword">typedef</span> void (APIENTRY * PFNGLHINTPGIPROC) (GLenum target, GLint mode);
03228 <span class="preprocessor">#endif</span>
03229 <span class="preprocessor"></span>
03230 <span class="preprocessor">#ifndef GL_EXT_paletted_texture</span>
03231 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_paletted_texture 1</span>
03232 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03233 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glColorTableEXT (GLenum, GLenum, GLsizei, GLenum, GLenum, <span class="keyword">const</span> GLvoid *);
03234 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableEXT (GLenum, GLenum, GLenum, GLvoid *);
03235 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableParameterivEXT (GLenum, GLenum, GLint *);
03236 GLAPI <span class="keywordtype">void</span> APIENTRY glGetColorTableParameterfvEXT (GLenum, GLenum, GLfloat *);
03237 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03238 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, <span class="keyword">const</span> GLvoid *table);
03239 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);
03240 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
03241 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
03242 <span class="preprocessor">#endif</span>
03243 <span class="preprocessor"></span>
03244 <span class="preprocessor">#ifndef GL_EXT_clip_volume_hint</span>
03245 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_clip_volume_hint 1</span>
03246 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03247 <span class="preprocessor"></span>
03248 <span class="preprocessor">#ifndef GL_SGIX_list_priority</span>
03249 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_list_priority 1</span>
03250 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03251 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glGetListParameterfvSGIX (GLuint, GLenum, GLfloat *);
03252 GLAPI <span class="keywordtype">void</span> APIENTRY glGetListParameterivSGIX (GLuint, GLenum, GLint *);
03253 GLAPI <span class="keywordtype">void</span> APIENTRY glListParameterfSGIX (GLuint, GLenum, GLfloat);
03254 GLAPI <span class="keywordtype">void</span> APIENTRY glListParameterfvSGIX (GLuint, GLenum, <span class="keyword">const</span> GLfloat *);
03255 GLAPI <span class="keywordtype">void</span> APIENTRY glListParameteriSGIX (GLuint, GLenum, GLint);
03256 GLAPI <span class="keywordtype">void</span> APIENTRY glListParameterivSGIX (GLuint, GLenum, <span class="keyword">const</span> GLint *);
03257 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03258 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);
03259 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);
03260 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);
03261 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, <span class="keyword">const</span> GLfloat *params);
03262 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);
03263 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, <span class="keyword">const</span> GLint *params);
03264 <span class="preprocessor">#endif</span>
03265 <span class="preprocessor"></span>
03266 <span class="preprocessor">#ifndef GL_SGIX_ir_instrument1</span>
03267 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_ir_instrument1 1</span>
03268 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03269 <span class="preprocessor"></span>
03270 <span class="preprocessor">#ifndef GL_SGIX_calligraphic_fragment</span>
03271 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_calligraphic_fragment 1</span>
03272 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03273 <span class="preprocessor"></span>
03274 <span class="preprocessor">#ifndef GL_SGIX_texture_lod_bias</span>
03275 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_texture_lod_bias 1</span>
03276 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03277 <span class="preprocessor"></span>
03278 <span class="preprocessor">#ifndef GL_SGIX_shadow_ambient</span>
03279 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_shadow_ambient 1</span>
03280 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03281 <span class="preprocessor"></span>
03282 <span class="preprocessor">#ifndef GL_EXT_index_texture</span>
03283 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_index_texture 1</span>
03284 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03285 <span class="preprocessor"></span>
03286 <span class="preprocessor">#ifndef GL_EXT_index_material</span>
03287 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_index_material 1</span>
03288 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03289 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glIndexMaterialEXT (GLenum, GLenum);
03290 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03291 <span class="keyword">typedef</span> void (APIENTRY * PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);
03292 <span class="preprocessor">#endif</span>
03293 <span class="preprocessor"></span>
03294 <span class="preprocessor">#ifndef GL_EXT_index_func</span>
03295 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_index_func 1</span>
03296 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03297 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glIndexFuncEXT (GLenum, GLclampf);
03298 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03299 <span class="keyword">typedef</span> void (APIENTRY * PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);
03300 <span class="preprocessor">#endif</span>
03301 <span class="preprocessor"></span>
03302 <span class="preprocessor">#ifndef GL_EXT_index_array_formats</span>
03303 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_index_array_formats 1</span>
03304 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03305 <span class="preprocessor"></span>
03306 <span class="preprocessor">#ifndef GL_EXT_compiled_vertex_array</span>
03307 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_compiled_vertex_array 1</span>
03308 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03309 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glLockArraysEXT (GLint, GLsizei);
03310 GLAPI <span class="keywordtype">void</span> APIENTRY glUnlockArraysEXT (<span class="keywordtype">void</span>);
03311 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03312 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);
03313 <span class="keyword">typedef</span> void (APIENTRY * PFNGLUNLOCKARRAYSEXTPROC) (void);
03314 <span class="preprocessor">#endif</span>
03315 <span class="preprocessor"></span>
03316 <span class="preprocessor">#ifndef GL_EXT_cull_vertex</span>
03317 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_cull_vertex 1</span>
03318 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03319 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glCullParameterdvEXT (GLenum, GLdouble *);
03320 GLAPI <span class="keywordtype">void</span> APIENTRY glCullParameterfvEXT (GLenum, GLfloat *);
03321 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03322 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);
03323 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);
03324 <span class="preprocessor">#endif</span>
03325 <span class="preprocessor"></span>
03326 <span class="preprocessor">#ifndef GL_SGIX_ycrcb</span>
03327 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_ycrcb 1</span>
03328 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03329 <span class="preprocessor"></span>
03330 <span class="preprocessor">#ifndef GL_SGIX_fragment_lighting</span>
03331 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_fragment_lighting 1</span>
03332 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03333 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentColorMaterialSGIX (GLenum, GLenum);
03334 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightfSGIX (GLenum, GLenum, GLfloat);
03335 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightfvSGIX (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
03336 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightiSGIX (GLenum, GLenum, GLint);
03337 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightivSGIX (GLenum, GLenum, <span class="keyword">const</span> GLint *);
03338 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightModelfSGIX (GLenum, GLfloat);
03339 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightModelfvSGIX (GLenum, <span class="keyword">const</span> GLfloat *);
03340 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightModeliSGIX (GLenum, GLint);
03341 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentLightModelivSGIX (GLenum, <span class="keyword">const</span> GLint *);
03342 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentMaterialfSGIX (GLenum, GLenum, GLfloat);
03343 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentMaterialfvSGIX (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
03344 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentMaterialiSGIX (GLenum, GLenum, GLint);
03345 GLAPI <span class="keywordtype">void</span> APIENTRY glFragmentMaterialivSGIX (GLenum, GLenum, <span class="keyword">const</span> GLint *);
03346 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFragmentLightfvSGIX (GLenum, GLenum, GLfloat *);
03347 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFragmentLightivSGIX (GLenum, GLenum, GLint *);
03348 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFragmentMaterialfvSGIX (GLenum, GLenum, GLfloat *);
03349 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFragmentMaterialivSGIX (GLenum, GLenum, GLint *);
03350 GLAPI <span class="keywordtype">void</span> APIENTRY glLightEnviSGIX (GLenum, GLint);
03351 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03352 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
03353 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
03354 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, <span class="keyword">const</span> GLfloat *params);
03355 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
03356 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, <span class="keyword">const</span> GLint *params);
03357 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
03358 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
03359 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
03360 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, <span class="keyword">const</span> GLint *params);
03361 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);
03362 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, <span class="keyword">const</span> GLfloat *params);
03363 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);
03364 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, <span class="keyword">const</span> GLint *params);
03365 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);
03366 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);
03367 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);
03368 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);
03369 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);
03370 <span class="preprocessor">#endif</span>
03371 <span class="preprocessor"></span>
03372 <span class="preprocessor">#ifndef GL_IBM_rasterpos_clip</span>
03373 <span class="preprocessor"></span><span class="preprocessor">#define GL_IBM_rasterpos_clip 1</span>
03374 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03375 <span class="preprocessor"></span>
03376 <span class="preprocessor">#ifndef GL_HP_texture_lighting</span>
03377 <span class="preprocessor"></span><span class="preprocessor">#define GL_HP_texture_lighting 1</span>
03378 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03379 <span class="preprocessor"></span>
03380 <span class="preprocessor">#ifndef GL_EXT_draw_range_elements</span>
03381 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_draw_range_elements 1</span>
03382 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03383 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glDrawRangeElementsEXT (GLenum, GLuint, GLuint, GLsizei, GLenum, <span class="keyword">const</span> GLvoid *);
03384 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03385 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, <span class="keyword">const</span> GLvoid *indices);
03386 <span class="preprocessor">#endif</span>
03387 <span class="preprocessor"></span>
03388 <span class="preprocessor">#ifndef GL_WIN_phong_shading</span>
03389 <span class="preprocessor"></span><span class="preprocessor">#define GL_WIN_phong_shading 1</span>
03390 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03391 <span class="preprocessor"></span>
03392 <span class="preprocessor">#ifndef GL_WIN_specular_fog</span>
03393 <span class="preprocessor"></span><span class="preprocessor">#define GL_WIN_specular_fog 1</span>
03394 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03395 <span class="preprocessor"></span>
03396 <span class="preprocessor">#ifndef GL_EXT_light_texture</span>
03397 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_light_texture 1</span>
03398 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03399 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glApplyTextureEXT (GLenum);
03400 GLAPI <span class="keywordtype">void</span> APIENTRY glTextureLightEXT (GLenum);
03401 GLAPI <span class="keywordtype">void</span> APIENTRY glTextureMaterialEXT (GLenum, GLenum);
03402 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03403 <span class="keyword">typedef</span> void (APIENTRY * PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);
03404 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);
03405 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);
03406 <span class="preprocessor">#endif</span>
03407 <span class="preprocessor"></span>
03408 <span class="preprocessor">#ifndef GL_SGIX_blend_alpha_minmax</span>
03409 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_blend_alpha_minmax 1</span>
03410 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03411 <span class="preprocessor"></span>
03412 <span class="preprocessor">#ifndef GL_EXT_bgra</span>
03413 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_bgra 1</span>
03414 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03415 <span class="preprocessor"></span>
03416 <span class="preprocessor">#ifndef GL_SGIX_async</span>
03417 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_async 1</span>
03418 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03419 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glAsyncMarkerSGIX (GLuint);
03420 GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *);
03421 GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *);
03422 GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei);
03423 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteAsyncMarkersSGIX (GLuint, GLsizei);
03424 GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint);
03425 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03426 <span class="keyword">typedef</span> void (APIENTRY * PFNGLASYNCMARKERSGIXPROC) (GLuint marker);
03427 <span class="keyword">typedef</span> GLint (APIENTRY * PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);
03428 <span class="keyword">typedef</span> GLint (APIENTRY * PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);
03429 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);
03430 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);
03431 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);
03432 <span class="preprocessor">#endif</span>
03433 <span class="preprocessor"></span>
03434 <span class="preprocessor">#ifndef GL_SGIX_async_pixel</span>
03435 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_async_pixel 1</span>
03436 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03437 <span class="preprocessor"></span>
03438 <span class="preprocessor">#ifndef GL_SGIX_async_histogram</span>
03439 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_async_histogram 1</span>
03440 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03441 <span class="preprocessor"></span>
03442 <span class="preprocessor">#ifndef GL_INTEL_parallel_arrays</span>
03443 <span class="preprocessor"></span><span class="preprocessor">#define GL_INTEL_parallel_arrays 1</span>
03444 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03445 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glVertexPointervINTEL (GLint, GLenum, <span class="keyword">const</span> GLvoid* *);
03446 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalPointervINTEL (GLenum, <span class="keyword">const</span> GLvoid* *);
03447 GLAPI <span class="keywordtype">void</span> APIENTRY glColorPointervINTEL (GLint, GLenum, <span class="keyword">const</span> GLvoid* *);
03448 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoordPointervINTEL (GLint, GLenum, <span class="keyword">const</span> GLvoid* *);
03449 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03450 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, <span class="keyword">const</span> GLvoid* *pointer);
03451 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALPOINTERVINTELPROC) (GLenum type, <span class="keyword">const</span> GLvoid* *pointer);
03452 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, <span class="keyword">const</span> GLvoid* *pointer);
03453 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, <span class="keyword">const</span> GLvoid* *pointer);
03454 <span class="preprocessor">#endif</span>
03455 <span class="preprocessor"></span>
03456 <span class="preprocessor">#ifndef GL_HP_occlusion_test</span>
03457 <span class="preprocessor"></span><span class="preprocessor">#define GL_HP_occlusion_test 1</span>
03458 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03459 <span class="preprocessor"></span>
03460 <span class="preprocessor">#ifndef GL_EXT_pixel_transform</span>
03461 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_pixel_transform 1</span>
03462 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03463 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTransformParameteriEXT (GLenum, GLenum, GLint);
03464 GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTransformParameterfEXT (GLenum, GLenum, GLfloat);
03465 GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTransformParameterivEXT (GLenum, GLenum, <span class="keyword">const</span> GLint *);
03466 GLAPI <span class="keywordtype">void</span> APIENTRY glPixelTransformParameterfvEXT (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
03467 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03468 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);
03469 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);
03470 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
03471 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
03472 <span class="preprocessor">#endif</span>
03473 <span class="preprocessor"></span>
03474 <span class="preprocessor">#ifndef GL_EXT_pixel_transform_color_table</span>
03475 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_pixel_transform_color_table 1</span>
03476 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03477 <span class="preprocessor"></span>
03478 <span class="preprocessor">#ifndef GL_EXT_shared_texture_palette</span>
03479 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_shared_texture_palette 1</span>
03480 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03481 <span class="preprocessor"></span>
03482 <span class="preprocessor">#ifndef GL_EXT_separate_specular_color</span>
03483 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_separate_specular_color 1</span>
03484 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03485 <span class="preprocessor"></span>
03486 <span class="preprocessor">#ifndef GL_EXT_secondary_color</span>
03487 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_secondary_color 1</span>
03488 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03489 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3bEXT (GLbyte, GLbyte, GLbyte);
03490 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3bvEXT (<span class="keyword">const</span> GLbyte *);
03491 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3dEXT (GLdouble, GLdouble, GLdouble);
03492 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3dvEXT (<span class="keyword">const</span> GLdouble *);
03493 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3fEXT (GLfloat, GLfloat, GLfloat);
03494 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3fvEXT (<span class="keyword">const</span> GLfloat *);
03495 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3iEXT (GLint, GLint, GLint);
03496 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3ivEXT (<span class="keyword">const</span> GLint *);
03497 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3sEXT (GLshort, GLshort, GLshort);
03498 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3svEXT (<span class="keyword">const</span> GLshort *);
03499 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3ubEXT (GLubyte, GLubyte, GLubyte);
03500 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3ubvEXT (<span class="keyword">const</span> GLubyte *);
03501 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3uiEXT (GLuint, GLuint, GLuint);
03502 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3uivEXT (<span class="keyword">const</span> GLuint *);
03503 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3usEXT (GLushort, GLushort, GLushort);
03504 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColor3usvEXT (<span class="keyword">const</span> GLushort *);
03505 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColorPointerEXT (GLint, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
03506 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03507 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);
03508 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3BVEXTPROC) (<span class="keyword">const</span> GLbyte *v);
03509 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);
03510 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3DVEXTPROC) (<span class="keyword">const</span> GLdouble *v);
03511 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);
03512 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3FVEXTPROC) (<span class="keyword">const</span> GLfloat *v);
03513 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);
03514 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3IVEXTPROC) (<span class="keyword">const</span> GLint *v);
03515 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);
03516 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3SVEXTPROC) (<span class="keyword">const</span> GLshort *v);
03517 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);
03518 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3UBVEXTPROC) (<span class="keyword">const</span> GLubyte *v);
03519 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);
03520 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3UIVEXTPROC) (<span class="keyword">const</span> GLuint *v);
03521 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);
03522 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLOR3USVEXTPROC) (<span class="keyword">const</span> GLushort *v);
03523 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
03524 <span class="preprocessor">#endif</span>
03525 <span class="preprocessor"></span>
03526 <span class="preprocessor">#ifndef GL_EXT_texture_perturb_normal</span>
03527 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_perturb_normal 1</span>
03528 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03529 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTextureNormalEXT (GLenum);
03530 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03531 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXTURENORMALEXTPROC) (GLenum mode);
03532 <span class="preprocessor">#endif</span>
03533 <span class="preprocessor"></span>
03534 <span class="preprocessor">#ifndef GL_EXT_multi_draw_arrays</span>
03535 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_multi_draw_arrays 1</span>
03536 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03537 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glMultiDrawArraysEXT (GLenum, GLint *, GLsizei *, GLsizei);
03538 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiDrawElementsEXT (GLenum, <span class="keyword">const</span> GLsizei *, GLenum, <span class="keyword">const</span> GLvoid* *, GLsizei);
03539 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03540 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);
03541 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, <span class="keyword">const</span> GLsizei *count, GLenum type, <span class="keyword">const</span> GLvoid* *indices, GLsizei primcount);
03542 <span class="preprocessor">#endif</span>
03543 <span class="preprocessor"></span>
03544 <span class="preprocessor">#ifndef GL_EXT_fog_coord</span>
03545 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_fog_coord 1</span>
03546 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03547 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFogCoordfEXT (GLfloat);
03548 GLAPI <span class="keywordtype">void</span> APIENTRY glFogCoordfvEXT (<span class="keyword">const</span> GLfloat *);
03549 GLAPI <span class="keywordtype">void</span> APIENTRY glFogCoorddEXT (GLdouble);
03550 GLAPI <span class="keywordtype">void</span> APIENTRY glFogCoorddvEXT (<span class="keyword">const</span> GLdouble *);
03551 GLAPI <span class="keywordtype">void</span> APIENTRY glFogCoordPointerEXT (GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
03552 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03553 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGCOORDFEXTPROC) (GLfloat coord);
03554 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGCOORDFVEXTPROC) (<span class="keyword">const</span> GLfloat *coord);
03555 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGCOORDDEXTPROC) (GLdouble coord);
03556 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGCOORDDVEXTPROC) (<span class="keyword">const</span> GLdouble *coord);
03557 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
03558 <span class="preprocessor">#endif</span>
03559 <span class="preprocessor"></span>
03560 <span class="preprocessor">#ifndef GL_REND_screen_coordinates</span>
03561 <span class="preprocessor"></span><span class="preprocessor">#define GL_REND_screen_coordinates 1</span>
03562 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03563 <span class="preprocessor"></span>
03564 <span class="preprocessor">#ifndef GL_EXT_coordinate_frame</span>
03565 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_coordinate_frame 1</span>
03566 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03567 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3bEXT (GLbyte, GLbyte, GLbyte);
03568 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3bvEXT (<span class="keyword">const</span> GLbyte *);
03569 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3dEXT (GLdouble, GLdouble, GLdouble);
03570 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3dvEXT (<span class="keyword">const</span> GLdouble *);
03571 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3fEXT (GLfloat, GLfloat, GLfloat);
03572 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3fvEXT (<span class="keyword">const</span> GLfloat *);
03573 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3iEXT (GLint, GLint, GLint);
03574 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3ivEXT (<span class="keyword">const</span> GLint *);
03575 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3sEXT (GLshort, GLshort, GLshort);
03576 GLAPI <span class="keywordtype">void</span> APIENTRY glTangent3svEXT (<span class="keyword">const</span> GLshort *);
03577 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3bEXT (GLbyte, GLbyte, GLbyte);
03578 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3bvEXT (<span class="keyword">const</span> GLbyte *);
03579 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3dEXT (GLdouble, GLdouble, GLdouble);
03580 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3dvEXT (<span class="keyword">const</span> GLdouble *);
03581 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3fEXT (GLfloat, GLfloat, GLfloat);
03582 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3fvEXT (<span class="keyword">const</span> GLfloat *);
03583 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3iEXT (GLint, GLint, GLint);
03584 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3ivEXT (<span class="keyword">const</span> GLint *);
03585 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3sEXT (GLshort, GLshort, GLshort);
03586 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormal3svEXT (<span class="keyword">const</span> GLshort *);
03587 GLAPI <span class="keywordtype">void</span> APIENTRY glTangentPointerEXT (GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
03588 GLAPI <span class="keywordtype">void</span> APIENTRY glBinormalPointerEXT (GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
03589 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03590 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
03591 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3BVEXTPROC) (<span class="keyword">const</span> GLbyte *v);
03592 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
03593 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3DVEXTPROC) (<span class="keyword">const</span> GLdouble *v);
03594 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
03595 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3FVEXTPROC) (<span class="keyword">const</span> GLfloat *v);
03596 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
03597 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3IVEXTPROC) (<span class="keyword">const</span> GLint *v);
03598 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
03599 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENT3SVEXTPROC) (<span class="keyword">const</span> GLshort *v);
03600 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
03601 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3BVEXTPROC) (<span class="keyword">const</span> GLbyte *v);
03602 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
03603 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3DVEXTPROC) (<span class="keyword">const</span> GLdouble *v);
03604 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
03605 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3FVEXTPROC) (<span class="keyword">const</span> GLfloat *v);
03606 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
03607 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3IVEXTPROC) (<span class="keyword">const</span> GLint *v);
03608 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
03609 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMAL3SVEXTPROC) (<span class="keyword">const</span> GLshort *v);
03610 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
03611 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
03612 <span class="preprocessor">#endif</span>
03613 <span class="preprocessor"></span>
03614 <span class="preprocessor">#ifndef GL_EXT_texture_env_combine</span>
03615 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_env_combine 1</span>
03616 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03617 <span class="preprocessor"></span>
03618 <span class="preprocessor">#ifndef GL_APPLE_specular_vector</span>
03619 <span class="preprocessor"></span><span class="preprocessor">#define GL_APPLE_specular_vector 1</span>
03620 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03621 <span class="preprocessor"></span>
03622 <span class="preprocessor">#ifndef GL_APPLE_transform_hint</span>
03623 <span class="preprocessor"></span><span class="preprocessor">#define GL_APPLE_transform_hint 1</span>
03624 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03625 <span class="preprocessor"></span>
03626 <span class="preprocessor">#ifndef GL_SGIX_fog_scale</span>
03627 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_fog_scale 1</span>
03628 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03629 <span class="preprocessor"></span>
03630 <span class="preprocessor">#ifndef GL_SUNX_constant_data</span>
03631 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUNX_constant_data 1</span>
03632 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03633 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFinishTextureSUNX (<span class="keywordtype">void</span>);
03634 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03635 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFINISHTEXTURESUNXPROC) (void);
03636 <span class="preprocessor">#endif</span>
03637 <span class="preprocessor"></span>
03638 <span class="preprocessor">#ifndef GL_SUN_global_alpha</span>
03639 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUN_global_alpha 1</span>
03640 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03641 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactorbSUN (GLbyte);
03642 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactorsSUN (GLshort);
03643 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactoriSUN (GLint);
03644 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactorfSUN (GLfloat);
03645 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactordSUN (GLdouble);
03646 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactorubSUN (GLubyte);
03647 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactorusSUN (GLushort);
03648 GLAPI <span class="keywordtype">void</span> APIENTRY glGlobalAlphaFactoruiSUN (GLuint);
03649 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03650 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);
03651 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);
03652 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);
03653 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);
03654 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);
03655 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);
03656 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);
03657 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);
03658 <span class="preprocessor">#endif</span>
03659 <span class="preprocessor"></span>
03660 <span class="preprocessor">#ifndef GL_SUN_triangle_list</span>
03661 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUN_triangle_list 1</span>
03662 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03663 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiSUN (GLuint);
03664 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeusSUN (GLushort);
03665 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeubSUN (GLubyte);
03666 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuivSUN (<span class="keyword">const</span> GLuint *);
03667 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeusvSUN (<span class="keyword">const</span> GLushort *);
03668 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeubvSUN (<span class="keyword">const</span> GLubyte *);
03669 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodePointerSUN (GLenum, GLsizei, <span class="keyword">const</span> GLvoid* *);
03670 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03671 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);
03672 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);
03673 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);
03674 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUIVSUNPROC) (<span class="keyword">const</span> GLuint *code);
03675 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUSVSUNPROC) (<span class="keyword">const</span> GLushort *code);
03676 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUBVSUNPROC) (<span class="keyword">const</span> GLubyte *code);
03677 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid* *pointer);
03678 <span class="preprocessor">#endif</span>
03679 <span class="preprocessor"></span>
03680 <span class="preprocessor">#ifndef GL_SUN_vertex</span>
03681 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUN_vertex 1</span>
03682 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03683 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glColor4ubVertex2fSUN (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat);
03684 GLAPI <span class="keywordtype">void</span> APIENTRY glColor4ubVertex2fvSUN (<span class="keyword">const</span> GLubyte *, <span class="keyword">const</span> GLfloat *);
03685 GLAPI <span class="keywordtype">void</span> APIENTRY glColor4ubVertex3fSUN (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);
03686 GLAPI <span class="keywordtype">void</span> APIENTRY glColor4ubVertex3fvSUN (<span class="keyword">const</span> GLubyte *, <span class="keyword">const</span> GLfloat *);
03687 GLAPI <span class="keywordtype">void</span> APIENTRY glColor3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03688 GLAPI <span class="keywordtype">void</span> APIENTRY glColor3fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03689 GLAPI <span class="keywordtype">void</span> APIENTRY glNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03690 GLAPI <span class="keywordtype">void</span> APIENTRY glNormal3fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03691 GLAPI <span class="keywordtype">void</span> APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03692 GLAPI <span class="keywordtype">void</span> APIENTRY glColor4fNormal3fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03693 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03694 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03695 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord4fVertex4fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03696 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord4fVertex4fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03697 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);
03698 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fColor4ubVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLubyte *, <span class="keyword">const</span> GLfloat *);
03699 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03700 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fColor3fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03701 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03702 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fNormal3fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03703 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03704 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03705 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03706 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (<span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03707 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat);
03708 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *);
03709 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);
03710 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLubyte *, <span class="keyword">const</span> GLfloat *);
03711 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03712 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03713 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03714 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03715 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03716 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03717 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03718 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03719 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03720 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03721 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
03722 GLAPI <span class="keywordtype">void</span> APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (<span class="keyword">const</span> GLuint *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *, <span class="keyword">const</span> GLfloat *);
03723 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03724 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
03725 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR4UBVERTEX2FVSUNPROC) (<span class="keyword">const</span> GLubyte *c, <span class="keyword">const</span> GLfloat *v);
03726 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
03727 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR4UBVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLubyte *c, <span class="keyword">const</span> GLfloat *v);
03728 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
03729 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *v);
03730 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03731 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03732 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03733 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03734 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
03735 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *v);
03736 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
03737 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *v);
03738 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
03739 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLubyte *c, <span class="keyword">const</span> GLfloat *v);
03740 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
03741 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *v);
03742 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03743 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03744 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03745 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03746 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
03747 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (<span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03748 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
03749 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *v);
03750 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
03751 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLubyte *c, <span class="keyword">const</span> GLfloat *v);
03752 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
03753 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *v);
03754 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03755 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03756 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03757 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03758 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
03759 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *v);
03760 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03761 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03762 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
03763 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (<span class="keyword">const</span> GLuint *rc, <span class="keyword">const</span> GLfloat *tc, <span class="keyword">const</span> GLfloat *c, <span class="keyword">const</span> GLfloat *n, <span class="keyword">const</span> GLfloat *v);
03764 <span class="preprocessor">#endif</span>
03765 <span class="preprocessor"></span>
03766 <span class="preprocessor">#ifndef GL_EXT_blend_func_separate</span>
03767 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_blend_func_separate 1</span>
03768 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03769 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glBlendFuncSeparateEXT (GLenum, GLenum, GLenum, GLenum);
03770 GLAPI <span class="keywordtype">void</span> APIENTRY glBlendFuncSeparateINGR (GLenum, GLenum, GLenum, GLenum);
03771 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03772 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
03773 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
03774 <span class="preprocessor">#endif</span>
03775 <span class="preprocessor"></span>
03776 <span class="preprocessor">#ifndef GL_INGR_color_clamp</span>
03777 <span class="preprocessor"></span><span class="preprocessor">#define GL_INGR_color_clamp 1</span>
03778 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03779 <span class="preprocessor"></span>
03780 <span class="preprocessor">#ifndef GL_INGR_interlace_read</span>
03781 <span class="preprocessor"></span><span class="preprocessor">#define GL_INGR_interlace_read 1</span>
03782 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03783 <span class="preprocessor"></span>
03784 <span class="preprocessor">#ifndef GL_EXT_stencil_wrap</span>
03785 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_stencil_wrap 1</span>
03786 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03787 <span class="preprocessor"></span>
03788 <span class="preprocessor">#ifndef GL_EXT_422_pixels</span>
03789 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_422_pixels 1</span>
03790 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03791 <span class="preprocessor"></span>
03792 <span class="preprocessor">#ifndef GL_NV_texgen_reflection</span>
03793 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texgen_reflection 1</span>
03794 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03795 <span class="preprocessor"></span>
03796 <span class="preprocessor">#ifndef GL_SUN_convolution_border_modes</span>
03797 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUN_convolution_border_modes 1</span>
03798 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03799 <span class="preprocessor"></span>
03800 <span class="preprocessor">#ifndef GL_EXT_texture_env_add</span>
03801 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_env_add 1</span>
03802 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03803 <span class="preprocessor"></span>
03804 <span class="preprocessor">#ifndef GL_EXT_texture_lod_bias</span>
03805 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_lod_bias 1</span>
03806 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03807 <span class="preprocessor"></span>
03808 <span class="preprocessor">#ifndef GL_EXT_texture_filter_anisotropic</span>
03809 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_filter_anisotropic 1</span>
03810 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03811 <span class="preprocessor"></span>
03812 <span class="preprocessor">#ifndef GL_EXT_vertex_weighting</span>
03813 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_vertex_weighting 1</span>
03814 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03815 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glVertexWeightfEXT (GLfloat);
03816 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexWeightfvEXT (<span class="keyword">const</span> GLfloat *);
03817 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexWeightPointerEXT (GLsizei, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
03818 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03819 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);
03820 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXWEIGHTFVEXTPROC) (<span class="keyword">const</span> GLfloat *weight);
03821 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
03822 <span class="preprocessor">#endif</span>
03823 <span class="preprocessor"></span>
03824 <span class="preprocessor">#ifndef GL_NV_light_max_exponent</span>
03825 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_light_max_exponent 1</span>
03826 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03827 <span class="preprocessor"></span>
03828 <span class="preprocessor">#ifndef GL_NV_vertex_array_range</span>
03829 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_vertex_array_range 1</span>
03830 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03831 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glFlushVertexArrayRangeNV (<span class="keywordtype">void</span>);
03832 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexArrayRangeNV (GLsizei, <span class="keyword">const</span> GLvoid *);
03833 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03834 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);
03835 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, <span class="keyword">const</span> GLvoid *pointer);
03836 <span class="preprocessor">#endif</span>
03837 <span class="preprocessor"></span>
03838 <span class="preprocessor">#ifndef GL_NV_register_combiners</span>
03839 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_register_combiners 1</span>
03840 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03841 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerParameterfvNV (GLenum, <span class="keyword">const</span> GLfloat *);
03842 GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerParameterfNV (GLenum, GLfloat);
03843 GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerParameterivNV (GLenum, <span class="keyword">const</span> GLint *);
03844 GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerParameteriNV (GLenum, GLint);
03845 GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerInputNV (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum);
03846 GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerOutputNV (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean);
03847 GLAPI <span class="keywordtype">void</span> APIENTRY glFinalCombinerInputNV (GLenum, GLenum, GLenum, GLenum);
03848 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCombinerInputParameterfvNV (GLenum, GLenum, GLenum, GLenum, GLfloat *);
03849 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCombinerInputParameterivNV (GLenum, GLenum, GLenum, GLenum, GLint *);
03850 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCombinerOutputParameterfvNV (GLenum, GLenum, GLenum, GLfloat *);
03851 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCombinerOutputParameterivNV (GLenum, GLenum, GLenum, GLint *);
03852 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum, GLenum, GLfloat *);
03853 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFinalCombinerInputParameterivNV (GLenum, GLenum, GLint *);
03854 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03855 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *params);
03856 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
03857 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, <span class="keyword">const</span> GLint *params);
03858 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
03859 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
03860 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
03861 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
03862 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
03863 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
03864 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
03865 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);
03866 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);
03867 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);
03868 <span class="preprocessor">#endif</span>
03869 <span class="preprocessor"></span>
03870 <span class="preprocessor">#ifndef GL_NV_fog_distance</span>
03871 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_fog_distance 1</span>
03872 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03873 <span class="preprocessor"></span>
03874 <span class="preprocessor">#ifndef GL_NV_texgen_emboss</span>
03875 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texgen_emboss 1</span>
03876 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03877 <span class="preprocessor"></span>
03878 <span class="preprocessor">#ifndef GL_NV_blend_square</span>
03879 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_blend_square 1</span>
03880 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03881 <span class="preprocessor"></span>
03882 <span class="preprocessor">#ifndef GL_NV_texture_env_combine4</span>
03883 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texture_env_combine4 1</span>
03884 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03885 <span class="preprocessor"></span>
03886 <span class="preprocessor">#ifndef GL_MESA_resize_buffers</span>
03887 <span class="preprocessor"></span><span class="preprocessor">#define GL_MESA_resize_buffers 1</span>
03888 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03889 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glResizeBuffersMESA (<span class="keywordtype">void</span>);
03890 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03891 <span class="keyword">typedef</span> void (APIENTRY * PFNGLRESIZEBUFFERSMESAPROC) (void);
03892 <span class="preprocessor">#endif</span>
03893 <span class="preprocessor"></span>
03894 <span class="preprocessor">#ifndef GL_MESA_window_pos</span>
03895 <span class="preprocessor"></span><span class="preprocessor">#define GL_MESA_window_pos 1</span>
03896 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03897 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2dMESA (GLdouble, GLdouble);
03898 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2dvMESA (<span class="keyword">const</span> GLdouble *);
03899 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2fMESA (GLfloat, GLfloat);
03900 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2fvMESA (<span class="keyword">const</span> GLfloat *);
03901 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2iMESA (GLint, GLint);
03902 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2ivMESA (<span class="keyword">const</span> GLint *);
03903 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2sMESA (GLshort, GLshort);
03904 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos2svMESA (<span class="keyword">const</span> GLshort *);
03905 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3dMESA (GLdouble, GLdouble, GLdouble);
03906 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3dvMESA (<span class="keyword">const</span> GLdouble *);
03907 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3fMESA (GLfloat, GLfloat, GLfloat);
03908 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3fvMESA (<span class="keyword">const</span> GLfloat *);
03909 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3iMESA (GLint, GLint, GLint);
03910 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3ivMESA (<span class="keyword">const</span> GLint *);
03911 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3sMESA (GLshort, GLshort, GLshort);
03912 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos3svMESA (<span class="keyword">const</span> GLshort *);
03913 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4dMESA (GLdouble, GLdouble, GLdouble, GLdouble);
03914 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4dvMESA (<span class="keyword">const</span> GLdouble *);
03915 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4fMESA (GLfloat, GLfloat, GLfloat, GLfloat);
03916 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4fvMESA (<span class="keyword">const</span> GLfloat *);
03917 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4iMESA (GLint, GLint, GLint, GLint);
03918 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4ivMESA (<span class="keyword">const</span> GLint *);
03919 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4sMESA (GLshort, GLshort, GLshort, GLshort);
03920 GLAPI <span class="keywordtype">void</span> APIENTRY glWindowPos4svMESA (<span class="keyword">const</span> GLshort *);
03921 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03922 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);
03923 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2DVMESAPROC) (<span class="keyword">const</span> GLdouble *v);
03924 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);
03925 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2FVMESAPROC) (<span class="keyword">const</span> GLfloat *v);
03926 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);
03927 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2IVMESAPROC) (<span class="keyword">const</span> GLint *v);
03928 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);
03929 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS2SVMESAPROC) (<span class="keyword">const</span> GLshort *v);
03930 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);
03931 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3DVMESAPROC) (<span class="keyword">const</span> GLdouble *v);
03932 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);
03933 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3FVMESAPROC) (<span class="keyword">const</span> GLfloat *v);
03934 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);
03935 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3IVMESAPROC) (<span class="keyword">const</span> GLint *v);
03936 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);
03937 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS3SVMESAPROC) (<span class="keyword">const</span> GLshort *v);
03938 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
03939 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4DVMESAPROC) (<span class="keyword">const</span> GLdouble *v);
03940 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
03941 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4FVMESAPROC) (<span class="keyword">const</span> GLfloat *v);
03942 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);
03943 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4IVMESAPROC) (<span class="keyword">const</span> GLint *v);
03944 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
03945 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWINDOWPOS4SVMESAPROC) (<span class="keyword">const</span> GLshort *v);
03946 <span class="preprocessor">#endif</span>
03947 <span class="preprocessor"></span>
03948 <span class="preprocessor">#ifndef GL_IBM_cull_vertex</span>
03949 <span class="preprocessor"></span><span class="preprocessor">#define GL_IBM_cull_vertex 1</span>
03950 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03951 <span class="preprocessor"></span>
03952 <span class="preprocessor">#ifndef GL_IBM_multimode_draw_arrays</span>
03953 <span class="preprocessor"></span><span class="preprocessor">#define GL_IBM_multimode_draw_arrays 1</span>
03954 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03955 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glMultiModeDrawArraysIBM (GLenum, <span class="keyword">const</span> GLint *, <span class="keyword">const</span> GLsizei *, GLsizei, GLint);
03956 GLAPI <span class="keywordtype">void</span> APIENTRY glMultiModeDrawElementsIBM (<span class="keyword">const</span> GLenum *, <span class="keyword">const</span> GLsizei *, GLenum, <span class="keyword">const</span> GLvoid* *, GLsizei, GLint);
03957 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03958 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTIMODEDRAWARRAYSIBMPROC) (GLenum mode, <span class="keyword">const</span> GLint *first, <span class="keyword">const</span> GLsizei *count, GLsizei primcount, GLint modestride);
03959 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (<span class="keyword">const</span> GLenum *mode, <span class="keyword">const</span> GLsizei *count, GLenum type, <span class="keyword">const</span> GLvoid* *indices, GLsizei primcount, GLint modestride);
03960 <span class="preprocessor">#endif</span>
03961 <span class="preprocessor"></span>
03962 <span class="preprocessor">#ifndef GL_IBM_vertex_array_lists</span>
03963 <span class="preprocessor"></span><span class="preprocessor">#define GL_IBM_vertex_array_lists 1</span>
03964 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
03965 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glColorPointerListIBM (GLint, GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03966 GLAPI <span class="keywordtype">void</span> APIENTRY glSecondaryColorPointerListIBM (GLint, GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03967 GLAPI <span class="keywordtype">void</span> APIENTRY glEdgeFlagPointerListIBM (GLint, <span class="keyword">const</span> GLboolean* *, GLint);
03968 GLAPI <span class="keywordtype">void</span> APIENTRY glFogCoordPointerListIBM (GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03969 GLAPI <span class="keywordtype">void</span> APIENTRY glIndexPointerListIBM (GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03970 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalPointerListIBM (GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03971 GLAPI <span class="keywordtype">void</span> APIENTRY glTexCoordPointerListIBM (GLint, GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03972 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexPointerListIBM (GLint, GLenum, GLint, <span class="keyword">const</span> GLvoid* *, GLint);
03973 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
03974 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03975 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03976 <span class="keyword">typedef</span> void (APIENTRY * PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, <span class="keyword">const</span> GLboolean* *pointer, GLint ptrstride);
03977 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03978 <span class="keyword">typedef</span> void (APIENTRY * PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03979 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03980 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03981 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, <span class="keyword">const</span> GLvoid* *pointer, GLint ptrstride);
03982 <span class="preprocessor">#endif</span>
03983 <span class="preprocessor"></span>
03984 <span class="preprocessor">#ifndef GL_SGIX_subsample</span>
03985 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_subsample 1</span>
03986 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03987 <span class="preprocessor"></span>
03988 <span class="preprocessor">#ifndef GL_SGIX_ycrcba</span>
03989 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_ycrcba 1</span>
03990 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03991 <span class="preprocessor"></span>
03992 <span class="preprocessor">#ifndef GL_SGIX_ycrcb_subsample</span>
03993 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_ycrcb_subsample 1</span>
03994 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03995 <span class="preprocessor"></span>
03996 <span class="preprocessor">#ifndef GL_SGIX_depth_pass_instrument</span>
03997 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_depth_pass_instrument 1</span>
03998 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
03999 <span class="preprocessor"></span>
04000 <span class="preprocessor">#ifndef GL_3DFX_texture_compression_FXT1</span>
04001 <span class="preprocessor"></span><span class="preprocessor">#define GL_3DFX_texture_compression_FXT1 1</span>
04002 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04003 <span class="preprocessor"></span>
04004 <span class="preprocessor">#ifndef GL_3DFX_multisample</span>
04005 <span class="preprocessor"></span><span class="preprocessor">#define GL_3DFX_multisample 1</span>
04006 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04007 <span class="preprocessor"></span>
04008 <span class="preprocessor">#ifndef GL_3DFX_tbuffer</span>
04009 <span class="preprocessor"></span><span class="preprocessor">#define GL_3DFX_tbuffer 1</span>
04010 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04011 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTbufferMask3DFX (GLuint);
04012 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04013 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);
04014 <span class="preprocessor">#endif</span>
04015 <span class="preprocessor"></span>
04016 <span class="preprocessor">#ifndef GL_EXT_multisample</span>
04017 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_multisample 1</span>
04018 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04019 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glSampleMaskEXT (GLclampf, GLboolean);
04020 GLAPI <span class="keywordtype">void</span> APIENTRY glSamplePatternEXT (GLenum);
04021 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04022 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);
04023 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);
04024 <span class="preprocessor">#endif</span>
04025 <span class="preprocessor"></span>
04026 <span class="preprocessor">#ifndef GL_SGIX_vertex_preclip</span>
04027 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_vertex_preclip 1</span>
04028 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04029 <span class="preprocessor"></span>
04030 <span class="preprocessor">#ifndef GL_SGIX_convolution_accuracy</span>
04031 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_convolution_accuracy 1</span>
04032 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04033 <span class="preprocessor"></span>
04034 <span class="preprocessor">#ifndef GL_SGIX_resample</span>
04035 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_resample 1</span>
04036 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04037 <span class="preprocessor"></span>
04038 <span class="preprocessor">#ifndef GL_SGIS_point_line_texgen</span>
04039 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_point_line_texgen 1</span>
04040 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04041 <span class="preprocessor"></span>
04042 <span class="preprocessor">#ifndef GL_SGIS_texture_color_mask</span>
04043 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIS_texture_color_mask 1</span>
04044 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04045 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTextureColorMaskSGIS (GLboolean, GLboolean, GLboolean, GLboolean);
04046 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04047 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
04048 <span class="preprocessor">#endif</span>
04049 <span class="preprocessor"></span>
04050 <span class="preprocessor">#ifndef GL_SGIX_igloo_interface</span>
04051 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_igloo_interface 1</span>
04052 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04053 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glIglooInterfaceSGIX (GLenum, <span class="keyword">const</span> GLvoid *);
04054 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04055 <span class="keyword">typedef</span> void (APIENTRY * PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, <span class="keyword">const</span> GLvoid *params);
04056 <span class="preprocessor">#endif</span>
04057 <span class="preprocessor"></span>
04058 <span class="preprocessor">#ifndef GL_EXT_texture_env_dot3</span>
04059 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_texture_env_dot3 1</span>
04060 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04061 <span class="preprocessor"></span>
04062 <span class="preprocessor">#ifndef GL_ATI_texture_mirror_once</span>
04063 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_texture_mirror_once 1</span>
04064 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04065 <span class="preprocessor"></span>
04066 <span class="preprocessor">#ifndef GL_NV_fence</span>
04067 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_fence 1</span>
04068 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04069 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteFencesNV (GLsizei, <span class="keyword">const</span> GLuint *);
04070 GLAPI <span class="keywordtype">void</span> APIENTRY glGenFencesNV (GLsizei, GLuint *);
04071 GLAPI GLboolean APIENTRY glIsFenceNV (GLuint);
04072 GLAPI GLboolean APIENTRY glTestFenceNV (GLuint);
04073 GLAPI <span class="keywordtype">void</span> APIENTRY glGetFenceivNV (GLuint, GLenum, GLint *);
04074 GLAPI <span class="keywordtype">void</span> APIENTRY glFinishFenceNV (GLuint);
04075 GLAPI <span class="keywordtype">void</span> APIENTRY glSetFenceNV (GLuint, GLenum);
04076 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04077 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEFENCESNVPROC) (GLsizei n, <span class="keyword">const</span> GLuint *fences);
04078 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);
04079 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISFENCENVPROC) (GLuint fence);
04080 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLTESTFENCENVPROC) (GLuint fence);
04081 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);
04082 <span class="keyword">typedef</span> void (APIENTRY * PFNGLFINISHFENCENVPROC) (GLuint fence);
04083 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);
04084 <span class="preprocessor">#endif</span>
04085 <span class="preprocessor"></span>
04086 <span class="preprocessor">#ifndef GL_NV_evaluators</span>
04087 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_evaluators 1</span>
04088 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04089 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glMapControlPointsNV (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, <span class="keyword">const</span> GLvoid *);
04090 GLAPI <span class="keywordtype">void</span> APIENTRY glMapParameterivNV (GLenum, GLenum, <span class="keyword">const</span> GLint *);
04091 GLAPI <span class="keywordtype">void</span> APIENTRY glMapParameterfvNV (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
04092 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMapControlPointsNV (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, GLvoid *);
04093 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMapParameterivNV (GLenum, GLenum, GLint *);
04094 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMapParameterfvNV (GLenum, GLenum, GLfloat *);
04095 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMapAttribParameterivNV (GLenum, GLuint, GLenum, GLint *);
04096 GLAPI <span class="keywordtype">void</span> APIENTRY glGetMapAttribParameterfvNV (GLenum, GLuint, GLenum, GLfloat *);
04097 GLAPI <span class="keywordtype">void</span> APIENTRY glEvalMapsNV (GLenum, GLenum);
04098 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04099 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, <span class="keyword">const</span> GLvoid *points);
04100 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLint *params);
04101 <span class="keyword">typedef</span> void (APIENTRY * PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, <span class="keyword">const</span> GLfloat *params);
04102 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);
04103 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);
04104 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);
04105 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
04106 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
04107 <span class="keyword">typedef</span> void (APIENTRY * PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);
04108 <span class="preprocessor">#endif</span>
04109 <span class="preprocessor"></span>
04110 <span class="preprocessor">#ifndef GL_NV_packed_depth_stencil</span>
04111 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_packed_depth_stencil 1</span>
04112 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04113 <span class="preprocessor"></span>
04114 <span class="preprocessor">#ifndef GL_NV_register_combiners2</span>
04115 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_register_combiners2 1</span>
04116 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04117 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glCombinerStageParameterfvNV (GLenum, GLenum, <span class="keyword">const</span> GLfloat *);
04118 GLAPI <span class="keywordtype">void</span> APIENTRY glGetCombinerStageParameterfvNV (GLenum, GLenum, GLfloat *);
04119 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04120 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, <span class="keyword">const</span> GLfloat *params);
04121 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);
04122 <span class="preprocessor">#endif</span>
04123 <span class="preprocessor"></span>
04124 <span class="preprocessor">#ifndef GL_NV_texture_compression_vtc</span>
04125 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texture_compression_vtc 1</span>
04126 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04127 <span class="preprocessor"></span>
04128 <span class="preprocessor">#ifndef GL_NV_texture_rectangle</span>
04129 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texture_rectangle 1</span>
04130 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04131 <span class="preprocessor"></span>
04132 <span class="preprocessor">#ifndef GL_NV_texture_shader</span>
04133 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texture_shader 1</span>
04134 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04135 <span class="preprocessor"></span>
04136 <span class="preprocessor">#ifndef GL_NV_texture_shader2</span>
04137 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texture_shader2 1</span>
04138 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04139 <span class="preprocessor"></span>
04140 <span class="preprocessor">#ifndef GL_NV_vertex_array_range2</span>
04141 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_vertex_array_range2 1</span>
04142 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04143 <span class="preprocessor"></span>
04144 <span class="preprocessor">#ifndef GL_NV_vertex_program</span>
04145 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_vertex_program 1</span>
04146 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04147 <span class="preprocessor"></span>GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei, <span class="keyword">const</span> GLuint *, GLboolean *);
04148 GLAPI <span class="keywordtype">void</span> APIENTRY glBindProgramNV (GLenum, GLuint);
04149 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteProgramsNV (GLsizei, <span class="keyword">const</span> GLuint *);
04150 GLAPI <span class="keywordtype">void</span> APIENTRY glExecuteProgramNV (GLenum, GLuint, <span class="keyword">const</span> GLfloat *);
04151 GLAPI <span class="keywordtype">void</span> APIENTRY glGenProgramsNV (GLsizei, GLuint *);
04152 GLAPI <span class="keywordtype">void</span> APIENTRY glGetProgramParameterdvNV (GLenum, GLuint, GLenum, GLdouble *);
04153 GLAPI <span class="keywordtype">void</span> APIENTRY glGetProgramParameterfvNV (GLenum, GLuint, GLenum, GLfloat *);
04154 GLAPI <span class="keywordtype">void</span> APIENTRY glGetProgramivNV (GLuint, GLenum, GLint *);
04155 GLAPI <span class="keywordtype">void</span> APIENTRY glGetProgramStringNV (GLuint, GLenum, GLubyte *);
04156 GLAPI <span class="keywordtype">void</span> APIENTRY glGetTrackMatrixivNV (GLenum, GLuint, GLenum, GLint *);
04157 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVertexAttribdvNV (GLuint, GLenum, GLdouble *);
04158 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVertexAttribfvNV (GLuint, GLenum, GLfloat *);
04159 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVertexAttribivNV (GLuint, GLenum, GLint *);
04160 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVertexAttribPointervNV (GLuint, GLenum, GLvoid* *);
04161 GLAPI GLboolean APIENTRY glIsProgramNV (GLuint);
04162 GLAPI <span class="keywordtype">void</span> APIENTRY glLoadProgramNV (GLenum, GLuint, GLsizei, <span class="keyword">const</span> GLubyte *);
04163 GLAPI <span class="keywordtype">void</span> APIENTRY glProgramParameter4dNV (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
04164 GLAPI <span class="keywordtype">void</span> APIENTRY glProgramParameter4dvNV (GLenum, GLuint, <span class="keyword">const</span> GLdouble *);
04165 GLAPI <span class="keywordtype">void</span> APIENTRY glProgramParameter4fNV (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
04166 GLAPI <span class="keywordtype">void</span> APIENTRY glProgramParameter4fvNV (GLenum, GLuint, <span class="keyword">const</span> GLfloat *);
04167 GLAPI <span class="keywordtype">void</span> APIENTRY glProgramParameters4dvNV (GLenum, GLuint, GLuint, <span class="keyword">const</span> GLdouble *);
04168 GLAPI <span class="keywordtype">void</span> APIENTRY glProgramParameters4fvNV (GLenum, GLuint, GLuint, <span class="keyword">const</span> GLfloat *);
04169 GLAPI <span class="keywordtype">void</span> APIENTRY glRequestResidentProgramsNV (GLsizei, <span class="keyword">const</span> GLuint *);
04170 GLAPI <span class="keywordtype">void</span> APIENTRY glTrackMatrixNV (GLenum, GLuint, GLenum, GLenum);
04171 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribPointerNV (GLuint, GLint, GLenum, GLsizei, <span class="keyword">const</span> GLvoid *);
04172 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib1dNV (GLuint, GLdouble);
04173 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib1dvNV (GLuint, <span class="keyword">const</span> GLdouble *);
04174 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib1fNV (GLuint, GLfloat);
04175 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib1fvNV (GLuint, <span class="keyword">const</span> GLfloat *);
04176 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib1sNV (GLuint, GLshort);
04177 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib1svNV (GLuint, <span class="keyword">const</span> GLshort *);
04178 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib2dNV (GLuint, GLdouble, GLdouble);
04179 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib2dvNV (GLuint, <span class="keyword">const</span> GLdouble *);
04180 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib2fNV (GLuint, GLfloat, GLfloat);
04181 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib2fvNV (GLuint, <span class="keyword">const</span> GLfloat *);
04182 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib2sNV (GLuint, GLshort, GLshort);
04183 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib2svNV (GLuint, <span class="keyword">const</span> GLshort *);
04184 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib3dNV (GLuint, GLdouble, GLdouble, GLdouble);
04185 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib3dvNV (GLuint, <span class="keyword">const</span> GLdouble *);
04186 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib3fNV (GLuint, GLfloat, GLfloat, GLfloat);
04187 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib3fvNV (GLuint, <span class="keyword">const</span> GLfloat *);
04188 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib3sNV (GLuint, GLshort, GLshort, GLshort);
04189 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib3svNV (GLuint, <span class="keyword">const</span> GLshort *);
04190 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4dNV (GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
04191 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4dvNV (GLuint, <span class="keyword">const</span> GLdouble *);
04192 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4fNV (GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
04193 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4fvNV (GLuint, <span class="keyword">const</span> GLfloat *);
04194 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4sNV (GLuint, GLshort, GLshort, GLshort, GLshort);
04195 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4svNV (GLuint, <span class="keyword">const</span> GLshort *);
04196 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4ubNV (GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
04197 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttrib4ubvNV (GLuint, <span class="keyword">const</span> GLubyte *);
04198 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs1dvNV (GLuint, GLsizei, <span class="keyword">const</span> GLdouble *);
04199 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs1fvNV (GLuint, GLsizei, <span class="keyword">const</span> GLfloat *);
04200 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs1svNV (GLuint, GLsizei, <span class="keyword">const</span> GLshort *);
04201 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs2dvNV (GLuint, GLsizei, <span class="keyword">const</span> GLdouble *);
04202 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs2fvNV (GLuint, GLsizei, <span class="keyword">const</span> GLfloat *);
04203 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs2svNV (GLuint, GLsizei, <span class="keyword">const</span> GLshort *);
04204 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs3dvNV (GLuint, GLsizei, <span class="keyword">const</span> GLdouble *);
04205 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs3fvNV (GLuint, GLsizei, <span class="keyword">const</span> GLfloat *);
04206 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs3svNV (GLuint, GLsizei, <span class="keyword">const</span> GLshort *);
04207 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs4dvNV (GLuint, GLsizei, <span class="keyword">const</span> GLdouble *);
04208 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs4fvNV (GLuint, GLsizei, <span class="keyword">const</span> GLfloat *);
04209 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs4svNV (GLuint, GLsizei, <span class="keyword">const</span> GLshort *);
04210 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexAttribs4ubvNV (GLuint, GLsizei, <span class="keyword">const</span> GLubyte *);
04211 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04212 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, <span class="keyword">const</span> GLuint *programs, GLboolean *residences);
04213 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);
04214 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, <span class="keyword">const</span> GLuint *programs);
04215 <span class="keyword">typedef</span> void (APIENTRY * PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, <span class="keyword">const</span> GLfloat *params);
04216 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);
04217 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);
04218 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
04219 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);
04220 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);
04221 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);
04222 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);
04223 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);
04224 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);
04225 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
04226 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISPROGRAMNVPROC) (GLuint id);
04227 <span class="keyword">typedef</span> void (APIENTRY * PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, <span class="keyword">const</span> GLubyte *program);
04228 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
04229 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, <span class="keyword">const</span> GLdouble *v);
04230 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
04231 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, <span class="keyword">const</span> GLfloat *v);
04232 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, <span class="keyword">const</span> GLdouble *v);
04233 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, <span class="keyword">const</span> GLfloat *v);
04234 <span class="keyword">typedef</span> void (APIENTRY * PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, <span class="keyword">const</span> GLuint *programs);
04235 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
04236 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, <span class="keyword">const</span> GLvoid *pointer);
04237 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);
04238 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, <span class="keyword">const</span> GLdouble *v);
04239 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);
04240 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, <span class="keyword">const</span> GLfloat *v);
04241 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);
04242 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, <span class="keyword">const</span> GLshort *v);
04243 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);
04244 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, <span class="keyword">const</span> GLdouble *v);
04245 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);
04246 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, <span class="keyword">const</span> GLfloat *v);
04247 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);
04248 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, <span class="keyword">const</span> GLshort *v);
04249 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
04250 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, <span class="keyword">const</span> GLdouble *v);
04251 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
04252 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, <span class="keyword">const</span> GLfloat *v);
04253 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
04254 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, <span class="keyword">const</span> GLshort *v);
04255 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
04256 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, <span class="keyword">const</span> GLdouble *v);
04257 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
04258 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, <span class="keyword">const</span> GLfloat *v);
04259 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
04260 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, <span class="keyword">const</span> GLshort *v);
04261 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
04262 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, <span class="keyword">const</span> GLubyte *v);
04263 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLdouble *v);
04264 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLfloat *v);
04265 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLshort *v);
04266 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLdouble *v);
04267 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLfloat *v);
04268 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLshort *v);
04269 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLdouble *v);
04270 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLfloat *v);
04271 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLshort *v);
04272 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLdouble *v);
04273 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLfloat *v);
04274 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLshort *v);
04275 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, <span class="keyword">const</span> GLubyte *v);
04276 <span class="preprocessor">#endif</span>
04277 <span class="preprocessor"></span>
04278 <span class="preprocessor">#ifndef GL_SGIX_texture_coordinate_clamp</span>
04279 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_texture_coordinate_clamp 1</span>
04280 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04281 <span class="preprocessor"></span>
04282 <span class="preprocessor">#ifndef GL_SGIX_scalebias_hint</span>
04283 <span class="preprocessor"></span><span class="preprocessor">#define GL_SGIX_scalebias_hint 1</span>
04284 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04285 <span class="preprocessor"></span>
04286 <span class="preprocessor">#ifndef GL_OML_interlace</span>
04287 <span class="preprocessor"></span><span class="preprocessor">#define GL_OML_interlace 1</span>
04288 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04289 <span class="preprocessor"></span>
04290 <span class="preprocessor">#ifndef GL_OML_subsample</span>
04291 <span class="preprocessor"></span><span class="preprocessor">#define GL_OML_subsample 1</span>
04292 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04293 <span class="preprocessor"></span>
04294 <span class="preprocessor">#ifndef GL_OML_resample</span>
04295 <span class="preprocessor"></span><span class="preprocessor">#define GL_OML_resample 1</span>
04296 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04297 <span class="preprocessor"></span>
04298 <span class="preprocessor">#ifndef GL_NV_copy_depth_to_color</span>
04299 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_copy_depth_to_color 1</span>
04300 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04301 <span class="preprocessor"></span>
04302 <span class="preprocessor">#ifndef GL_ATI_envmap_bumpmap</span>
04303 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_envmap_bumpmap 1</span>
04304 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04305 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glTexBumpParameterivATI (GLenum, <span class="keyword">const</span> GLint *);
04306 GLAPI <span class="keywordtype">void</span> APIENTRY glTexBumpParameterfvATI (GLenum, <span class="keyword">const</span> GLfloat *);
04307 GLAPI <span class="keywordtype">void</span> APIENTRY glGetTexBumpParameterivATI (GLenum, GLint *);
04308 GLAPI <span class="keywordtype">void</span> APIENTRY glGetTexBumpParameterfvATI (GLenum, GLfloat *);
04309 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04310 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, <span class="keyword">const</span> GLint *param);
04311 <span class="keyword">typedef</span> void (APIENTRY * PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, <span class="keyword">const</span> GLfloat *param);
04312 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);
04313 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);
04314 <span class="preprocessor">#endif</span>
04315 <span class="preprocessor"></span>
04316 <span class="preprocessor">#ifndef GL_ATI_fragment_shader</span>
04317 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_fragment_shader 1</span>
04318 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04319 <span class="preprocessor"></span>GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint);
04320 GLAPI <span class="keywordtype">void</span> APIENTRY glBindFragmentShaderATI (GLuint);
04321 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteFragmentShaderATI (GLuint);
04322 GLAPI <span class="keywordtype">void</span> APIENTRY glBeginFragmentShaderATI (<span class="keywordtype">void</span>);
04323 GLAPI <span class="keywordtype">void</span> APIENTRY glEndFragmentShaderATI (<span class="keywordtype">void</span>);
04324 GLAPI <span class="keywordtype">void</span> APIENTRY glPassTexCoordATI (GLuint, GLuint, GLenum);
04325 GLAPI <span class="keywordtype">void</span> APIENTRY glSampleMapATI (GLuint, GLuint, GLenum);
04326 GLAPI <span class="keywordtype">void</span> APIENTRY glColorFragmentOp1ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
04327 GLAPI <span class="keywordtype">void</span> APIENTRY glColorFragmentOp2ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
04328 GLAPI <span class="keywordtype">void</span> APIENTRY glColorFragmentOp3ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
04329 GLAPI <span class="keywordtype">void</span> APIENTRY glAlphaFragmentOp1ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint);
04330 GLAPI <span class="keywordtype">void</span> APIENTRY glAlphaFragmentOp2ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
04331 GLAPI <span class="keywordtype">void</span> APIENTRY glAlphaFragmentOp3ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
04332 GLAPI <span class="keywordtype">void</span> APIENTRY glSetFragmentShaderConstantATI (GLuint, <span class="keyword">const</span> GLfloat *);
04333 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04334 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);
04335 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);
04336 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);
04337 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBEGINFRAGMENTSHADERATIPROC) (void);
04338 <span class="keyword">typedef</span> void (APIENTRY * PFNGLENDFRAGMENTSHADERATIPROC) (void);
04339 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);
04340 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);
04341 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
04342 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
04343 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
04344 <span class="keyword">typedef</span> void (APIENTRY * PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
04345 <span class="keyword">typedef</span> void (APIENTRY * PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
04346 <span class="keyword">typedef</span> void (APIENTRY * PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
04347 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, <span class="keyword">const</span> GLfloat *value);
04348 <span class="preprocessor">#endif</span>
04349 <span class="preprocessor"></span>
04350 <span class="preprocessor">#ifndef GL_ATI_pn_triangles</span>
04351 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_pn_triangles 1</span>
04352 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04353 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPNTrianglesiATI (GLenum, GLint);
04354 GLAPI <span class="keywordtype">void</span> APIENTRY glPNTrianglesfATI (GLenum, GLfloat);
04355 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04356 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);
04357 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);
04358 <span class="preprocessor">#endif</span>
04359 <span class="preprocessor"></span>
04360 <span class="preprocessor">#ifndef GL_ATI_vertex_array_object</span>
04361 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_vertex_array_object 1</span>
04362 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04363 <span class="preprocessor"></span>GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei, <span class="keyword">const</span> GLvoid *, GLenum);
04364 GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint);
04365 GLAPI <span class="keywordtype">void</span> APIENTRY glUpdateObjectBufferATI (GLuint, GLuint, GLsizei, <span class="keyword">const</span> GLvoid *, GLenum);
04366 GLAPI <span class="keywordtype">void</span> APIENTRY glGetObjectBufferfvATI (GLuint, GLenum, GLfloat *);
04367 GLAPI <span class="keywordtype">void</span> APIENTRY glGetObjectBufferivATI (GLuint, GLenum, GLint *);
04368 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteObjectBufferATI (GLuint);
04369 GLAPI <span class="keywordtype">void</span> APIENTRY glArrayObjectATI (GLenum, GLint, GLenum, GLsizei, GLuint, GLuint);
04370 GLAPI <span class="keywordtype">void</span> APIENTRY glGetArrayObjectfvATI (GLenum, GLenum, GLfloat *);
04371 GLAPI <span class="keywordtype">void</span> APIENTRY glGetArrayObjectivATI (GLenum, GLenum, GLint *);
04372 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantArrayObjectATI (GLuint, GLenum, GLsizei, GLuint, GLuint);
04373 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVariantArrayObjectfvATI (GLuint, GLenum, GLfloat *);
04374 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVariantArrayObjectivATI (GLuint, GLenum, GLint *);
04375 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04376 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, <span class="keyword">const</span> GLvoid *pointer, GLenum usage);
04377 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);
04378 <span class="keyword">typedef</span> void (APIENTRY * PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, <span class="keyword">const</span> GLvoid *pointer, GLenum preserve);
04379 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
04380 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
04381 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEOBJECTBUFFERATIPROC) (GLuint buffer);
04382 <span class="keyword">typedef</span> void (APIENTRY * PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
04383 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
04384 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
04385 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
04386 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
04387 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
04388 <span class="preprocessor">#endif</span>
04389 <span class="preprocessor"></span>
04390 <span class="preprocessor">#ifndef GL_EXT_vertex_shader</span>
04391 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_vertex_shader 1</span>
04392 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04393 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glBeginVertexShaderEXT (<span class="keywordtype">void</span>);
04394 GLAPI <span class="keywordtype">void</span> APIENTRY glEndVertexShaderEXT (<span class="keywordtype">void</span>);
04395 GLAPI <span class="keywordtype">void</span> APIENTRY glBindVertexShaderEXT (GLuint);
04396 GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint);
04397 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteVertexShaderEXT (GLuint);
04398 GLAPI <span class="keywordtype">void</span> APIENTRY glShaderOp1EXT (GLenum, GLuint, GLuint);
04399 GLAPI <span class="keywordtype">void</span> APIENTRY glShaderOp2EXT (GLenum, GLuint, GLuint, GLuint);
04400 GLAPI <span class="keywordtype">void</span> APIENTRY glShaderOp3EXT (GLenum, GLuint, GLuint, GLuint, GLuint);
04401 GLAPI <span class="keywordtype">void</span> APIENTRY glSwizzleEXT (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum);
04402 GLAPI <span class="keywordtype">void</span> APIENTRY glWriteMaskEXT (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum);
04403 GLAPI <span class="keywordtype">void</span> APIENTRY glInsertComponentEXT (GLuint, GLuint, GLuint);
04404 GLAPI <span class="keywordtype">void</span> APIENTRY glExtractComponentEXT (GLuint, GLuint, GLuint);
04405 GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum, GLenum, GLenum, GLuint);
04406 GLAPI <span class="keywordtype">void</span> APIENTRY glSetInvariantEXT (GLuint, GLenum, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
04407 GLAPI <span class="keywordtype">void</span> APIENTRY glSetLocalConstantEXT (GLuint, GLenum, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
04408 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantbvEXT (GLuint, <span class="keyword">const</span> GLbyte *);
04409 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantsvEXT (GLuint, <span class="keyword">const</span> GLshort *);
04410 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantivEXT (GLuint, <span class="keyword">const</span> GLint *);
04411 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantfvEXT (GLuint, <span class="keyword">const</span> GLfloat *);
04412 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantdvEXT (GLuint, <span class="keyword">const</span> GLdouble *);
04413 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantubvEXT (GLuint, <span class="keyword">const</span> GLubyte *);
04414 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantusvEXT (GLuint, <span class="keyword">const</span> GLushort *);
04415 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantuivEXT (GLuint, <span class="keyword">const</span> GLuint *);
04416 GLAPI <span class="keywordtype">void</span> APIENTRY glVariantPointerEXT (GLuint, GLenum, GLuint, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
04417 GLAPI <span class="keywordtype">void</span> APIENTRY glEnableVariantClientStateEXT (GLuint);
04418 GLAPI <span class="keywordtype">void</span> APIENTRY glDisableVariantClientStateEXT (GLuint);
04419 GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum, GLenum);
04420 GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum, GLenum);
04421 GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum, GLenum, GLenum);
04422 GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum, GLenum);
04423 GLAPI GLuint APIENTRY glBindParameterEXT (GLenum);
04424 GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint, GLenum);
04425 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVariantBooleanvEXT (GLuint, GLenum, GLboolean *);
04426 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVariantIntegervEXT (GLuint, GLenum, GLint *);
04427 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVariantFloatvEXT (GLuint, GLenum, GLfloat *);
04428 GLAPI <span class="keywordtype">void</span> APIENTRY glGetVariantPointervEXT (GLuint, GLenum, GLvoid* *);
04429 GLAPI <span class="keywordtype">void</span> APIENTRY glGetInvariantBooleanvEXT (GLuint, GLenum, GLboolean *);
04430 GLAPI <span class="keywordtype">void</span> APIENTRY glGetInvariantIntegervEXT (GLuint, GLenum, GLint *);
04431 GLAPI <span class="keywordtype">void</span> APIENTRY glGetInvariantFloatvEXT (GLuint, GLenum, GLfloat *);
04432 GLAPI <span class="keywordtype">void</span> APIENTRY glGetLocalConstantBooleanvEXT (GLuint, GLenum, GLboolean *);
04433 GLAPI <span class="keywordtype">void</span> APIENTRY glGetLocalConstantIntegervEXT (GLuint, GLenum, GLint *);
04434 GLAPI <span class="keywordtype">void</span> APIENTRY glGetLocalConstantFloatvEXT (GLuint, GLenum, GLfloat *);
04435 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04436 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBEGINVERTEXSHADEREXTPROC) (void);
04437 <span class="keyword">typedef</span> void (APIENTRY * PFNGLENDVERTEXSHADEREXTPROC) (void);
04438 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);
04439 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);
04440 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);
04441 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);
04442 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
04443 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
04444 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
04445 <span class="keyword">typedef</span> void (APIENTRY * PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
04446 <span class="keyword">typedef</span> void (APIENTRY * PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
04447 <span class="keyword">typedef</span> void (APIENTRY * PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
04448 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
04449 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, <span class="keyword">const</span> <span class="keywordtype">void</span> *addr);
04450 <span class="keyword">typedef</span> void (APIENTRY * PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, <span class="keyword">const</span> <span class="keywordtype">void</span> *addr);
04451 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTBVEXTPROC) (GLuint id, <span class="keyword">const</span> GLbyte *addr);
04452 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTSVEXTPROC) (GLuint id, <span class="keyword">const</span> GLshort *addr);
04453 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTIVEXTPROC) (GLuint id, <span class="keyword">const</span> GLint *addr);
04454 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTFVEXTPROC) (GLuint id, <span class="keyword">const</span> GLfloat *addr);
04455 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTDVEXTPROC) (GLuint id, <span class="keyword">const</span> GLdouble *addr);
04456 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTUBVEXTPROC) (GLuint id, <span class="keyword">const</span> GLubyte *addr);
04457 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTUSVEXTPROC) (GLuint id, <span class="keyword">const</span> GLushort *addr);
04458 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTUIVEXTPROC) (GLuint id, <span class="keyword">const</span> GLuint *addr);
04459 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, <span class="keyword">const</span> <span class="keywordtype">void</span> *addr);
04460 <span class="keyword">typedef</span> void (APIENTRY * PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
04461 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
04462 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);
04463 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);
04464 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);
04465 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);
04466 <span class="keyword">typedef</span> GLuint (APIENTRY * PFNGLBINDPARAMETEREXTPROC) (GLenum value);
04467 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);
04468 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
04469 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
04470 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
04471 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);
04472 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
04473 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
04474 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
04475 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
04476 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
04477 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
04478 <span class="preprocessor">#endif</span>
04479 <span class="preprocessor"></span>
04480 <span class="preprocessor">#ifndef GL_ATI_vertex_streams</span>
04481 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_vertex_streams 1</span>
04482 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04483 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1sATI (GLenum, GLshort);
04484 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1svATI (GLenum, <span class="keyword">const</span> GLshort *);
04485 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1iATI (GLenum, GLint);
04486 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1ivATI (GLenum, <span class="keyword">const</span> GLint *);
04487 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1fATI (GLenum, GLfloat);
04488 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1fvATI (GLenum, <span class="keyword">const</span> GLfloat *);
04489 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1dATI (GLenum, GLdouble);
04490 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream1dvATI (GLenum, <span class="keyword">const</span> GLdouble *);
04491 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2sATI (GLenum, GLshort, GLshort);
04492 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2svATI (GLenum, <span class="keyword">const</span> GLshort *);
04493 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2iATI (GLenum, GLint, GLint);
04494 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2ivATI (GLenum, <span class="keyword">const</span> GLint *);
04495 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2fATI (GLenum, GLfloat, GLfloat);
04496 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2fvATI (GLenum, <span class="keyword">const</span> GLfloat *);
04497 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2dATI (GLenum, GLdouble, GLdouble);
04498 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream2dvATI (GLenum, <span class="keyword">const</span> GLdouble *);
04499 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3sATI (GLenum, GLshort, GLshort, GLshort);
04500 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3svATI (GLenum, <span class="keyword">const</span> GLshort *);
04501 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3iATI (GLenum, GLint, GLint, GLint);
04502 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3ivATI (GLenum, <span class="keyword">const</span> GLint *);
04503 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3fATI (GLenum, GLfloat, GLfloat, GLfloat);
04504 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3fvATI (GLenum, <span class="keyword">const</span> GLfloat *);
04505 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3dATI (GLenum, GLdouble, GLdouble, GLdouble);
04506 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream3dvATI (GLenum, <span class="keyword">const</span> GLdouble *);
04507 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4sATI (GLenum, GLshort, GLshort, GLshort, GLshort);
04508 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4svATI (GLenum, <span class="keyword">const</span> GLshort *);
04509 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4iATI (GLenum, GLint, GLint, GLint, GLint);
04510 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4ivATI (GLenum, <span class="keyword">const</span> GLint *);
04511 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4fATI (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
04512 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4fvATI (GLenum, <span class="keyword">const</span> GLfloat *);
04513 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4dATI (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
04514 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexStream4dvATI (GLenum, <span class="keyword">const</span> GLdouble *);
04515 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3bATI (GLenum, GLbyte, GLbyte, GLbyte);
04516 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3bvATI (GLenum, <span class="keyword">const</span> GLbyte *);
04517 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3sATI (GLenum, GLshort, GLshort, GLshort);
04518 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3svATI (GLenum, <span class="keyword">const</span> GLshort *);
04519 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3iATI (GLenum, GLint, GLint, GLint);
04520 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3ivATI (GLenum, <span class="keyword">const</span> GLint *);
04521 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3fATI (GLenum, GLfloat, GLfloat, GLfloat);
04522 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3fvATI (GLenum, <span class="keyword">const</span> GLfloat *);
04523 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3dATI (GLenum, GLdouble, GLdouble, GLdouble);
04524 GLAPI <span class="keywordtype">void</span> APIENTRY glNormalStream3dvATI (GLenum, <span class="keyword">const</span> GLdouble *);
04525 GLAPI <span class="keywordtype">void</span> APIENTRY glClientActiveVertexStreamATI (GLenum);
04526 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexBlendEnviATI (GLenum, GLint);
04527 GLAPI <span class="keywordtype">void</span> APIENTRY glVertexBlendEnvfATI (GLenum, GLfloat);
04528 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04529 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);
04530 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, <span class="keyword">const</span> GLshort *coords);
04531 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);
04532 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, <span class="keyword">const</span> GLint *coords);
04533 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);
04534 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, <span class="keyword">const</span> GLfloat *coords);
04535 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);
04536 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, <span class="keyword">const</span> GLdouble *coords);
04537 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);
04538 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, <span class="keyword">const</span> GLshort *coords);
04539 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);
04540 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, <span class="keyword">const</span> GLint *coords);
04541 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);
04542 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, <span class="keyword">const</span> GLfloat *coords);
04543 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);
04544 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, <span class="keyword">const</span> GLdouble *coords);
04545 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
04546 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, <span class="keyword">const</span> GLshort *coords);
04547 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
04548 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, <span class="keyword">const</span> GLint *coords);
04549 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
04550 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, <span class="keyword">const</span> GLfloat *coords);
04551 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
04552 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, <span class="keyword">const</span> GLdouble *coords);
04553 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
04554 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, <span class="keyword">const</span> GLshort *coords);
04555 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);
04556 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, <span class="keyword">const</span> GLint *coords);
04557 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
04558 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, <span class="keyword">const</span> GLfloat *coords);
04559 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
04560 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, <span class="keyword">const</span> GLdouble *coords);
04561 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
04562 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, <span class="keyword">const</span> GLbyte *coords);
04563 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
04564 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, <span class="keyword">const</span> GLshort *coords);
04565 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);
04566 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, <span class="keyword">const</span> GLint *coords);
04567 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
04568 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, <span class="keyword">const</span> GLfloat *coords);
04569 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
04570 <span class="keyword">typedef</span> void (APIENTRY * PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, <span class="keyword">const</span> GLdouble *coords);
04571 <span class="keyword">typedef</span> void (APIENTRY * PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);
04572 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);
04573 <span class="keyword">typedef</span> void (APIENTRY * PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);
04574 <span class="preprocessor">#endif</span>
04575 <span class="preprocessor"></span>
04576 <span class="preprocessor">#ifndef GL_ATI_element_array</span>
04577 <span class="preprocessor"></span><span class="preprocessor">#define GL_ATI_element_array 1</span>
04578 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04579 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glElementPointerATI (GLenum, <span class="keyword">const</span> GLvoid *);
04580 GLAPI <span class="keywordtype">void</span> APIENTRY glDrawElementArrayATI (GLenum, GLsizei);
04581 GLAPI <span class="keywordtype">void</span> APIENTRY glDrawRangeElementArrayATI (GLenum, GLuint, GLuint, GLsizei);
04582 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04583 <span class="keyword">typedef</span> void (APIENTRY * PFNGLELEMENTPOINTERATIPROC) (GLenum type, <span class="keyword">const</span> GLvoid *pointer);
04584 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);
04585 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);
04586 <span class="preprocessor">#endif</span>
04587 <span class="preprocessor"></span>
04588 <span class="preprocessor">#ifndef GL_SUN_mesh_array</span>
04589 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUN_mesh_array 1</span>
04590 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04591 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glDrawMeshArraysSUN (GLenum, GLint, GLsizei, GLsizei);
04592 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04593 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);
04594 <span class="preprocessor">#endif</span>
04595 <span class="preprocessor"></span>
04596 <span class="preprocessor">#ifndef GL_SUN_slice_accum</span>
04597 <span class="preprocessor"></span><span class="preprocessor">#define GL_SUN_slice_accum 1</span>
04598 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04599 <span class="preprocessor"></span>
04600 <span class="preprocessor">#ifndef GL_NV_multisample_filter_hint</span>
04601 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_multisample_filter_hint 1</span>
04602 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04603 <span class="preprocessor"></span>
04604 <span class="preprocessor">#ifndef GL_NV_depth_clamp</span>
04605 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_depth_clamp 1</span>
04606 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04607 <span class="preprocessor"></span>
04608 <span class="preprocessor">#ifndef GL_NV_occlusion_query</span>
04609 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_occlusion_query 1</span>
04610 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04611 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glGenOcclusionQueriesNV (GLsizei, GLuint *);
04612 GLAPI <span class="keywordtype">void</span> APIENTRY glDeleteOcclusionQueriesNV (GLsizei, <span class="keyword">const</span> GLuint *);
04613 GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint);
04614 GLAPI <span class="keywordtype">void</span> APIENTRY glBeginOcclusionQueryNV (GLuint);
04615 GLAPI <span class="keywordtype">void</span> APIENTRY glEndOcclusionQueryNV (<span class="keywordtype">void</span>);
04616 GLAPI <span class="keywordtype">void</span> APIENTRY glGetOcclusionQueryivNV (GLuint, GLenum, GLint *);
04617 GLAPI <span class="keywordtype">void</span> APIENTRY glGetOcclusionQueryuivNV (GLuint, GLenum, GLuint *);
04618 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04619 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);
04620 <span class="keyword">typedef</span> void (APIENTRY * PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, <span class="keyword">const</span> GLuint *ids);
04621 <span class="keyword">typedef</span> GLboolean (APIENTRY * PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);
04622 <span class="keyword">typedef</span> void (APIENTRY * PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);
04623 <span class="keyword">typedef</span> void (APIENTRY * PFNGLENDOCCLUSIONQUERYNVPROC) (void);
04624 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);
04625 <span class="keyword">typedef</span> void (APIENTRY * PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);
04626 <span class="preprocessor">#endif</span>
04627 <span class="preprocessor"></span>
04628 <span class="preprocessor">#ifndef GL_NV_point_sprite</span>
04629 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_point_sprite 1</span>
04630 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04631 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameteriNV (GLenum, GLint);
04632 GLAPI <span class="keywordtype">void</span> APIENTRY glPointParameterivNV (GLenum, <span class="keyword">const</span> GLint *);
04633 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04634 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);
04635 <span class="keyword">typedef</span> void (APIENTRY * PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, <span class="keyword">const</span> GLint *params);
04636 <span class="preprocessor">#endif</span>
04637 <span class="preprocessor"></span>
04638 <span class="preprocessor">#ifndef GL_NV_texture_shader3</span>
04639 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_texture_shader3 1</span>
04640 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04641 <span class="preprocessor"></span>
04642 <span class="preprocessor">#ifndef GL_NV_vertex_program1_1</span>
04643 <span class="preprocessor"></span><span class="preprocessor">#define GL_NV_vertex_program1_1 1</span>
04644 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04645 <span class="preprocessor"></span>
04646 <span class="preprocessor">#ifndef GL_EXT_shadow_funcs</span>
04647 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_shadow_funcs 1</span>
04648 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
04649 <span class="preprocessor"></span>
04650 <span class="preprocessor">#ifndef GL_EXT_stencil_two_side</span>
04651 <span class="preprocessor"></span><span class="preprocessor">#define GL_EXT_stencil_two_side 1</span>
04652 <span class="preprocessor"></span><span class="preprocessor">#ifdef GL_GLEXT_PROTOTYPES</span>
04653 <span class="preprocessor"></span>GLAPI <span class="keywordtype">void</span> APIENTRY glActiveStencilFaceEXT (GLenum);
04654 <span class="preprocessor">#endif </span><span class="comment">/* GL_GLEXT_PROTOTYPES */</span>
04655 <span class="keyword">typedef</span> void (APIENTRY * PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);
04656 <span class="preprocessor">#endif</span>
04657 <span class="preprocessor"></span>
04658 
04659 <span class="preprocessor">#ifdef __cplusplus</span>
04660 <span class="preprocessor"></span>}
04661 <span class="preprocessor">#endif</span>
04662 <span class="preprocessor"></span>
04663 <span class="preprocessor">#endif</span>
</pre></div><hr><address style="align: right;"><small>Generated on Sun Mar 2 01:14:22 2003 for AE Engine by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.3-rc2 </small></address>
</body>
</html>
