<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>vector.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3-rc2 -->
<center>
<a class="qindex" href="index.php">Main Page</a> &nbsp; <a class="qindex" href="modules.php">Modules</a> &nbsp; <a class="qindex" href="hierarchy.php">Class Hierarchy</a> &nbsp; <a class="qindex" href="classes.php">Alphabetical List</a> &nbsp; <a class="qindex" href="annotated.php">Compound List</a> &nbsp; <a class="qindex" href="files.php">File List</a> &nbsp; <a class="qindex" href="functions.php">Compound Members</a> &nbsp; </center>
<hr><h1>vector.h</h1><div class="fragment"><pre>00001 <span class="comment">/*</span>
00002 <span class="comment"> *  AE Engine</span>
00003 <span class="comment"> *</span>
00004 <span class="comment"> *  Copyright (C) 2003 Riku "Rakkis" Nurminen</span>
00005 <span class="comment"> *</span>
00006 <span class="comment"> *  This program is free software; you can redistribute it and/or modify</span>
00007 <span class="comment"> *  it under the terms of the GNU General Public License as published by</span>
00008 <span class="comment"> *  the Free Software Foundation; either version 2 of the License, or</span>
00009 <span class="comment"> *  (at your option) any later version.</span>
00010 <span class="comment"> *</span>
00011 <span class="comment"> *  This program is distributed in the hope that it will be useful,</span>
00012 <span class="comment"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
00013 <span class="comment"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
00014 <span class="comment"> *  GNU General Public License for more details.</span>
00015 <span class="comment"> *</span>
00016 <span class="comment"> *  You should have received a copy of the GNU General Public License</span>
00017 <span class="comment"> *  along with this program; if not, write to the Free Software</span>
00018 <span class="comment"> *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
00019 <span class="comment"> *</span>
00020 <span class="comment"> */</span>
00021 
00022 <span class="preprocessor">#ifndef __AELIB_AEGEOM_VECTOR_H__</span>
00023 <span class="preprocessor"></span><span class="preprocessor">#define __AELIB_AEGEOM_VECTOR_H__</span>
00024 <span class="preprocessor"></span>
00025 <span class="preprocessor">#define ONLY_INCLUDE_STD</span>
00026 <span class="preprocessor"></span><span class="preprocessor">#include &lt;aedefs.h&gt;</span>
00027 <span class="preprocessor">#undef ONLY_INCLUDE_STD</span>
00028 <span class="preprocessor"></span>
<a name="l00033"></a><a class="code" href="classaeVector.php">00033</a> <span class="keyword">class </span><a class="code" href="classaeVector.php">aeVector</a> {
00034         AECF_CNDEF
00035 
00036  <span class="keyword">public</span>:
00041         <a class="code" href="classaeVector.php#a0">aeVector</a>();
00042 
<a name="l00049"></a><a class="code" href="classaeVector.php#a1">00049</a>         <a class="code" href="classaeVector.php#a0">aeVector</a>(<span class="keywordtype">float</span> nx, <span class="keywordtype">float</span> ny = 0) : <a class="code" href="classaeVector.php#m0">x</a>(nx), <a class="code" href="classaeVector.php#m1">y</a>(ny) {}
00050 
<a name="l00056"></a><a class="code" href="classaeVector.php#a2">00056</a>         <a class="code" href="classaeVector.php#a0">aeVector</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v) : <a class="code" href="classaeVector.php#m0">x</a>(v.<a class="code" href="classaeVector.php#m0">x</a>), <a class="code" href="classaeVector.php#m1">y</a>(v.<a class="code" href="classaeVector.php#m1">y</a>) {}
00057 
00058         ~<a class="code" href="classaeVector.php">aeVector</a>() {};
00059 
<a name="l00061"></a><a class="code" href="classaeVector.php#m0">00061</a>         <span class="keywordtype">float</span> <a class="code" href="classaeVector.php#m0">x</a>;
<a name="l00063"></a><a class="code" href="classaeVector.php#m1">00063</a>         <span class="keywordtype">float</span> <a class="code" href="classaeVector.php#m1">y</a>;
00064 
<a name="l00073"></a><a class="code" href="classaeVector.php#l0">00073</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a8">operator+</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v2) {
00074                 <span class="keywordflow">return</span> <a class="code" href="classaeVector.php#a0">aeVector</a>(v1.x + v2.x, v1.y + v2.y);
00075         }
00076 
<a name="l00085"></a><a class="code" href="classaeVector.php#l1">00085</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a9">operator-</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v2) {
00086                 <span class="keywordflow">return</span> <a class="code" href="classaeVector.php#a0">aeVector</a>(v1.x - v2.x, v1.y - v2.y);
00087         }
00088 
<a name="l00097"></a><a class="code" href="classaeVector.php#l2">00097</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keywordtype">float</span> <a class="code" href="classaeVector.php#l2">operator*</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v2) {
00098                 <span class="keywordflow">return</span> (v1.x * v2.x) + (v1.y * v2.y);
00099         }
00100 
<a name="l00109"></a><a class="code" href="classaeVector.php#l3">00109</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#l2">operator*</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keywordtype">float</span> s) {
00110                 <span class="keywordflow">return</span> <a class="code" href="classaeVector.php#a0">aeVector</a>(v1.x * s, v1.y * s);
00111         }
00112 
<a name="l00121"></a><a class="code" href="classaeVector.php#l4">00121</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#l2">operator*</a>(<span class="keywordtype">float</span> s, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1) {
00122                 <span class="keywordflow">return</span> <a class="code" href="classaeVector.php#a0">aeVector</a>(v1.x * s, v1.y * s);
00123         }
00124 
<a name="l00133"></a><a class="code" href="classaeVector.php#l5">00133</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#l2">operator*</a>(<span class="keywordtype">int</span> s, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1) {
00134                 <span class="keywordflow">return</span> v1 * (float)s;
00135         }
00136 
<a name="l00145"></a><a class="code" href="classaeVector.php#l6">00145</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#l6">operator/</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keywordtype">float</span> s) {
00146                 s = 1.0f / s;
00147                 <span class="keywordflow">return</span> <a class="code" href="classaeVector.php#a0">aeVector</a>(v1.x * s, v1.y * s);
00148         }
00149 
<a name="l00158"></a><a class="code" href="classaeVector.php#l7">00158</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#l6">operator/</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keywordtype">int</span> s) {
00159                 <span class="keywordflow">return</span> (v1 / (float)s);
00160         }
00161 
<a name="l00170"></a><a class="code" href="classaeVector.php#l8">00170</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="classaeVector.php#l8">operator==</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v2) {
00171                 <span class="keywordflow">return</span> v1.x == v2.x &amp;&amp; v1.y == v2.y;
00172         }
00173 
<a name="l00182"></a><a class="code" href="classaeVector.php#l9">00182</a>         <span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="classaeVector.php#l9">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v2) {
00183                 <span class="keywordflow">return</span> v1.x != v2.x || v1.y != v2.y;
00184         }
00185 
<a name="l00193"></a><a class="code" href="classaeVector.php#a4">00193</a>         <span class="keyword">inline</span> <a class="code" href="classaeVector.php">aeVector</a> &amp; <a class="code" href="classaeVector.php#a4">operator+=</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1) {
00194                 x += v1.x;
00195                 y += v1.y;
00196                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
00197         }
00198 
<a name="l00206"></a><a class="code" href="classaeVector.php#a5">00206</a>         <span class="keyword">inline</span> <a class="code" href="classaeVector.php">aeVector</a> &amp; <a class="code" href="classaeVector.php#a5">operator-=</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1) {
00207                 x -= v1.x;
00208                 y -= v1.y;
00209                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
00210         }
00211 
<a name="l00219"></a><a class="code" href="classaeVector.php#a6">00219</a>         <span class="keyword">inline</span> <a class="code" href="classaeVector.php">aeVector</a> &amp; <a class="code" href="classaeVector.php#a6">operator*=</a>(<span class="keywordtype">float</span> s) {
00220                 x *= s;
00221                 y *= s;
00222                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
00223         }
00224 
<a name="l00232"></a><a class="code" href="classaeVector.php#a7">00232</a>         <span class="keyword">inline</span> <a class="code" href="classaeVector.php">aeVector</a> &amp; <a class="code" href="classaeVector.php#a7">operator/=</a>(<span class="keywordtype">float</span> s) {
00233                 s = 1.0f / s;
00234                 x *= s;
00235                 y *= s;
00236                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
00237         }
00238 
<a name="l00245"></a><a class="code" href="classaeVector.php#a8">00245</a>         <span class="keyword">inline</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a8">operator+</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> *<span class="keyword">this</span>; }
00246 
<a name="l00253"></a><a class="code" href="classaeVector.php#a9">00253</a>         <span class="keyword">inline</span> <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a9">operator-</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classaeVector.php#a0">aeVector</a>(-x, -y); }
00254 
<a name="l00261"></a><a class="code" href="classaeVector.php#a10">00261</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classaeVector.php#a10">Set</a>(<span class="keywordtype">float</span> nx, <span class="keywordtype">float</span> ny) {
00262                 x = nx;
00263                 y = ny;
00264         }
00265 
<a name="l00271"></a><a class="code" href="classaeVector.php#a11">00271</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classaeVector.php#a10">Set</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v) {
00272                 x = v.x;
00273                 y = v.y;
00274         }
00275 
00282         <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a12">Cross</a>(<span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classaeVector.php">aeVector</a> &amp;v2);
00283 
00290         <span class="keywordtype">float</span> <a class="code" href="classaeVector.php#a13">Magnitude</a>() <span class="keyword">const</span>;
00291 
<a name="l00299"></a><a class="code" href="classaeVector.php#a14">00299</a>         <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a14">Unit</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classaeVector.php#a15">Normalize</a>(); }
00300 
00307         <a class="code" href="classaeVector.php">aeVector</a> <a class="code" href="classaeVector.php#a15">Normalize</a>() <span class="keyword">const</span>;
00308 };
00309 
00310 <span class="preprocessor">#endif // __AELIB_AEGEOM_VECTOR_H__</span>
</pre></div><hr><address style="align: right;"><small>Generated on Sun Mar 2 01:14:22 2003 for AE Engine by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.3-rc2 </small></address>
</body>
</html>
